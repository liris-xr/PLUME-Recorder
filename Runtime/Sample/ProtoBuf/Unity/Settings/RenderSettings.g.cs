// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: plume/sample/unity/settings/render_settings.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PLUME.Sample.Unity.Settings {

  /// <summary>Holder for reflection information generated from plume/sample/unity/settings/render_settings.proto</summary>
  public static partial class RenderSettingsReflection {

    #region Descriptor
    /// <summary>File descriptor for plume/sample/unity/settings/render_settings.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RenderSettingsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjFwbHVtZS9zYW1wbGUvdW5pdHkvc2V0dGluZ3MvcmVuZGVyX3NldHRpbmdz",
            "LnByb3RvEhtwbHVtZS5zYW1wbGUudW5pdHkuc2V0dGluZ3MaJHBsdW1lL3Nh",
            "bXBsZS91bml0eS9pZGVudGlmaWVycy5wcm90bxofcGx1bWUvc2FtcGxlL2Nv",
            "bW1vbi9jb2xvci5wcm90bxowcGx1bWUvc2FtcGxlL2NvbW1vbi9zcGhlcmlj",
            "YWxfaGFybW9uaWNzX2wyLnByb3RvIqQQChRSZW5kZXJTZXR0aW5nc1VwZGF0",
            "ZRJACgZza3lib3gYASABKAsyIy5wbHVtZS5zYW1wbGUudW5pdHkuQXNzZXRJ",
            "ZGVudGlmaWVySABSBnNreWJveIgBARI+CgNzdW4YAiABKAsyJy5wbHVtZS5z",
            "YW1wbGUudW5pdHkuQ29tcG9uZW50SWRlbnRpZmllckgBUgNzdW6IAQESFQoD",
            "Zm9nGAMgASgISAJSA2ZvZ4gBARJECghmb2dfbW9kZRgEIAEoDjIkLnBsdW1l",
            "LnNhbXBsZS51bml0eS5zZXR0aW5ncy5Gb2dNb2RlSANSB2ZvZ01vZGWIAQES",
            "PAoJZm9nX2NvbG9yGAUgASgLMhoucGx1bWUuc2FtcGxlLmNvbW1vbi5Db2xv",
            "ckgEUghmb2dDb2xvcogBARIkCgtmb2dfZGVuc2l0eRgGIAEoAkgFUgpmb2dE",
            "ZW5zaXR5iAEBEjEKEmZvZ19zdGFydF9kaXN0YW5jZRgHIAEoAkgGUhBmb2dT",
            "dGFydERpc3RhbmNliAEBEi0KEGZvZ19lbmRfZGlzdGFuY2UYCCABKAJIB1IO",
            "Zm9nRW5kRGlzdGFuY2WIAQESRAoNYW1iaWVudF9jb2xvchgJIAEoCzIaLnBs",
            "dW1lLnNhbXBsZS5jb21tb24uQ29sb3JICFIMYW1iaWVudENvbG9yiAEBElMK",
            "FWFtYmllbnRfZXF1YXRvcl9jb2xvchgKIAEoCzIaLnBsdW1lLnNhbXBsZS5j",
            "b21tb24uQ29sb3JICVITYW1iaWVudEVxdWF0b3JDb2xvcogBARJRChRhbWJp",
            "ZW50X2dyb3VuZF9jb2xvchgLIAEoCzIaLnBsdW1lLnNhbXBsZS5jb21tb24u",
            "Q29sb3JIClISYW1iaWVudEdyb3VuZENvbG9yiAEBEksKEWFtYmllbnRfc2t5",
            "X2NvbG9yGAwgASgLMhoucGx1bWUuc2FtcGxlLmNvbW1vbi5Db2xvckgLUg9h",
            "bWJpZW50U2t5Q29sb3KIAQESMAoRYW1iaWVudF9pbnRlbnNpdHkYDSABKAJI",
            "DFIQYW1iaWVudEludGVuc2l0eYgBARJQCgxhbWJpZW50X21vZGUYDiABKA4y",
            "KC5wbHVtZS5zYW1wbGUudW5pdHkuc2V0dGluZ3MuQW1iaWVudE1vZGVIDVIL",
            "YW1iaWVudE1vZGWIAQESUwoNYW1iaWVudF9wcm9iZRgPIAEoCzIpLnBsdW1l",
            "LnNhbXBsZS5jb21tb24uU3BoZXJpY2FsSGFybW9uaWNzTDJIDlIMYW1iaWVu",
            "dFByb2JliAEBEmQKGWN1c3RvbV9yZWZsZWN0aW9uX3RleHR1cmUYECABKAsy",
            "Iy5wbHVtZS5zYW1wbGUudW5pdHkuQXNzZXRJZGVudGlmaWVySA9SF2N1c3Rv",
            "bVJlZmxlY3Rpb25UZXh0dXJliAEBEm8KF2RlZmF1bHRfcmVmbGVjdGlvbl9t",
            "b2RlGBEgASgOMjIucGx1bWUuc2FtcGxlLnVuaXR5LnNldHRpbmdzLkRlZmF1",
            "bHRSZWZsZWN0aW9uTW9kZUgQUhVkZWZhdWx0UmVmbGVjdGlvbk1vZGWIAQES",
            "RwodZGVmYXVsdF9yZWZsZWN0aW9uX3Jlc29sdXRpb24YEiABKAVIEVIbZGVm",
            "YXVsdFJlZmxlY3Rpb25SZXNvbHV0aW9uiAEBEjIKEnJlZmxlY3Rpb25fYm91",
            "bmNlcxgTIAEoBUgSUhFyZWZsZWN0aW9uQm91bmNlc4gBARI2ChRyZWZsZWN0",
            "aW9uX2ludGVuc2l0eRgUIAEoAkgTUhNyZWZsZWN0aW9uSW50ZW5zaXR5iAEB",
            "EigKDWhhbG9fc3RyZW5ndGgYFSABKAJIFFIMaGFsb1N0cmVuZ3RoiAEBEioK",
            "DmZsYXJlX3N0cmVuZ3RoGBYgASgCSBVSDWZsYXJlU3RyZW5ndGiIAQESLQoQ",
            "ZmxhcmVfZmFkZV9zcGVlZBgXIAEoAkgWUg5mbGFyZUZhZGVTcGVlZIgBARJZ",
            "ChhzdWJ0cmFjdGl2ZV9zaGFkb3dfY29sb3IYGCABKAsyGi5wbHVtZS5zYW1w",
            "bGUuY29tbW9uLkNvbG9ySBdSFnN1YnRyYWN0aXZlU2hhZG93Q29sb3KIAQFC",
            "CQoHX3NreWJveEIGCgRfc3VuQgYKBF9mb2dCCwoJX2ZvZ19tb2RlQgwKCl9m",
            "b2dfY29sb3JCDgoMX2ZvZ19kZW5zaXR5QhUKE19mb2dfc3RhcnRfZGlzdGFu",
            "Y2VCEwoRX2ZvZ19lbmRfZGlzdGFuY2VCEAoOX2FtYmllbnRfY29sb3JCGAoW",
            "X2FtYmllbnRfZXF1YXRvcl9jb2xvckIXChVfYW1iaWVudF9ncm91bmRfY29s",
            "b3JCFAoSX2FtYmllbnRfc2t5X2NvbG9yQhQKEl9hbWJpZW50X2ludGVuc2l0",
            "eUIPCg1fYW1iaWVudF9tb2RlQhAKDl9hbWJpZW50X3Byb2JlQhwKGl9jdXN0",
            "b21fcmVmbGVjdGlvbl90ZXh0dXJlQhoKGF9kZWZhdWx0X3JlZmxlY3Rpb25f",
            "bW9kZUIgCh5fZGVmYXVsdF9yZWZsZWN0aW9uX3Jlc29sdXRpb25CFQoTX3Jl",
            "ZmxlY3Rpb25fYm91bmNlc0IXChVfcmVmbGVjdGlvbl9pbnRlbnNpdHlCEAoO",
            "X2hhbG9fc3RyZW5ndGhCEQoPX2ZsYXJlX3N0cmVuZ3RoQhMKEV9mbGFyZV9m",
            "YWRlX3NwZWVkQhsKGV9zdWJ0cmFjdGl2ZV9zaGFkb3dfY29sb3IqdAoHRm9n",
            "TW9kZRIYChRGT0dfTU9ERV9VTlNQRUNJRklFRBAAEhMKD0ZPR19NT0RFX0xJ",
            "TkVBUhABEhgKFEZPR19NT0RFX0VYUE9ORU5USUFMEAISIAocRk9HX01PREVf",
            "RVhQT05FTlRJQUxfU1FVQVJFRBADKo8BCgtBbWJpZW50TW9kZRIcChhBTUJJ",
            "RU5UX01PREVfVU5TUEVDSUZJRUQQABIXChNBTUJJRU5UX01PREVfU0tZQk9Y",
            "EAESGQoVQU1CSUVOVF9NT0RFX1RSSUxJR0hUEAISFQoRQU1CSUVOVF9NT0RF",
            "X0ZMQVQQAxIXChNBTUJJRU5UX01PREVfQ1VTVE9NEAQqiAEKFURlZmF1bHRS",
            "ZWZsZWN0aW9uTW9kZRInCiNERUZBVUxUX1JFRkxFQ1RJT05fTU9ERV9VTlNQ",
            "RUNJRklFRBAAEiIKHkRFRkFVTFRfUkVGTEVDVElPTl9NT0RFX1NLWUJPWBAB",
            "EiIKHkRFRkFVTFRfUkVGTEVDVElPTl9NT0RFX0NVU1RPTRACQh6qAhtQTFVN",
            "RS5TYW1wbGUuVW5pdHkuU2V0dGluZ3NiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::PLUME.Sample.Unity.IdentifiersReflection.Descriptor, global::PLUME.Sample.Common.ColorReflection.Descriptor, global::PLUME.Sample.Common.SphericalHarmonicsL2Reflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::PLUME.Sample.Unity.Settings.FogMode), typeof(global::PLUME.Sample.Unity.Settings.AmbientMode), typeof(global::PLUME.Sample.Unity.Settings.DefaultReflectionMode), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PLUME.Sample.Unity.Settings.RenderSettingsUpdate), global::PLUME.Sample.Unity.Settings.RenderSettingsUpdate.Parser, new[]{ "Skybox", "Sun", "Fog", "FogMode", "FogColor", "FogDensity", "FogStartDistance", "FogEndDistance", "AmbientColor", "AmbientEquatorColor", "AmbientGroundColor", "AmbientSkyColor", "AmbientIntensity", "AmbientMode", "AmbientProbe", "CustomReflectionTexture", "DefaultReflectionMode", "DefaultReflectionResolution", "ReflectionBounces", "ReflectionIntensity", "HaloStrength", "FlareStrength", "FlareFadeSpeed", "SubtractiveShadowColor" }, new[]{ "Skybox", "Sun", "Fog", "FogMode", "FogColor", "FogDensity", "FogStartDistance", "FogEndDistance", "AmbientColor", "AmbientEquatorColor", "AmbientGroundColor", "AmbientSkyColor", "AmbientIntensity", "AmbientMode", "AmbientProbe", "CustomReflectionTexture", "DefaultReflectionMode", "DefaultReflectionResolution", "ReflectionBounces", "ReflectionIntensity", "HaloStrength", "FlareStrength", "FlareFadeSpeed", "SubtractiveShadowColor" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum FogMode {
    [pbr::OriginalName("FOG_MODE_UNSPECIFIED")] Unspecified = 0,
    [pbr::OriginalName("FOG_MODE_LINEAR")] Linear = 1,
    [pbr::OriginalName("FOG_MODE_EXPONENTIAL")] Exponential = 2,
    [pbr::OriginalName("FOG_MODE_EXPONENTIAL_SQUARED")] ExponentialSquared = 3,
  }

  public enum AmbientMode {
    [pbr::OriginalName("AMBIENT_MODE_UNSPECIFIED")] Unspecified = 0,
    [pbr::OriginalName("AMBIENT_MODE_SKYBOX")] Skybox = 1,
    [pbr::OriginalName("AMBIENT_MODE_TRILIGHT")] Trilight = 2,
    [pbr::OriginalName("AMBIENT_MODE_FLAT")] Flat = 3,
    [pbr::OriginalName("AMBIENT_MODE_CUSTOM")] Custom = 4,
  }

  public enum DefaultReflectionMode {
    [pbr::OriginalName("DEFAULT_REFLECTION_MODE_UNSPECIFIED")] Unspecified = 0,
    [pbr::OriginalName("DEFAULT_REFLECTION_MODE_SKYBOX")] Skybox = 1,
    [pbr::OriginalName("DEFAULT_REFLECTION_MODE_CUSTOM")] Custom = 2,
  }

  #endregion

  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class RenderSettingsUpdate : pb::IMessage<RenderSettingsUpdate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RenderSettingsUpdate> _parser = new pb::MessageParser<RenderSettingsUpdate>(() => new RenderSettingsUpdate());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RenderSettingsUpdate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PLUME.Sample.Unity.Settings.RenderSettingsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RenderSettingsUpdate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RenderSettingsUpdate(RenderSettingsUpdate other) : this() {
      _hasBits0 = other._hasBits0;
      skybox_ = other.skybox_ != null ? other.skybox_.Clone() : null;
      sun_ = other.sun_ != null ? other.sun_.Clone() : null;
      fog_ = other.fog_;
      fogMode_ = other.fogMode_;
      fogColor_ = other.fogColor_ != null ? other.fogColor_.Clone() : null;
      fogDensity_ = other.fogDensity_;
      fogStartDistance_ = other.fogStartDistance_;
      fogEndDistance_ = other.fogEndDistance_;
      ambientColor_ = other.ambientColor_ != null ? other.ambientColor_.Clone() : null;
      ambientEquatorColor_ = other.ambientEquatorColor_ != null ? other.ambientEquatorColor_.Clone() : null;
      ambientGroundColor_ = other.ambientGroundColor_ != null ? other.ambientGroundColor_.Clone() : null;
      ambientSkyColor_ = other.ambientSkyColor_ != null ? other.ambientSkyColor_.Clone() : null;
      ambientIntensity_ = other.ambientIntensity_;
      ambientMode_ = other.ambientMode_;
      ambientProbe_ = other.ambientProbe_ != null ? other.ambientProbe_.Clone() : null;
      customReflectionTexture_ = other.customReflectionTexture_ != null ? other.customReflectionTexture_.Clone() : null;
      defaultReflectionMode_ = other.defaultReflectionMode_;
      defaultReflectionResolution_ = other.defaultReflectionResolution_;
      reflectionBounces_ = other.reflectionBounces_;
      reflectionIntensity_ = other.reflectionIntensity_;
      haloStrength_ = other.haloStrength_;
      flareStrength_ = other.flareStrength_;
      flareFadeSpeed_ = other.flareFadeSpeed_;
      subtractiveShadowColor_ = other.subtractiveShadowColor_ != null ? other.subtractiveShadowColor_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RenderSettingsUpdate Clone() {
      return new RenderSettingsUpdate(this);
    }

    /// <summary>Field number for the "skybox" field.</summary>
    public const int SkyboxFieldNumber = 1;
    private global::PLUME.Sample.Unity.AssetIdentifier skybox_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.AssetIdentifier Skybox {
      get { return skybox_; }
      set {
        skybox_ = value;
      }
    }

    /// <summary>Field number for the "sun" field.</summary>
    public const int SunFieldNumber = 2;
    private global::PLUME.Sample.Unity.ComponentIdentifier sun_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.ComponentIdentifier Sun {
      get { return sun_; }
      set {
        sun_ = value;
      }
    }

    /// <summary>Field number for the "fog" field.</summary>
    public const int FogFieldNumber = 3;
    private readonly static bool FogDefaultValue = false;

    private bool fog_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Fog {
      get { if ((_hasBits0 & 1) != 0) { return fog_; } else { return FogDefaultValue; } }
      set {
        _hasBits0 |= 1;
        fog_ = value;
      }
    }
    /// <summary>Gets whether the "fog" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFog {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "fog" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFog() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "fog_mode" field.</summary>
    public const int FogModeFieldNumber = 4;
    private readonly static global::PLUME.Sample.Unity.Settings.FogMode FogModeDefaultValue = global::PLUME.Sample.Unity.Settings.FogMode.Unspecified;

    private global::PLUME.Sample.Unity.Settings.FogMode fogMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.Settings.FogMode FogMode {
      get { if ((_hasBits0 & 2) != 0) { return fogMode_; } else { return FogModeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        fogMode_ = value;
      }
    }
    /// <summary>Gets whether the "fog_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFogMode {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "fog_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFogMode() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "fog_color" field.</summary>
    public const int FogColorFieldNumber = 5;
    private global::PLUME.Sample.Common.Color fogColor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Common.Color FogColor {
      get { return fogColor_; }
      set {
        fogColor_ = value;
      }
    }

    /// <summary>Field number for the "fog_density" field.</summary>
    public const int FogDensityFieldNumber = 6;
    private readonly static float FogDensityDefaultValue = 0F;

    private float fogDensity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float FogDensity {
      get { if ((_hasBits0 & 4) != 0) { return fogDensity_; } else { return FogDensityDefaultValue; } }
      set {
        _hasBits0 |= 4;
        fogDensity_ = value;
      }
    }
    /// <summary>Gets whether the "fog_density" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFogDensity {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "fog_density" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFogDensity() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "fog_start_distance" field.</summary>
    public const int FogStartDistanceFieldNumber = 7;
    private readonly static float FogStartDistanceDefaultValue = 0F;

    private float fogStartDistance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float FogStartDistance {
      get { if ((_hasBits0 & 8) != 0) { return fogStartDistance_; } else { return FogStartDistanceDefaultValue; } }
      set {
        _hasBits0 |= 8;
        fogStartDistance_ = value;
      }
    }
    /// <summary>Gets whether the "fog_start_distance" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFogStartDistance {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "fog_start_distance" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFogStartDistance() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "fog_end_distance" field.</summary>
    public const int FogEndDistanceFieldNumber = 8;
    private readonly static float FogEndDistanceDefaultValue = 0F;

    private float fogEndDistance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float FogEndDistance {
      get { if ((_hasBits0 & 16) != 0) { return fogEndDistance_; } else { return FogEndDistanceDefaultValue; } }
      set {
        _hasBits0 |= 16;
        fogEndDistance_ = value;
      }
    }
    /// <summary>Gets whether the "fog_end_distance" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFogEndDistance {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "fog_end_distance" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFogEndDistance() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "ambient_color" field.</summary>
    public const int AmbientColorFieldNumber = 9;
    private global::PLUME.Sample.Common.Color ambientColor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Common.Color AmbientColor {
      get { return ambientColor_; }
      set {
        ambientColor_ = value;
      }
    }

    /// <summary>Field number for the "ambient_equator_color" field.</summary>
    public const int AmbientEquatorColorFieldNumber = 10;
    private global::PLUME.Sample.Common.Color ambientEquatorColor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Common.Color AmbientEquatorColor {
      get { return ambientEquatorColor_; }
      set {
        ambientEquatorColor_ = value;
      }
    }

    /// <summary>Field number for the "ambient_ground_color" field.</summary>
    public const int AmbientGroundColorFieldNumber = 11;
    private global::PLUME.Sample.Common.Color ambientGroundColor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Common.Color AmbientGroundColor {
      get { return ambientGroundColor_; }
      set {
        ambientGroundColor_ = value;
      }
    }

    /// <summary>Field number for the "ambient_sky_color" field.</summary>
    public const int AmbientSkyColorFieldNumber = 12;
    private global::PLUME.Sample.Common.Color ambientSkyColor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Common.Color AmbientSkyColor {
      get { return ambientSkyColor_; }
      set {
        ambientSkyColor_ = value;
      }
    }

    /// <summary>Field number for the "ambient_intensity" field.</summary>
    public const int AmbientIntensityFieldNumber = 13;
    private readonly static float AmbientIntensityDefaultValue = 0F;

    private float ambientIntensity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AmbientIntensity {
      get { if ((_hasBits0 & 32) != 0) { return ambientIntensity_; } else { return AmbientIntensityDefaultValue; } }
      set {
        _hasBits0 |= 32;
        ambientIntensity_ = value;
      }
    }
    /// <summary>Gets whether the "ambient_intensity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAmbientIntensity {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "ambient_intensity" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAmbientIntensity() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "ambient_mode" field.</summary>
    public const int AmbientModeFieldNumber = 14;
    private readonly static global::PLUME.Sample.Unity.Settings.AmbientMode AmbientModeDefaultValue = global::PLUME.Sample.Unity.Settings.AmbientMode.Unspecified;

    private global::PLUME.Sample.Unity.Settings.AmbientMode ambientMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.Settings.AmbientMode AmbientMode {
      get { if ((_hasBits0 & 64) != 0) { return ambientMode_; } else { return AmbientModeDefaultValue; } }
      set {
        _hasBits0 |= 64;
        ambientMode_ = value;
      }
    }
    /// <summary>Gets whether the "ambient_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAmbientMode {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "ambient_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAmbientMode() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "ambient_probe" field.</summary>
    public const int AmbientProbeFieldNumber = 15;
    private global::PLUME.Sample.Common.SphericalHarmonicsL2 ambientProbe_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Common.SphericalHarmonicsL2 AmbientProbe {
      get { return ambientProbe_; }
      set {
        ambientProbe_ = value;
      }
    }

    /// <summary>Field number for the "custom_reflection_texture" field.</summary>
    public const int CustomReflectionTextureFieldNumber = 16;
    private global::PLUME.Sample.Unity.AssetIdentifier customReflectionTexture_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.AssetIdentifier CustomReflectionTexture {
      get { return customReflectionTexture_; }
      set {
        customReflectionTexture_ = value;
      }
    }

    /// <summary>Field number for the "default_reflection_mode" field.</summary>
    public const int DefaultReflectionModeFieldNumber = 17;
    private readonly static global::PLUME.Sample.Unity.Settings.DefaultReflectionMode DefaultReflectionModeDefaultValue = global::PLUME.Sample.Unity.Settings.DefaultReflectionMode.Unspecified;

    private global::PLUME.Sample.Unity.Settings.DefaultReflectionMode defaultReflectionMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.Settings.DefaultReflectionMode DefaultReflectionMode {
      get { if ((_hasBits0 & 128) != 0) { return defaultReflectionMode_; } else { return DefaultReflectionModeDefaultValue; } }
      set {
        _hasBits0 |= 128;
        defaultReflectionMode_ = value;
      }
    }
    /// <summary>Gets whether the "default_reflection_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDefaultReflectionMode {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "default_reflection_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDefaultReflectionMode() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "default_reflection_resolution" field.</summary>
    public const int DefaultReflectionResolutionFieldNumber = 18;
    private readonly static int DefaultReflectionResolutionDefaultValue = 0;

    private int defaultReflectionResolution_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DefaultReflectionResolution {
      get { if ((_hasBits0 & 256) != 0) { return defaultReflectionResolution_; } else { return DefaultReflectionResolutionDefaultValue; } }
      set {
        _hasBits0 |= 256;
        defaultReflectionResolution_ = value;
      }
    }
    /// <summary>Gets whether the "default_reflection_resolution" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDefaultReflectionResolution {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "default_reflection_resolution" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDefaultReflectionResolution() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "reflection_bounces" field.</summary>
    public const int ReflectionBouncesFieldNumber = 19;
    private readonly static int ReflectionBouncesDefaultValue = 0;

    private int reflectionBounces_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ReflectionBounces {
      get { if ((_hasBits0 & 512) != 0) { return reflectionBounces_; } else { return ReflectionBouncesDefaultValue; } }
      set {
        _hasBits0 |= 512;
        reflectionBounces_ = value;
      }
    }
    /// <summary>Gets whether the "reflection_bounces" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReflectionBounces {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "reflection_bounces" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReflectionBounces() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "reflection_intensity" field.</summary>
    public const int ReflectionIntensityFieldNumber = 20;
    private readonly static float ReflectionIntensityDefaultValue = 0F;

    private float reflectionIntensity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ReflectionIntensity {
      get { if ((_hasBits0 & 1024) != 0) { return reflectionIntensity_; } else { return ReflectionIntensityDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        reflectionIntensity_ = value;
      }
    }
    /// <summary>Gets whether the "reflection_intensity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReflectionIntensity {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "reflection_intensity" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReflectionIntensity() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "halo_strength" field.</summary>
    public const int HaloStrengthFieldNumber = 21;
    private readonly static float HaloStrengthDefaultValue = 0F;

    private float haloStrength_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float HaloStrength {
      get { if ((_hasBits0 & 2048) != 0) { return haloStrength_; } else { return HaloStrengthDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        haloStrength_ = value;
      }
    }
    /// <summary>Gets whether the "halo_strength" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHaloStrength {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "halo_strength" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHaloStrength() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "flare_strength" field.</summary>
    public const int FlareStrengthFieldNumber = 22;
    private readonly static float FlareStrengthDefaultValue = 0F;

    private float flareStrength_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float FlareStrength {
      get { if ((_hasBits0 & 4096) != 0) { return flareStrength_; } else { return FlareStrengthDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        flareStrength_ = value;
      }
    }
    /// <summary>Gets whether the "flare_strength" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFlareStrength {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "flare_strength" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFlareStrength() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "flare_fade_speed" field.</summary>
    public const int FlareFadeSpeedFieldNumber = 23;
    private readonly static float FlareFadeSpeedDefaultValue = 0F;

    private float flareFadeSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float FlareFadeSpeed {
      get { if ((_hasBits0 & 8192) != 0) { return flareFadeSpeed_; } else { return FlareFadeSpeedDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        flareFadeSpeed_ = value;
      }
    }
    /// <summary>Gets whether the "flare_fade_speed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFlareFadeSpeed {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "flare_fade_speed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFlareFadeSpeed() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "subtractive_shadow_color" field.</summary>
    public const int SubtractiveShadowColorFieldNumber = 24;
    private global::PLUME.Sample.Common.Color subtractiveShadowColor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Common.Color SubtractiveShadowColor {
      get { return subtractiveShadowColor_; }
      set {
        subtractiveShadowColor_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RenderSettingsUpdate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RenderSettingsUpdate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Skybox, other.Skybox)) return false;
      if (!object.Equals(Sun, other.Sun)) return false;
      if (Fog != other.Fog) return false;
      if (FogMode != other.FogMode) return false;
      if (!object.Equals(FogColor, other.FogColor)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FogDensity, other.FogDensity)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FogStartDistance, other.FogStartDistance)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FogEndDistance, other.FogEndDistance)) return false;
      if (!object.Equals(AmbientColor, other.AmbientColor)) return false;
      if (!object.Equals(AmbientEquatorColor, other.AmbientEquatorColor)) return false;
      if (!object.Equals(AmbientGroundColor, other.AmbientGroundColor)) return false;
      if (!object.Equals(AmbientSkyColor, other.AmbientSkyColor)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AmbientIntensity, other.AmbientIntensity)) return false;
      if (AmbientMode != other.AmbientMode) return false;
      if (!object.Equals(AmbientProbe, other.AmbientProbe)) return false;
      if (!object.Equals(CustomReflectionTexture, other.CustomReflectionTexture)) return false;
      if (DefaultReflectionMode != other.DefaultReflectionMode) return false;
      if (DefaultReflectionResolution != other.DefaultReflectionResolution) return false;
      if (ReflectionBounces != other.ReflectionBounces) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ReflectionIntensity, other.ReflectionIntensity)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(HaloStrength, other.HaloStrength)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FlareStrength, other.FlareStrength)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FlareFadeSpeed, other.FlareFadeSpeed)) return false;
      if (!object.Equals(SubtractiveShadowColor, other.SubtractiveShadowColor)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (skybox_ != null) hash ^= Skybox.GetHashCode();
      if (sun_ != null) hash ^= Sun.GetHashCode();
      if (HasFog) hash ^= Fog.GetHashCode();
      if (HasFogMode) hash ^= FogMode.GetHashCode();
      if (fogColor_ != null) hash ^= FogColor.GetHashCode();
      if (HasFogDensity) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FogDensity);
      if (HasFogStartDistance) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FogStartDistance);
      if (HasFogEndDistance) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FogEndDistance);
      if (ambientColor_ != null) hash ^= AmbientColor.GetHashCode();
      if (ambientEquatorColor_ != null) hash ^= AmbientEquatorColor.GetHashCode();
      if (ambientGroundColor_ != null) hash ^= AmbientGroundColor.GetHashCode();
      if (ambientSkyColor_ != null) hash ^= AmbientSkyColor.GetHashCode();
      if (HasAmbientIntensity) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AmbientIntensity);
      if (HasAmbientMode) hash ^= AmbientMode.GetHashCode();
      if (ambientProbe_ != null) hash ^= AmbientProbe.GetHashCode();
      if (customReflectionTexture_ != null) hash ^= CustomReflectionTexture.GetHashCode();
      if (HasDefaultReflectionMode) hash ^= DefaultReflectionMode.GetHashCode();
      if (HasDefaultReflectionResolution) hash ^= DefaultReflectionResolution.GetHashCode();
      if (HasReflectionBounces) hash ^= ReflectionBounces.GetHashCode();
      if (HasReflectionIntensity) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ReflectionIntensity);
      if (HasHaloStrength) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(HaloStrength);
      if (HasFlareStrength) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FlareStrength);
      if (HasFlareFadeSpeed) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FlareFadeSpeed);
      if (subtractiveShadowColor_ != null) hash ^= SubtractiveShadowColor.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (skybox_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Skybox);
      }
      if (sun_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Sun);
      }
      if (HasFog) {
        output.WriteRawTag(24);
        output.WriteBool(Fog);
      }
      if (HasFogMode) {
        output.WriteRawTag(32);
        output.WriteEnum((int) FogMode);
      }
      if (fogColor_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(FogColor);
      }
      if (HasFogDensity) {
        output.WriteRawTag(53);
        output.WriteFloat(FogDensity);
      }
      if (HasFogStartDistance) {
        output.WriteRawTag(61);
        output.WriteFloat(FogStartDistance);
      }
      if (HasFogEndDistance) {
        output.WriteRawTag(69);
        output.WriteFloat(FogEndDistance);
      }
      if (ambientColor_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(AmbientColor);
      }
      if (ambientEquatorColor_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(AmbientEquatorColor);
      }
      if (ambientGroundColor_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(AmbientGroundColor);
      }
      if (ambientSkyColor_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(AmbientSkyColor);
      }
      if (HasAmbientIntensity) {
        output.WriteRawTag(109);
        output.WriteFloat(AmbientIntensity);
      }
      if (HasAmbientMode) {
        output.WriteRawTag(112);
        output.WriteEnum((int) AmbientMode);
      }
      if (ambientProbe_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(AmbientProbe);
      }
      if (customReflectionTexture_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(CustomReflectionTexture);
      }
      if (HasDefaultReflectionMode) {
        output.WriteRawTag(136, 1);
        output.WriteEnum((int) DefaultReflectionMode);
      }
      if (HasDefaultReflectionResolution) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(DefaultReflectionResolution);
      }
      if (HasReflectionBounces) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(ReflectionBounces);
      }
      if (HasReflectionIntensity) {
        output.WriteRawTag(165, 1);
        output.WriteFloat(ReflectionIntensity);
      }
      if (HasHaloStrength) {
        output.WriteRawTag(173, 1);
        output.WriteFloat(HaloStrength);
      }
      if (HasFlareStrength) {
        output.WriteRawTag(181, 1);
        output.WriteFloat(FlareStrength);
      }
      if (HasFlareFadeSpeed) {
        output.WriteRawTag(189, 1);
        output.WriteFloat(FlareFadeSpeed);
      }
      if (subtractiveShadowColor_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(SubtractiveShadowColor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (skybox_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Skybox);
      }
      if (sun_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Sun);
      }
      if (HasFog) {
        output.WriteRawTag(24);
        output.WriteBool(Fog);
      }
      if (HasFogMode) {
        output.WriteRawTag(32);
        output.WriteEnum((int) FogMode);
      }
      if (fogColor_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(FogColor);
      }
      if (HasFogDensity) {
        output.WriteRawTag(53);
        output.WriteFloat(FogDensity);
      }
      if (HasFogStartDistance) {
        output.WriteRawTag(61);
        output.WriteFloat(FogStartDistance);
      }
      if (HasFogEndDistance) {
        output.WriteRawTag(69);
        output.WriteFloat(FogEndDistance);
      }
      if (ambientColor_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(AmbientColor);
      }
      if (ambientEquatorColor_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(AmbientEquatorColor);
      }
      if (ambientGroundColor_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(AmbientGroundColor);
      }
      if (ambientSkyColor_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(AmbientSkyColor);
      }
      if (HasAmbientIntensity) {
        output.WriteRawTag(109);
        output.WriteFloat(AmbientIntensity);
      }
      if (HasAmbientMode) {
        output.WriteRawTag(112);
        output.WriteEnum((int) AmbientMode);
      }
      if (ambientProbe_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(AmbientProbe);
      }
      if (customReflectionTexture_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(CustomReflectionTexture);
      }
      if (HasDefaultReflectionMode) {
        output.WriteRawTag(136, 1);
        output.WriteEnum((int) DefaultReflectionMode);
      }
      if (HasDefaultReflectionResolution) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(DefaultReflectionResolution);
      }
      if (HasReflectionBounces) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(ReflectionBounces);
      }
      if (HasReflectionIntensity) {
        output.WriteRawTag(165, 1);
        output.WriteFloat(ReflectionIntensity);
      }
      if (HasHaloStrength) {
        output.WriteRawTag(173, 1);
        output.WriteFloat(HaloStrength);
      }
      if (HasFlareStrength) {
        output.WriteRawTag(181, 1);
        output.WriteFloat(FlareStrength);
      }
      if (HasFlareFadeSpeed) {
        output.WriteRawTag(189, 1);
        output.WriteFloat(FlareFadeSpeed);
      }
      if (subtractiveShadowColor_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(SubtractiveShadowColor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (skybox_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Skybox);
      }
      if (sun_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sun);
      }
      if (HasFog) {
        size += 1 + 1;
      }
      if (HasFogMode) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FogMode);
      }
      if (fogColor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FogColor);
      }
      if (HasFogDensity) {
        size += 1 + 4;
      }
      if (HasFogStartDistance) {
        size += 1 + 4;
      }
      if (HasFogEndDistance) {
        size += 1 + 4;
      }
      if (ambientColor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AmbientColor);
      }
      if (ambientEquatorColor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AmbientEquatorColor);
      }
      if (ambientGroundColor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AmbientGroundColor);
      }
      if (ambientSkyColor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AmbientSkyColor);
      }
      if (HasAmbientIntensity) {
        size += 1 + 4;
      }
      if (HasAmbientMode) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AmbientMode);
      }
      if (ambientProbe_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AmbientProbe);
      }
      if (customReflectionTexture_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CustomReflectionTexture);
      }
      if (HasDefaultReflectionMode) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) DefaultReflectionMode);
      }
      if (HasDefaultReflectionResolution) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(DefaultReflectionResolution);
      }
      if (HasReflectionBounces) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ReflectionBounces);
      }
      if (HasReflectionIntensity) {
        size += 2 + 4;
      }
      if (HasHaloStrength) {
        size += 2 + 4;
      }
      if (HasFlareStrength) {
        size += 2 + 4;
      }
      if (HasFlareFadeSpeed) {
        size += 2 + 4;
      }
      if (subtractiveShadowColor_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SubtractiveShadowColor);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RenderSettingsUpdate other) {
      if (other == null) {
        return;
      }
      if (other.skybox_ != null) {
        if (skybox_ == null) {
          Skybox = new global::PLUME.Sample.Unity.AssetIdentifier();
        }
        Skybox.MergeFrom(other.Skybox);
      }
      if (other.sun_ != null) {
        if (sun_ == null) {
          Sun = new global::PLUME.Sample.Unity.ComponentIdentifier();
        }
        Sun.MergeFrom(other.Sun);
      }
      if (other.HasFog) {
        Fog = other.Fog;
      }
      if (other.HasFogMode) {
        FogMode = other.FogMode;
      }
      if (other.fogColor_ != null) {
        if (fogColor_ == null) {
          FogColor = new global::PLUME.Sample.Common.Color();
        }
        FogColor.MergeFrom(other.FogColor);
      }
      if (other.HasFogDensity) {
        FogDensity = other.FogDensity;
      }
      if (other.HasFogStartDistance) {
        FogStartDistance = other.FogStartDistance;
      }
      if (other.HasFogEndDistance) {
        FogEndDistance = other.FogEndDistance;
      }
      if (other.ambientColor_ != null) {
        if (ambientColor_ == null) {
          AmbientColor = new global::PLUME.Sample.Common.Color();
        }
        AmbientColor.MergeFrom(other.AmbientColor);
      }
      if (other.ambientEquatorColor_ != null) {
        if (ambientEquatorColor_ == null) {
          AmbientEquatorColor = new global::PLUME.Sample.Common.Color();
        }
        AmbientEquatorColor.MergeFrom(other.AmbientEquatorColor);
      }
      if (other.ambientGroundColor_ != null) {
        if (ambientGroundColor_ == null) {
          AmbientGroundColor = new global::PLUME.Sample.Common.Color();
        }
        AmbientGroundColor.MergeFrom(other.AmbientGroundColor);
      }
      if (other.ambientSkyColor_ != null) {
        if (ambientSkyColor_ == null) {
          AmbientSkyColor = new global::PLUME.Sample.Common.Color();
        }
        AmbientSkyColor.MergeFrom(other.AmbientSkyColor);
      }
      if (other.HasAmbientIntensity) {
        AmbientIntensity = other.AmbientIntensity;
      }
      if (other.HasAmbientMode) {
        AmbientMode = other.AmbientMode;
      }
      if (other.ambientProbe_ != null) {
        if (ambientProbe_ == null) {
          AmbientProbe = new global::PLUME.Sample.Common.SphericalHarmonicsL2();
        }
        AmbientProbe.MergeFrom(other.AmbientProbe);
      }
      if (other.customReflectionTexture_ != null) {
        if (customReflectionTexture_ == null) {
          CustomReflectionTexture = new global::PLUME.Sample.Unity.AssetIdentifier();
        }
        CustomReflectionTexture.MergeFrom(other.CustomReflectionTexture);
      }
      if (other.HasDefaultReflectionMode) {
        DefaultReflectionMode = other.DefaultReflectionMode;
      }
      if (other.HasDefaultReflectionResolution) {
        DefaultReflectionResolution = other.DefaultReflectionResolution;
      }
      if (other.HasReflectionBounces) {
        ReflectionBounces = other.ReflectionBounces;
      }
      if (other.HasReflectionIntensity) {
        ReflectionIntensity = other.ReflectionIntensity;
      }
      if (other.HasHaloStrength) {
        HaloStrength = other.HaloStrength;
      }
      if (other.HasFlareStrength) {
        FlareStrength = other.FlareStrength;
      }
      if (other.HasFlareFadeSpeed) {
        FlareFadeSpeed = other.FlareFadeSpeed;
      }
      if (other.subtractiveShadowColor_ != null) {
        if (subtractiveShadowColor_ == null) {
          SubtractiveShadowColor = new global::PLUME.Sample.Common.Color();
        }
        SubtractiveShadowColor.MergeFrom(other.SubtractiveShadowColor);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (skybox_ == null) {
              Skybox = new global::PLUME.Sample.Unity.AssetIdentifier();
            }
            input.ReadMessage(Skybox);
            break;
          }
          case 18: {
            if (sun_ == null) {
              Sun = new global::PLUME.Sample.Unity.ComponentIdentifier();
            }
            input.ReadMessage(Sun);
            break;
          }
          case 24: {
            Fog = input.ReadBool();
            break;
          }
          case 32: {
            FogMode = (global::PLUME.Sample.Unity.Settings.FogMode) input.ReadEnum();
            break;
          }
          case 42: {
            if (fogColor_ == null) {
              FogColor = new global::PLUME.Sample.Common.Color();
            }
            input.ReadMessage(FogColor);
            break;
          }
          case 53: {
            FogDensity = input.ReadFloat();
            break;
          }
          case 61: {
            FogStartDistance = input.ReadFloat();
            break;
          }
          case 69: {
            FogEndDistance = input.ReadFloat();
            break;
          }
          case 74: {
            if (ambientColor_ == null) {
              AmbientColor = new global::PLUME.Sample.Common.Color();
            }
            input.ReadMessage(AmbientColor);
            break;
          }
          case 82: {
            if (ambientEquatorColor_ == null) {
              AmbientEquatorColor = new global::PLUME.Sample.Common.Color();
            }
            input.ReadMessage(AmbientEquatorColor);
            break;
          }
          case 90: {
            if (ambientGroundColor_ == null) {
              AmbientGroundColor = new global::PLUME.Sample.Common.Color();
            }
            input.ReadMessage(AmbientGroundColor);
            break;
          }
          case 98: {
            if (ambientSkyColor_ == null) {
              AmbientSkyColor = new global::PLUME.Sample.Common.Color();
            }
            input.ReadMessage(AmbientSkyColor);
            break;
          }
          case 109: {
            AmbientIntensity = input.ReadFloat();
            break;
          }
          case 112: {
            AmbientMode = (global::PLUME.Sample.Unity.Settings.AmbientMode) input.ReadEnum();
            break;
          }
          case 122: {
            if (ambientProbe_ == null) {
              AmbientProbe = new global::PLUME.Sample.Common.SphericalHarmonicsL2();
            }
            input.ReadMessage(AmbientProbe);
            break;
          }
          case 130: {
            if (customReflectionTexture_ == null) {
              CustomReflectionTexture = new global::PLUME.Sample.Unity.AssetIdentifier();
            }
            input.ReadMessage(CustomReflectionTexture);
            break;
          }
          case 136: {
            DefaultReflectionMode = (global::PLUME.Sample.Unity.Settings.DefaultReflectionMode) input.ReadEnum();
            break;
          }
          case 144: {
            DefaultReflectionResolution = input.ReadInt32();
            break;
          }
          case 152: {
            ReflectionBounces = input.ReadInt32();
            break;
          }
          case 165: {
            ReflectionIntensity = input.ReadFloat();
            break;
          }
          case 173: {
            HaloStrength = input.ReadFloat();
            break;
          }
          case 181: {
            FlareStrength = input.ReadFloat();
            break;
          }
          case 189: {
            FlareFadeSpeed = input.ReadFloat();
            break;
          }
          case 194: {
            if (subtractiveShadowColor_ == null) {
              SubtractiveShadowColor = new global::PLUME.Sample.Common.Color();
            }
            input.ReadMessage(SubtractiveShadowColor);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (skybox_ == null) {
              Skybox = new global::PLUME.Sample.Unity.AssetIdentifier();
            }
            input.ReadMessage(Skybox);
            break;
          }
          case 18: {
            if (sun_ == null) {
              Sun = new global::PLUME.Sample.Unity.ComponentIdentifier();
            }
            input.ReadMessage(Sun);
            break;
          }
          case 24: {
            Fog = input.ReadBool();
            break;
          }
          case 32: {
            FogMode = (global::PLUME.Sample.Unity.Settings.FogMode) input.ReadEnum();
            break;
          }
          case 42: {
            if (fogColor_ == null) {
              FogColor = new global::PLUME.Sample.Common.Color();
            }
            input.ReadMessage(FogColor);
            break;
          }
          case 53: {
            FogDensity = input.ReadFloat();
            break;
          }
          case 61: {
            FogStartDistance = input.ReadFloat();
            break;
          }
          case 69: {
            FogEndDistance = input.ReadFloat();
            break;
          }
          case 74: {
            if (ambientColor_ == null) {
              AmbientColor = new global::PLUME.Sample.Common.Color();
            }
            input.ReadMessage(AmbientColor);
            break;
          }
          case 82: {
            if (ambientEquatorColor_ == null) {
              AmbientEquatorColor = new global::PLUME.Sample.Common.Color();
            }
            input.ReadMessage(AmbientEquatorColor);
            break;
          }
          case 90: {
            if (ambientGroundColor_ == null) {
              AmbientGroundColor = new global::PLUME.Sample.Common.Color();
            }
            input.ReadMessage(AmbientGroundColor);
            break;
          }
          case 98: {
            if (ambientSkyColor_ == null) {
              AmbientSkyColor = new global::PLUME.Sample.Common.Color();
            }
            input.ReadMessage(AmbientSkyColor);
            break;
          }
          case 109: {
            AmbientIntensity = input.ReadFloat();
            break;
          }
          case 112: {
            AmbientMode = (global::PLUME.Sample.Unity.Settings.AmbientMode) input.ReadEnum();
            break;
          }
          case 122: {
            if (ambientProbe_ == null) {
              AmbientProbe = new global::PLUME.Sample.Common.SphericalHarmonicsL2();
            }
            input.ReadMessage(AmbientProbe);
            break;
          }
          case 130: {
            if (customReflectionTexture_ == null) {
              CustomReflectionTexture = new global::PLUME.Sample.Unity.AssetIdentifier();
            }
            input.ReadMessage(CustomReflectionTexture);
            break;
          }
          case 136: {
            DefaultReflectionMode = (global::PLUME.Sample.Unity.Settings.DefaultReflectionMode) input.ReadEnum();
            break;
          }
          case 144: {
            DefaultReflectionResolution = input.ReadInt32();
            break;
          }
          case 152: {
            ReflectionBounces = input.ReadInt32();
            break;
          }
          case 165: {
            ReflectionIntensity = input.ReadFloat();
            break;
          }
          case 173: {
            HaloStrength = input.ReadFloat();
            break;
          }
          case 181: {
            FlareStrength = input.ReadFloat();
            break;
          }
          case 189: {
            FlareFadeSpeed = input.ReadFloat();
            break;
          }
          case 194: {
            if (subtractiveShadowColor_ == null) {
              SubtractiveShadowColor = new global::PLUME.Sample.Common.Color();
            }
            input.ReadMessage(SubtractiveShadowColor);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
