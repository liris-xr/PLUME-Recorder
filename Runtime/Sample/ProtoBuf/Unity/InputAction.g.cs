// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: unity/input_action.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PLUME.Sample.Unity {

  /// <summary>Holder for reflection information generated from unity/input_action.proto</summary>
  public static partial class InputActionReflection {

    #region Descriptor
    /// <summary>File descriptor for unity/input_action.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static InputActionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chh1bml0eS9pbnB1dF9hY3Rpb24ucHJvdG8SEnBsdW1lLnNhbXBsZS51bml0",
            "eRoUY29tbW9uL3ZlY3RvcjIucHJvdG8aFGNvbW1vbi92ZWN0b3IzLnByb3Rv",
            "Ghdjb21tb24vcXVhdGVybmlvbi5wcm90bxoXdW5pdHkvaWRlbnRpZmllcnMu",
            "cHJvdG8iuAMKC0lucHV0QWN0aW9uEjMKAmlkGAEgASgLMicucGx1bWUuc2Ft",
            "cGxlLnVuaXR5LkNvbXBvbmVudElkZW50aWZpZXISDAoEbmFtZRgCIAEoCRIV",
            "Cg1iaW5kaW5nX3BhdGhzGAMgAygJEjEKBHR5cGUYBCABKA4yIy5wbHVtZS5z",
            "YW1wbGUudW5pdHkuSW5wdXRBY3Rpb25UeXBlEhEKB2Jvb2xlYW4YBSABKAhI",
            "ABIRCgdpbnRlZ2VyGAYgASgFSAASDwoFZmxvYXQYByABKAJIABIQCgZkb3Vi",
            "bGUYCCABKAFIABIvCgd2ZWN0b3IyGAkgASgLMhwucGx1bWUuc2FtcGxlLmNv",
            "bW1vbi5WZWN0b3IySAASLwoHdmVjdG9yMxgKIAEoCzIcLnBsdW1lLnNhbXBs",
            "ZS5jb21tb24uVmVjdG9yM0gAEjUKCnF1YXRlcm5pb24YCyABKAsyHy5wbHVt",
            "ZS5zYW1wbGUuY29tbW9uLlF1YXRlcm5pb25IABIxCgZidXR0b24YDCABKAsy",
            "Hy5wbHVtZS5zYW1wbGUudW5pdHkuQnV0dG9uVmFsdWVIAEIHCgV2YWx1ZSJA",
            "CgtCdXR0b25WYWx1ZRIPCgdib29sZWFuGAEgASgIEg0KBWZsb2F0GAIgASgC",
            "EhEKCXRocmVzaG9sZBgDIAEoAio5Cg9JbnB1dEFjdGlvblR5cGUSCQoFVkFM",
            "VUUQABIKCgZCVVRUT04QARIPCgtQQVNTVEhST1VHSBACQhWqAhJQTFVNRS5T",
            "YW1wbGUuVW5pdHliBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::PLUME.Sample.Common.Vector2Reflection.Descriptor, global::PLUME.Sample.Common.Vector3Reflection.Descriptor, global::PLUME.Sample.Common.QuaternionReflection.Descriptor, global::PLUME.Sample.Unity.IdentifiersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::PLUME.Sample.Unity.InputActionType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PLUME.Sample.Unity.InputAction), global::PLUME.Sample.Unity.InputAction.Parser, new[]{ "Id", "Name", "BindingPaths", "Type", "Boolean", "Integer", "Float", "Double", "Vector2", "Vector3", "Quaternion", "Button" }, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PLUME.Sample.Unity.ButtonValue), global::PLUME.Sample.Unity.ButtonValue.Parser, new[]{ "Boolean", "Float", "Threshold" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum InputActionType {
    [pbr::OriginalName("VALUE")] Value = 0,
    [pbr::OriginalName("BUTTON")] Button = 1,
    [pbr::OriginalName("PASSTHROUGH")] Passthrough = 2,
  }

  #endregion

  #region Messages
  public sealed partial class InputAction : pb::IMessage<InputAction>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InputAction> _parser = new pb::MessageParser<InputAction>(() => new InputAction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<InputAction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PLUME.Sample.Unity.InputActionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InputAction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InputAction(InputAction other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      name_ = other.name_;
      bindingPaths_ = other.bindingPaths_.Clone();
      type_ = other.type_;
      switch (other.ValueCase) {
        case ValueOneofCase.Boolean:
          Boolean = other.Boolean;
          break;
        case ValueOneofCase.Integer:
          Integer = other.Integer;
          break;
        case ValueOneofCase.Float:
          Float = other.Float;
          break;
        case ValueOneofCase.Double:
          Double = other.Double;
          break;
        case ValueOneofCase.Vector2:
          Vector2 = other.Vector2.Clone();
          break;
        case ValueOneofCase.Vector3:
          Vector3 = other.Vector3.Clone();
          break;
        case ValueOneofCase.Quaternion:
          Quaternion = other.Quaternion.Clone();
          break;
        case ValueOneofCase.Button:
          Button = other.Button.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InputAction Clone() {
      return new InputAction(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::PLUME.Sample.Unity.ComponentIdentifier id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.ComponentIdentifier Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "binding_paths" field.</summary>
    public const int BindingPathsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_bindingPaths_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> bindingPaths_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> BindingPaths {
      get { return bindingPaths_; }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private global::PLUME.Sample.Unity.InputActionType type_ = global::PLUME.Sample.Unity.InputActionType.Value;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.InputActionType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "boolean" field.</summary>
    public const int BooleanFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Boolean {
      get { return HasBoolean ? (bool) value_ : false; }
      set {
        value_ = value;
        valueCase_ = ValueOneofCase.Boolean;
      }
    }
    /// <summary>Gets whether the "boolean" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBoolean {
      get { return valueCase_ == ValueOneofCase.Boolean; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "boolean" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBoolean() {
      if (HasBoolean) {
        ClearValue();
      }
    }

    /// <summary>Field number for the "integer" field.</summary>
    public const int IntegerFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Integer {
      get { return HasInteger ? (int) value_ : 0; }
      set {
        value_ = value;
        valueCase_ = ValueOneofCase.Integer;
      }
    }
    /// <summary>Gets whether the "integer" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInteger {
      get { return valueCase_ == ValueOneofCase.Integer; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "integer" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInteger() {
      if (HasInteger) {
        ClearValue();
      }
    }

    /// <summary>Field number for the "float" field.</summary>
    public const int FloatFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Float {
      get { return HasFloat ? (float) value_ : 0F; }
      set {
        value_ = value;
        valueCase_ = ValueOneofCase.Float;
      }
    }
    /// <summary>Gets whether the "float" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFloat {
      get { return valueCase_ == ValueOneofCase.Float; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "float" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFloat() {
      if (HasFloat) {
        ClearValue();
      }
    }

    /// <summary>Field number for the "double" field.</summary>
    public const int DoubleFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Double {
      get { return HasDouble ? (double) value_ : 0D; }
      set {
        value_ = value;
        valueCase_ = ValueOneofCase.Double;
      }
    }
    /// <summary>Gets whether the "double" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDouble {
      get { return valueCase_ == ValueOneofCase.Double; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "double" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDouble() {
      if (HasDouble) {
        ClearValue();
      }
    }

    /// <summary>Field number for the "vector2" field.</summary>
    public const int Vector2FieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Common.Vector2 Vector2 {
      get { return valueCase_ == ValueOneofCase.Vector2 ? (global::PLUME.Sample.Common.Vector2) value_ : null; }
      set {
        value_ = value;
        valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.Vector2;
      }
    }

    /// <summary>Field number for the "vector3" field.</summary>
    public const int Vector3FieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Common.Vector3 Vector3 {
      get { return valueCase_ == ValueOneofCase.Vector3 ? (global::PLUME.Sample.Common.Vector3) value_ : null; }
      set {
        value_ = value;
        valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.Vector3;
      }
    }

    /// <summary>Field number for the "quaternion" field.</summary>
    public const int QuaternionFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Common.Quaternion Quaternion {
      get { return valueCase_ == ValueOneofCase.Quaternion ? (global::PLUME.Sample.Common.Quaternion) value_ : null; }
      set {
        value_ = value;
        valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.Quaternion;
      }
    }

    /// <summary>Field number for the "button" field.</summary>
    public const int ButtonFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.ButtonValue Button {
      get { return valueCase_ == ValueOneofCase.Button ? (global::PLUME.Sample.Unity.ButtonValue) value_ : null; }
      set {
        value_ = value;
        valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.Button;
      }
    }

    private object value_;
    /// <summary>Enum of possible cases for the "value" oneof.</summary>
    public enum ValueOneofCase {
      None = 0,
      Boolean = 5,
      Integer = 6,
      Float = 7,
      Double = 8,
      Vector2 = 9,
      Vector3 = 10,
      Quaternion = 11,
      Button = 12,
    }
    private ValueOneofCase valueCase_ = ValueOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ValueOneofCase ValueCase {
      get { return valueCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearValue() {
      valueCase_ = ValueOneofCase.None;
      value_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as InputAction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(InputAction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (Name != other.Name) return false;
      if(!bindingPaths_.Equals(other.bindingPaths_)) return false;
      if (Type != other.Type) return false;
      if (Boolean != other.Boolean) return false;
      if (Integer != other.Integer) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Float, other.Float)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Double, other.Double)) return false;
      if (!object.Equals(Vector2, other.Vector2)) return false;
      if (!object.Equals(Vector3, other.Vector3)) return false;
      if (!object.Equals(Quaternion, other.Quaternion)) return false;
      if (!object.Equals(Button, other.Button)) return false;
      if (ValueCase != other.ValueCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= bindingPaths_.GetHashCode();
      if (Type != global::PLUME.Sample.Unity.InputActionType.Value) hash ^= Type.GetHashCode();
      if (HasBoolean) hash ^= Boolean.GetHashCode();
      if (HasInteger) hash ^= Integer.GetHashCode();
      if (HasFloat) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Float);
      if (HasDouble) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Double);
      if (valueCase_ == ValueOneofCase.Vector2) hash ^= Vector2.GetHashCode();
      if (valueCase_ == ValueOneofCase.Vector3) hash ^= Vector3.GetHashCode();
      if (valueCase_ == ValueOneofCase.Quaternion) hash ^= Quaternion.GetHashCode();
      if (valueCase_ == ValueOneofCase.Button) hash ^= Button.GetHashCode();
      hash ^= (int) valueCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      bindingPaths_.WriteTo(output, _repeated_bindingPaths_codec);
      if (Type != global::PLUME.Sample.Unity.InputActionType.Value) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Type);
      }
      if (HasBoolean) {
        output.WriteRawTag(40);
        output.WriteBool(Boolean);
      }
      if (HasInteger) {
        output.WriteRawTag(48);
        output.WriteInt32(Integer);
      }
      if (HasFloat) {
        output.WriteRawTag(61);
        output.WriteFloat(Float);
      }
      if (HasDouble) {
        output.WriteRawTag(65);
        output.WriteDouble(Double);
      }
      if (valueCase_ == ValueOneofCase.Vector2) {
        output.WriteRawTag(74);
        output.WriteMessage(Vector2);
      }
      if (valueCase_ == ValueOneofCase.Vector3) {
        output.WriteRawTag(82);
        output.WriteMessage(Vector3);
      }
      if (valueCase_ == ValueOneofCase.Quaternion) {
        output.WriteRawTag(90);
        output.WriteMessage(Quaternion);
      }
      if (valueCase_ == ValueOneofCase.Button) {
        output.WriteRawTag(98);
        output.WriteMessage(Button);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      bindingPaths_.WriteTo(ref output, _repeated_bindingPaths_codec);
      if (Type != global::PLUME.Sample.Unity.InputActionType.Value) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Type);
      }
      if (HasBoolean) {
        output.WriteRawTag(40);
        output.WriteBool(Boolean);
      }
      if (HasInteger) {
        output.WriteRawTag(48);
        output.WriteInt32(Integer);
      }
      if (HasFloat) {
        output.WriteRawTag(61);
        output.WriteFloat(Float);
      }
      if (HasDouble) {
        output.WriteRawTag(65);
        output.WriteDouble(Double);
      }
      if (valueCase_ == ValueOneofCase.Vector2) {
        output.WriteRawTag(74);
        output.WriteMessage(Vector2);
      }
      if (valueCase_ == ValueOneofCase.Vector3) {
        output.WriteRawTag(82);
        output.WriteMessage(Vector3);
      }
      if (valueCase_ == ValueOneofCase.Quaternion) {
        output.WriteRawTag(90);
        output.WriteMessage(Quaternion);
      }
      if (valueCase_ == ValueOneofCase.Button) {
        output.WriteRawTag(98);
        output.WriteMessage(Button);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += bindingPaths_.CalculateSize(_repeated_bindingPaths_codec);
      if (Type != global::PLUME.Sample.Unity.InputActionType.Value) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (HasBoolean) {
        size += 1 + 1;
      }
      if (HasInteger) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Integer);
      }
      if (HasFloat) {
        size += 1 + 4;
      }
      if (HasDouble) {
        size += 1 + 8;
      }
      if (valueCase_ == ValueOneofCase.Vector2) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Vector2);
      }
      if (valueCase_ == ValueOneofCase.Vector3) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Vector3);
      }
      if (valueCase_ == ValueOneofCase.Quaternion) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Quaternion);
      }
      if (valueCase_ == ValueOneofCase.Button) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Button);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(InputAction other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::PLUME.Sample.Unity.ComponentIdentifier();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      bindingPaths_.Add(other.bindingPaths_);
      if (other.Type != global::PLUME.Sample.Unity.InputActionType.Value) {
        Type = other.Type;
      }
      switch (other.ValueCase) {
        case ValueOneofCase.Boolean:
          Boolean = other.Boolean;
          break;
        case ValueOneofCase.Integer:
          Integer = other.Integer;
          break;
        case ValueOneofCase.Float:
          Float = other.Float;
          break;
        case ValueOneofCase.Double:
          Double = other.Double;
          break;
        case ValueOneofCase.Vector2:
          if (Vector2 == null) {
            Vector2 = new global::PLUME.Sample.Common.Vector2();
          }
          Vector2.MergeFrom(other.Vector2);
          break;
        case ValueOneofCase.Vector3:
          if (Vector3 == null) {
            Vector3 = new global::PLUME.Sample.Common.Vector3();
          }
          Vector3.MergeFrom(other.Vector3);
          break;
        case ValueOneofCase.Quaternion:
          if (Quaternion == null) {
            Quaternion = new global::PLUME.Sample.Common.Quaternion();
          }
          Quaternion.MergeFrom(other.Quaternion);
          break;
        case ValueOneofCase.Button:
          if (Button == null) {
            Button = new global::PLUME.Sample.Unity.ButtonValue();
          }
          Button.MergeFrom(other.Button);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::PLUME.Sample.Unity.ComponentIdentifier();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            bindingPaths_.AddEntriesFrom(input, _repeated_bindingPaths_codec);
            break;
          }
          case 32: {
            Type = (global::PLUME.Sample.Unity.InputActionType) input.ReadEnum();
            break;
          }
          case 40: {
            Boolean = input.ReadBool();
            break;
          }
          case 48: {
            Integer = input.ReadInt32();
            break;
          }
          case 61: {
            Float = input.ReadFloat();
            break;
          }
          case 65: {
            Double = input.ReadDouble();
            break;
          }
          case 74: {
            global::PLUME.Sample.Common.Vector2 subBuilder = new global::PLUME.Sample.Common.Vector2();
            if (valueCase_ == ValueOneofCase.Vector2) {
              subBuilder.MergeFrom(Vector2);
            }
            input.ReadMessage(subBuilder);
            Vector2 = subBuilder;
            break;
          }
          case 82: {
            global::PLUME.Sample.Common.Vector3 subBuilder = new global::PLUME.Sample.Common.Vector3();
            if (valueCase_ == ValueOneofCase.Vector3) {
              subBuilder.MergeFrom(Vector3);
            }
            input.ReadMessage(subBuilder);
            Vector3 = subBuilder;
            break;
          }
          case 90: {
            global::PLUME.Sample.Common.Quaternion subBuilder = new global::PLUME.Sample.Common.Quaternion();
            if (valueCase_ == ValueOneofCase.Quaternion) {
              subBuilder.MergeFrom(Quaternion);
            }
            input.ReadMessage(subBuilder);
            Quaternion = subBuilder;
            break;
          }
          case 98: {
            global::PLUME.Sample.Unity.ButtonValue subBuilder = new global::PLUME.Sample.Unity.ButtonValue();
            if (valueCase_ == ValueOneofCase.Button) {
              subBuilder.MergeFrom(Button);
            }
            input.ReadMessage(subBuilder);
            Button = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::PLUME.Sample.Unity.ComponentIdentifier();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            bindingPaths_.AddEntriesFrom(ref input, _repeated_bindingPaths_codec);
            break;
          }
          case 32: {
            Type = (global::PLUME.Sample.Unity.InputActionType) input.ReadEnum();
            break;
          }
          case 40: {
            Boolean = input.ReadBool();
            break;
          }
          case 48: {
            Integer = input.ReadInt32();
            break;
          }
          case 61: {
            Float = input.ReadFloat();
            break;
          }
          case 65: {
            Double = input.ReadDouble();
            break;
          }
          case 74: {
            global::PLUME.Sample.Common.Vector2 subBuilder = new global::PLUME.Sample.Common.Vector2();
            if (valueCase_ == ValueOneofCase.Vector2) {
              subBuilder.MergeFrom(Vector2);
            }
            input.ReadMessage(subBuilder);
            Vector2 = subBuilder;
            break;
          }
          case 82: {
            global::PLUME.Sample.Common.Vector3 subBuilder = new global::PLUME.Sample.Common.Vector3();
            if (valueCase_ == ValueOneofCase.Vector3) {
              subBuilder.MergeFrom(Vector3);
            }
            input.ReadMessage(subBuilder);
            Vector3 = subBuilder;
            break;
          }
          case 90: {
            global::PLUME.Sample.Common.Quaternion subBuilder = new global::PLUME.Sample.Common.Quaternion();
            if (valueCase_ == ValueOneofCase.Quaternion) {
              subBuilder.MergeFrom(Quaternion);
            }
            input.ReadMessage(subBuilder);
            Quaternion = subBuilder;
            break;
          }
          case 98: {
            global::PLUME.Sample.Unity.ButtonValue subBuilder = new global::PLUME.Sample.Unity.ButtonValue();
            if (valueCase_ == ValueOneofCase.Button) {
              subBuilder.MergeFrom(Button);
            }
            input.ReadMessage(subBuilder);
            Button = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ButtonValue : pb::IMessage<ButtonValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ButtonValue> _parser = new pb::MessageParser<ButtonValue>(() => new ButtonValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ButtonValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PLUME.Sample.Unity.InputActionReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ButtonValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ButtonValue(ButtonValue other) : this() {
      boolean_ = other.boolean_;
      float_ = other.float_;
      threshold_ = other.threshold_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ButtonValue Clone() {
      return new ButtonValue(this);
    }

    /// <summary>Field number for the "boolean" field.</summary>
    public const int BooleanFieldNumber = 1;
    private bool boolean_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Boolean {
      get { return boolean_; }
      set {
        boolean_ = value;
      }
    }

    /// <summary>Field number for the "float" field.</summary>
    public const int FloatFieldNumber = 2;
    private float float_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Float {
      get { return float_; }
      set {
        float_ = value;
      }
    }

    /// <summary>Field number for the "threshold" field.</summary>
    public const int ThresholdFieldNumber = 3;
    private float threshold_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Threshold {
      get { return threshold_; }
      set {
        threshold_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ButtonValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ButtonValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Boolean != other.Boolean) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Float, other.Float)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Threshold, other.Threshold)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Boolean != false) hash ^= Boolean.GetHashCode();
      if (Float != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Float);
      if (Threshold != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Threshold);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Boolean != false) {
        output.WriteRawTag(8);
        output.WriteBool(Boolean);
      }
      if (Float != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Float);
      }
      if (Threshold != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Threshold);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Boolean != false) {
        output.WriteRawTag(8);
        output.WriteBool(Boolean);
      }
      if (Float != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Float);
      }
      if (Threshold != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Threshold);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Boolean != false) {
        size += 1 + 1;
      }
      if (Float != 0F) {
        size += 1 + 4;
      }
      if (Threshold != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ButtonValue other) {
      if (other == null) {
        return;
      }
      if (other.Boolean != false) {
        Boolean = other.Boolean;
      }
      if (other.Float != 0F) {
        Float = other.Float;
      }
      if (other.Threshold != 0F) {
        Threshold = other.Threshold;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Boolean = input.ReadBool();
            break;
          }
          case 21: {
            Float = input.ReadFloat();
            break;
          }
          case 29: {
            Threshold = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Boolean = input.ReadBool();
            break;
          }
          case 21: {
            Float = input.ReadFloat();
            break;
          }
          case 29: {
            Threshold = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
