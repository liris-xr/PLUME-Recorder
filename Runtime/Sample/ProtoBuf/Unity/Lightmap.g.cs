// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: plume/sample/unity/lightmap.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PLUME.Sample.Unity {

  /// <summary>Holder for reflection information generated from plume/sample/unity/lightmap.proto</summary>
  public static partial class LightmapReflection {

    #region Descriptor
    /// <summary>File descriptor for plume/sample/unity/lightmap.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LightmapReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiFwbHVtZS9zYW1wbGUvdW5pdHkvbGlnaHRtYXAucHJvdG8SEnBsdW1lLnNh",
            "bXBsZS51bml0eRokcGx1bWUvc2FtcGxlL3VuaXR5L2lkZW50aWZpZXJzLnBy",
            "b3RvIqQBCg9MaWdodG1hcHNVcGRhdGUSSAoObGlnaHRtYXBzX21vZGUYASAB",
            "KA4yIS5wbHVtZS5zYW1wbGUudW5pdHkuTGlnaHRtYXBzTW9kZVINbGlnaHRt",
            "YXBzTW9kZRJHCg5saWdodG1hcHNfZGF0YRgCIAMoCzIgLnBsdW1lLnNhbXBs",
            "ZS51bml0eS5MaWdodG1hcERhdGFSDWxpZ2h0bWFwc0RhdGEiigMKDExpZ2h0",
            "bWFwRGF0YRJeChZsaWdodG1hcF9jb2xvcl90ZXh0dXJlGAEgASgLMiMucGx1",
            "bWUuc2FtcGxlLnVuaXR5LkFzc2V0SWRlbnRpZmllckgAUhRsaWdodG1hcENv",
            "bG9yVGV4dHVyZYgBARJaChRsaWdodG1hcF9kaXJfdGV4dHVyZRgCIAEoCzIj",
            "LnBsdW1lLnNhbXBsZS51bml0eS5Bc3NldElkZW50aWZpZXJIAVISbGlnaHRt",
            "YXBEaXJUZXh0dXJliAEBEmkKHGxpZ2h0bWFwX3NoYWRvd19tYXNrX3RleHR1",
            "cmUYAyABKAsyIy5wbHVtZS5zYW1wbGUudW5pdHkuQXNzZXRJZGVudGlmaWVy",
            "SAJSGWxpZ2h0bWFwU2hhZG93TWFza1RleHR1cmWIAQFCGQoXX2xpZ2h0bWFw",
            "X2NvbG9yX3RleHR1cmVCFwoVX2xpZ2h0bWFwX2Rpcl90ZXh0dXJlQh8KHV9s",
            "aWdodG1hcF9zaGFkb3dfbWFza190ZXh0dXJlKlwKDUxpZ2h0bWFwc01vZGUS",
            "IgoeTElHSFRNQVBTX01PREVfTk9OX0RJUkVDVElPTkFMEAASJwojTElHSFRN",
            "QVBTX01PREVfQ09NQklORURfRElSRUNUSU9OQUwQAUIVqgISUExVTUUuU2Ft",
            "cGxlLlVuaXR5YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::PLUME.Sample.Unity.IdentifiersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::PLUME.Sample.Unity.LightmapsMode), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PLUME.Sample.Unity.LightmapsUpdate), global::PLUME.Sample.Unity.LightmapsUpdate.Parser, new[]{ "LightmapsMode", "LightmapsData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PLUME.Sample.Unity.LightmapData), global::PLUME.Sample.Unity.LightmapData.Parser, new[]{ "LightmapColorTexture", "LightmapDirTexture", "LightmapShadowMaskTexture" }, new[]{ "LightmapColorTexture", "LightmapDirTexture", "LightmapShadowMaskTexture" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum LightmapsMode {
    [pbr::OriginalName("LIGHTMAPS_MODE_NON_DIRECTIONAL")] NonDirectional = 0,
    [pbr::OriginalName("LIGHTMAPS_MODE_COMBINED_DIRECTIONAL")] CombinedDirectional = 1,
  }

  #endregion

  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LightmapsUpdate : pb::IMessage<LightmapsUpdate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LightmapsUpdate> _parser = new pb::MessageParser<LightmapsUpdate>(() => new LightmapsUpdate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LightmapsUpdate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PLUME.Sample.Unity.LightmapReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LightmapsUpdate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LightmapsUpdate(LightmapsUpdate other) : this() {
      lightmapsMode_ = other.lightmapsMode_;
      lightmapsData_ = other.lightmapsData_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LightmapsUpdate Clone() {
      return new LightmapsUpdate(this);
    }

    /// <summary>Field number for the "lightmaps_mode" field.</summary>
    public const int LightmapsModeFieldNumber = 1;
    private global::PLUME.Sample.Unity.LightmapsMode lightmapsMode_ = global::PLUME.Sample.Unity.LightmapsMode.NonDirectional;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.LightmapsMode LightmapsMode {
      get { return lightmapsMode_; }
      set {
        lightmapsMode_ = value;
      }
    }

    /// <summary>Field number for the "lightmaps_data" field.</summary>
    public const int LightmapsDataFieldNumber = 2;
    private static readonly pb::FieldCodec<global::PLUME.Sample.Unity.LightmapData> _repeated_lightmapsData_codec
        = pb::FieldCodec.ForMessage(18, global::PLUME.Sample.Unity.LightmapData.Parser);
    private readonly pbc::RepeatedField<global::PLUME.Sample.Unity.LightmapData> lightmapsData_ = new pbc::RepeatedField<global::PLUME.Sample.Unity.LightmapData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::PLUME.Sample.Unity.LightmapData> LightmapsData {
      get { return lightmapsData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LightmapsUpdate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LightmapsUpdate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LightmapsMode != other.LightmapsMode) return false;
      if(!lightmapsData_.Equals(other.lightmapsData_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (LightmapsMode != global::PLUME.Sample.Unity.LightmapsMode.NonDirectional) hash ^= LightmapsMode.GetHashCode();
      hash ^= lightmapsData_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LightmapsMode != global::PLUME.Sample.Unity.LightmapsMode.NonDirectional) {
        output.WriteRawTag(8);
        output.WriteEnum((int) LightmapsMode);
      }
      lightmapsData_.WriteTo(output, _repeated_lightmapsData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LightmapsMode != global::PLUME.Sample.Unity.LightmapsMode.NonDirectional) {
        output.WriteRawTag(8);
        output.WriteEnum((int) LightmapsMode);
      }
      lightmapsData_.WriteTo(ref output, _repeated_lightmapsData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (LightmapsMode != global::PLUME.Sample.Unity.LightmapsMode.NonDirectional) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LightmapsMode);
      }
      size += lightmapsData_.CalculateSize(_repeated_lightmapsData_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LightmapsUpdate other) {
      if (other == null) {
        return;
      }
      if (other.LightmapsMode != global::PLUME.Sample.Unity.LightmapsMode.NonDirectional) {
        LightmapsMode = other.LightmapsMode;
      }
      lightmapsData_.Add(other.lightmapsData_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LightmapsMode = (global::PLUME.Sample.Unity.LightmapsMode) input.ReadEnum();
            break;
          }
          case 18: {
            lightmapsData_.AddEntriesFrom(input, _repeated_lightmapsData_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            LightmapsMode = (global::PLUME.Sample.Unity.LightmapsMode) input.ReadEnum();
            break;
          }
          case 18: {
            lightmapsData_.AddEntriesFrom(ref input, _repeated_lightmapsData_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LightmapData : pb::IMessage<LightmapData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LightmapData> _parser = new pb::MessageParser<LightmapData>(() => new LightmapData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LightmapData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PLUME.Sample.Unity.LightmapReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LightmapData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LightmapData(LightmapData other) : this() {
      lightmapColorTexture_ = other.lightmapColorTexture_ != null ? other.lightmapColorTexture_.Clone() : null;
      lightmapDirTexture_ = other.lightmapDirTexture_ != null ? other.lightmapDirTexture_.Clone() : null;
      lightmapShadowMaskTexture_ = other.lightmapShadowMaskTexture_ != null ? other.lightmapShadowMaskTexture_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LightmapData Clone() {
      return new LightmapData(this);
    }

    /// <summary>Field number for the "lightmap_color_texture" field.</summary>
    public const int LightmapColorTextureFieldNumber = 1;
    private global::PLUME.Sample.Unity.AssetIdentifier lightmapColorTexture_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.AssetIdentifier LightmapColorTexture {
      get { return lightmapColorTexture_; }
      set {
        lightmapColorTexture_ = value;
      }
    }

    /// <summary>Field number for the "lightmap_dir_texture" field.</summary>
    public const int LightmapDirTextureFieldNumber = 2;
    private global::PLUME.Sample.Unity.AssetIdentifier lightmapDirTexture_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.AssetIdentifier LightmapDirTexture {
      get { return lightmapDirTexture_; }
      set {
        lightmapDirTexture_ = value;
      }
    }

    /// <summary>Field number for the "lightmap_shadow_mask_texture" field.</summary>
    public const int LightmapShadowMaskTextureFieldNumber = 3;
    private global::PLUME.Sample.Unity.AssetIdentifier lightmapShadowMaskTexture_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.AssetIdentifier LightmapShadowMaskTexture {
      get { return lightmapShadowMaskTexture_; }
      set {
        lightmapShadowMaskTexture_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LightmapData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LightmapData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LightmapColorTexture, other.LightmapColorTexture)) return false;
      if (!object.Equals(LightmapDirTexture, other.LightmapDirTexture)) return false;
      if (!object.Equals(LightmapShadowMaskTexture, other.LightmapShadowMaskTexture)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (lightmapColorTexture_ != null) hash ^= LightmapColorTexture.GetHashCode();
      if (lightmapDirTexture_ != null) hash ^= LightmapDirTexture.GetHashCode();
      if (lightmapShadowMaskTexture_ != null) hash ^= LightmapShadowMaskTexture.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (lightmapColorTexture_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LightmapColorTexture);
      }
      if (lightmapDirTexture_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(LightmapDirTexture);
      }
      if (lightmapShadowMaskTexture_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LightmapShadowMaskTexture);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (lightmapColorTexture_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LightmapColorTexture);
      }
      if (lightmapDirTexture_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(LightmapDirTexture);
      }
      if (lightmapShadowMaskTexture_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LightmapShadowMaskTexture);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (lightmapColorTexture_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LightmapColorTexture);
      }
      if (lightmapDirTexture_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LightmapDirTexture);
      }
      if (lightmapShadowMaskTexture_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LightmapShadowMaskTexture);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LightmapData other) {
      if (other == null) {
        return;
      }
      if (other.lightmapColorTexture_ != null) {
        if (lightmapColorTexture_ == null) {
          LightmapColorTexture = new global::PLUME.Sample.Unity.AssetIdentifier();
        }
        LightmapColorTexture.MergeFrom(other.LightmapColorTexture);
      }
      if (other.lightmapDirTexture_ != null) {
        if (lightmapDirTexture_ == null) {
          LightmapDirTexture = new global::PLUME.Sample.Unity.AssetIdentifier();
        }
        LightmapDirTexture.MergeFrom(other.LightmapDirTexture);
      }
      if (other.lightmapShadowMaskTexture_ != null) {
        if (lightmapShadowMaskTexture_ == null) {
          LightmapShadowMaskTexture = new global::PLUME.Sample.Unity.AssetIdentifier();
        }
        LightmapShadowMaskTexture.MergeFrom(other.LightmapShadowMaskTexture);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (lightmapColorTexture_ == null) {
              LightmapColorTexture = new global::PLUME.Sample.Unity.AssetIdentifier();
            }
            input.ReadMessage(LightmapColorTexture);
            break;
          }
          case 18: {
            if (lightmapDirTexture_ == null) {
              LightmapDirTexture = new global::PLUME.Sample.Unity.AssetIdentifier();
            }
            input.ReadMessage(LightmapDirTexture);
            break;
          }
          case 26: {
            if (lightmapShadowMaskTexture_ == null) {
              LightmapShadowMaskTexture = new global::PLUME.Sample.Unity.AssetIdentifier();
            }
            input.ReadMessage(LightmapShadowMaskTexture);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (lightmapColorTexture_ == null) {
              LightmapColorTexture = new global::PLUME.Sample.Unity.AssetIdentifier();
            }
            input.ReadMessage(LightmapColorTexture);
            break;
          }
          case 18: {
            if (lightmapDirTexture_ == null) {
              LightmapDirTexture = new global::PLUME.Sample.Unity.AssetIdentifier();
            }
            input.ReadMessage(LightmapDirTexture);
            break;
          }
          case 26: {
            if (lightmapShadowMaskTexture_ == null) {
              LightmapShadowMaskTexture = new global::PLUME.Sample.Unity.AssetIdentifier();
            }
            input.ReadMessage(LightmapShadowMaskTexture);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
