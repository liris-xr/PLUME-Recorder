// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: unity/reflection_probe.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PLUME.Sample.Unity {

  /// <summary>Holder for reflection information generated from unity/reflection_probe.proto</summary>
  public static partial class ReflectionProbeReflection {

    #region Descriptor
    /// <summary>File descriptor for unity/reflection_probe.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ReflectionProbeReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chx1bml0eS9yZWZsZWN0aW9uX3Byb2JlLnByb3RvEhJwbHVtZS5zYW1wbGUu",
            "dW5pdHkaF3VuaXR5L2lkZW50aWZpZXJzLnByb3RvGhNjb21tb24vYm91bmRz",
            "LnByb3RvGhJjb21tb24vY29sb3IucHJvdG8iTAoVUmVmbGVjdGlvblByb2Jl",
            "Q3JlYXRlEjMKAmlkGAEgASgLMicucGx1bWUuc2FtcGxlLnVuaXR5LkNvbXBv",
            "bmVudElkZW50aWZpZXIiZAocUmVmbGVjdGlvblByb2JlVXBkYXRlRW5hYmxl",
            "ZBIzCgJpZBgBIAEoCzInLnBsdW1lLnNhbXBsZS51bml0eS5Db21wb25lbnRJ",
            "ZGVudGlmaWVyEg8KB2VuYWJsZWQYAiABKAgi9wYKFVJlZmxlY3Rpb25Qcm9i",
            "ZVVwZGF0ZRIzCgJpZBgBIAEoCzInLnBsdW1lLnNhbXBsZS51bml0eS5Db21w",
            "b25lbnRJZGVudGlmaWVyEjUKBG1vZGUYAiABKA4yJy5wbHVtZS5zYW1wbGUu",
            "dW5pdHkuUmVmbGVjdGlvblByb2JlTW9kZRJECgxyZWZyZXNoX21vZGUYAyAB",
            "KA4yLi5wbHVtZS5zYW1wbGUudW5pdHkuUmVmbGVjdGlvblByb2JlUmVmcmVz",
            "aE1vZGUSTQoRdGltZV9zbGljaW5nX21vZGUYBCABKA4yMi5wbHVtZS5zYW1w",
            "bGUudW5pdHkuUmVmbGVjdGlvblByb2JlVGltZVNsaWNpbmdNb2RlEkIKC2Ns",
            "ZWFyX2ZsYWdzGAUgASgOMi0ucGx1bWUuc2FtcGxlLnVuaXR5LlJlZmxlY3Rp",
            "b25Qcm9iZUNsZWFyRmxhZ3MSEgoKaW1wb3J0YW5jZRgGIAEoBRIRCglpbnRl",
            "bnNpdHkYByABKAISFwoPbmVhcl9jbGlwX3BsYW5lGAggASgCEhYKDmZhcl9j",
            "bGlwX3BsYW5lGAkgASgCEh4KFnJlbmRlcl9keW5hbWljX29iamVjdHMYCiAB",
            "KAgSFgoOYm94X3Byb2plY3Rpb24YCyABKAgSFgoOYmxlbmRfZGlzdGFuY2UY",
            "DCABKAISKwoGYm91bmRzGA0gASgLMhsucGx1bWUuc2FtcGxlLmNvbW1vbi5C",
            "b3VuZHMSEgoKcmVzb2x1dGlvbhgOIAEoBRILCgNoZHIYDyABKAgSFwoPc2hh",
            "ZG93X2Rpc3RhbmNlGBAgASgCEjQKEGJhY2tncm91bmRfY29sb3IYESABKAsy",
            "Gi5wbHVtZS5zYW1wbGUuY29tbW9uLkNvbG9yEhQKDGN1bGxpbmdfbWFzaxgS",
            "IAEoBRJJChdjdXN0b21fYmFrZWRfdGV4dHVyZV9pZBgTIAEoCzIjLnBsdW1l",
            "LnNhbXBsZS51bml0eS5Bc3NldElkZW50aWZpZXJIAIgBARJCChBiYWtlZF90",
            "ZXh0dXJlX2lkGBQgASgLMiMucGx1bWUuc2FtcGxlLnVuaXR5LkFzc2V0SWRl",
            "bnRpZmllckgBiAEBQhoKGF9jdXN0b21fYmFrZWRfdGV4dHVyZV9pZEITChFf",
            "YmFrZWRfdGV4dHVyZV9pZCp8ChNSZWZsZWN0aW9uUHJvYmVNb2RlEh8KG1JF",
            "RkxFQ1RJT05fUFJPQkVfTU9ERV9CQUtFRBAAEiAKHFJFRkxFQ1RJT05fUFJP",
            "QkVfTU9ERV9DVVNUT00QARIiCh5SRUZMRUNUSU9OX1BST0JFX01PREVfUkVB",
            "TFRJTUUQAipyChlSZWZsZWN0aW9uUHJvYmVDbGVhckZsYWdzEicKI1JFRkxF",
            "Q1RJT05fUFJPQkVfQ0xFQVJfRkxBR1NfU0tZQk9YEAASLAooUkVGTEVDVElP",
            "Tl9QUk9CRV9DTEVBUl9GTEFHU19TT0xJRF9DT0xPUhABKqgBChpSZWZsZWN0",
            "aW9uUHJvYmVSZWZyZXNoTW9kZRIqCiZSRUZMRUNUSU9OX1BST0JFX1JFRlJF",
            "U0hfTU9ERV9PTl9BV0FLRRAAEi0KKVJFRkxFQ1RJT05fUFJPQkVfUkVGUkVT",
            "SF9NT0RFX0VWRVJZX0ZSQU1FEAESLworUkVGTEVDVElPTl9QUk9CRV9SRUZS",
            "RVNIX01PREVfVklBX1NDUklQVElORxACKssBCh5SZWZsZWN0aW9uUHJvYmVU",
            "aW1lU2xpY2luZ01vZGUSOAo0UkVGTEVDVElPTl9QUk9CRV9USU1FX1NMSUNJ",
            "TkdfTU9ERV9BTExfRkFDRVNfQVRfT05DRRAAEjcKM1JFRkxFQ1RJT05fUFJP",
            "QkVfVElNRV9TTElDSU5HX01PREVfSU5ESVZJRFVBTF9GQUNFUxABEjYKMlJF",
            "RkxFQ1RJT05fUFJPQkVfVElNRV9TTElDSU5HX01PREVfTk9fVElNRV9TTElD",
            "SU5HEAJCFaoCElBMVU1FLlNhbXBsZS5Vbml0eWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::PLUME.Sample.Unity.IdentifiersReflection.Descriptor, global::PLUME.Sample.Common.BoundsReflection.Descriptor, global::PLUME.Sample.Common.ColorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::PLUME.Sample.Unity.ReflectionProbeMode), typeof(global::PLUME.Sample.Unity.ReflectionProbeClearFlags), typeof(global::PLUME.Sample.Unity.ReflectionProbeRefreshMode), typeof(global::PLUME.Sample.Unity.ReflectionProbeTimeSlicingMode), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PLUME.Sample.Unity.ReflectionProbeCreate), global::PLUME.Sample.Unity.ReflectionProbeCreate.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PLUME.Sample.Unity.ReflectionProbeUpdateEnabled), global::PLUME.Sample.Unity.ReflectionProbeUpdateEnabled.Parser, new[]{ "Id", "Enabled" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PLUME.Sample.Unity.ReflectionProbeUpdate), global::PLUME.Sample.Unity.ReflectionProbeUpdate.Parser, new[]{ "Id", "Mode", "RefreshMode", "TimeSlicingMode", "ClearFlags", "Importance", "Intensity", "NearClipPlane", "FarClipPlane", "RenderDynamicObjects", "BoxProjection", "BlendDistance", "Bounds", "Resolution", "Hdr", "ShadowDistance", "BackgroundColor", "CullingMask", "CustomBakedTextureId", "BakedTextureId" }, new[]{ "CustomBakedTextureId", "BakedTextureId" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ReflectionProbeMode {
    [pbr::OriginalName("REFLECTION_PROBE_MODE_BAKED")] Baked = 0,
    [pbr::OriginalName("REFLECTION_PROBE_MODE_CUSTOM")] Custom = 1,
    [pbr::OriginalName("REFLECTION_PROBE_MODE_REALTIME")] Realtime = 2,
  }

  public enum ReflectionProbeClearFlags {
    [pbr::OriginalName("REFLECTION_PROBE_CLEAR_FLAGS_SKYBOX")] Skybox = 0,
    [pbr::OriginalName("REFLECTION_PROBE_CLEAR_FLAGS_SOLID_COLOR")] SolidColor = 1,
  }

  public enum ReflectionProbeRefreshMode {
    [pbr::OriginalName("REFLECTION_PROBE_REFRESH_MODE_ON_AWAKE")] OnAwake = 0,
    [pbr::OriginalName("REFLECTION_PROBE_REFRESH_MODE_EVERY_FRAME")] EveryFrame = 1,
    [pbr::OriginalName("REFLECTION_PROBE_REFRESH_MODE_VIA_SCRIPTING")] ViaScripting = 2,
  }

  public enum ReflectionProbeTimeSlicingMode {
    [pbr::OriginalName("REFLECTION_PROBE_TIME_SLICING_MODE_ALL_FACES_AT_ONCE")] AllFacesAtOnce = 0,
    [pbr::OriginalName("REFLECTION_PROBE_TIME_SLICING_MODE_INDIVIDUAL_FACES")] IndividualFaces = 1,
    [pbr::OriginalName("REFLECTION_PROBE_TIME_SLICING_MODE_NO_TIME_SLICING")] NoTimeSlicing = 2,
  }

  #endregion

  #region Messages
  public sealed partial class ReflectionProbeCreate : pb::IMessage<ReflectionProbeCreate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReflectionProbeCreate> _parser = new pb::MessageParser<ReflectionProbeCreate>(() => new ReflectionProbeCreate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ReflectionProbeCreate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PLUME.Sample.Unity.ReflectionProbeReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReflectionProbeCreate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReflectionProbeCreate(ReflectionProbeCreate other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReflectionProbeCreate Clone() {
      return new ReflectionProbeCreate(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::PLUME.Sample.Unity.ComponentIdentifier id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.ComponentIdentifier Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ReflectionProbeCreate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ReflectionProbeCreate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ReflectionProbeCreate other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::PLUME.Sample.Unity.ComponentIdentifier();
        }
        Id.MergeFrom(other.Id);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::PLUME.Sample.Unity.ComponentIdentifier();
            }
            input.ReadMessage(Id);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::PLUME.Sample.Unity.ComponentIdentifier();
            }
            input.ReadMessage(Id);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ReflectionProbeUpdateEnabled : pb::IMessage<ReflectionProbeUpdateEnabled>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReflectionProbeUpdateEnabled> _parser = new pb::MessageParser<ReflectionProbeUpdateEnabled>(() => new ReflectionProbeUpdateEnabled());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ReflectionProbeUpdateEnabled> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PLUME.Sample.Unity.ReflectionProbeReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReflectionProbeUpdateEnabled() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReflectionProbeUpdateEnabled(ReflectionProbeUpdateEnabled other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      enabled_ = other.enabled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReflectionProbeUpdateEnabled Clone() {
      return new ReflectionProbeUpdateEnabled(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::PLUME.Sample.Unity.ComponentIdentifier id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.ComponentIdentifier Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "enabled" field.</summary>
    public const int EnabledFieldNumber = 2;
    private bool enabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Enabled {
      get { return enabled_; }
      set {
        enabled_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ReflectionProbeUpdateEnabled);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ReflectionProbeUpdateEnabled other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (Enabled != other.Enabled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (Enabled != false) hash ^= Enabled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (Enabled != false) {
        output.WriteRawTag(16);
        output.WriteBool(Enabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (Enabled != false) {
        output.WriteRawTag(16);
        output.WriteBool(Enabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (Enabled != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ReflectionProbeUpdateEnabled other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::PLUME.Sample.Unity.ComponentIdentifier();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.Enabled != false) {
        Enabled = other.Enabled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::PLUME.Sample.Unity.ComponentIdentifier();
            }
            input.ReadMessage(Id);
            break;
          }
          case 16: {
            Enabled = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::PLUME.Sample.Unity.ComponentIdentifier();
            }
            input.ReadMessage(Id);
            break;
          }
          case 16: {
            Enabled = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ReflectionProbeUpdate : pb::IMessage<ReflectionProbeUpdate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReflectionProbeUpdate> _parser = new pb::MessageParser<ReflectionProbeUpdate>(() => new ReflectionProbeUpdate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ReflectionProbeUpdate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PLUME.Sample.Unity.ReflectionProbeReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReflectionProbeUpdate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReflectionProbeUpdate(ReflectionProbeUpdate other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      mode_ = other.mode_;
      refreshMode_ = other.refreshMode_;
      timeSlicingMode_ = other.timeSlicingMode_;
      clearFlags_ = other.clearFlags_;
      importance_ = other.importance_;
      intensity_ = other.intensity_;
      nearClipPlane_ = other.nearClipPlane_;
      farClipPlane_ = other.farClipPlane_;
      renderDynamicObjects_ = other.renderDynamicObjects_;
      boxProjection_ = other.boxProjection_;
      blendDistance_ = other.blendDistance_;
      bounds_ = other.bounds_ != null ? other.bounds_.Clone() : null;
      resolution_ = other.resolution_;
      hdr_ = other.hdr_;
      shadowDistance_ = other.shadowDistance_;
      backgroundColor_ = other.backgroundColor_ != null ? other.backgroundColor_.Clone() : null;
      cullingMask_ = other.cullingMask_;
      customBakedTextureId_ = other.customBakedTextureId_ != null ? other.customBakedTextureId_.Clone() : null;
      bakedTextureId_ = other.bakedTextureId_ != null ? other.bakedTextureId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReflectionProbeUpdate Clone() {
      return new ReflectionProbeUpdate(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::PLUME.Sample.Unity.ComponentIdentifier id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.ComponentIdentifier Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "mode" field.</summary>
    public const int ModeFieldNumber = 2;
    private global::PLUME.Sample.Unity.ReflectionProbeMode mode_ = global::PLUME.Sample.Unity.ReflectionProbeMode.Baked;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.ReflectionProbeMode Mode {
      get { return mode_; }
      set {
        mode_ = value;
      }
    }

    /// <summary>Field number for the "refresh_mode" field.</summary>
    public const int RefreshModeFieldNumber = 3;
    private global::PLUME.Sample.Unity.ReflectionProbeRefreshMode refreshMode_ = global::PLUME.Sample.Unity.ReflectionProbeRefreshMode.OnAwake;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.ReflectionProbeRefreshMode RefreshMode {
      get { return refreshMode_; }
      set {
        refreshMode_ = value;
      }
    }

    /// <summary>Field number for the "time_slicing_mode" field.</summary>
    public const int TimeSlicingModeFieldNumber = 4;
    private global::PLUME.Sample.Unity.ReflectionProbeTimeSlicingMode timeSlicingMode_ = global::PLUME.Sample.Unity.ReflectionProbeTimeSlicingMode.AllFacesAtOnce;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.ReflectionProbeTimeSlicingMode TimeSlicingMode {
      get { return timeSlicingMode_; }
      set {
        timeSlicingMode_ = value;
      }
    }

    /// <summary>Field number for the "clear_flags" field.</summary>
    public const int ClearFlagsFieldNumber = 5;
    private global::PLUME.Sample.Unity.ReflectionProbeClearFlags clearFlags_ = global::PLUME.Sample.Unity.ReflectionProbeClearFlags.Skybox;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.ReflectionProbeClearFlags ClearFlags {
      get { return clearFlags_; }
      set {
        clearFlags_ = value;
      }
    }

    /// <summary>Field number for the "importance" field.</summary>
    public const int ImportanceFieldNumber = 6;
    private int importance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Importance {
      get { return importance_; }
      set {
        importance_ = value;
      }
    }

    /// <summary>Field number for the "intensity" field.</summary>
    public const int IntensityFieldNumber = 7;
    private float intensity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Intensity {
      get { return intensity_; }
      set {
        intensity_ = value;
      }
    }

    /// <summary>Field number for the "near_clip_plane" field.</summary>
    public const int NearClipPlaneFieldNumber = 8;
    private float nearClipPlane_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float NearClipPlane {
      get { return nearClipPlane_; }
      set {
        nearClipPlane_ = value;
      }
    }

    /// <summary>Field number for the "far_clip_plane" field.</summary>
    public const int FarClipPlaneFieldNumber = 9;
    private float farClipPlane_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float FarClipPlane {
      get { return farClipPlane_; }
      set {
        farClipPlane_ = value;
      }
    }

    /// <summary>Field number for the "render_dynamic_objects" field.</summary>
    public const int RenderDynamicObjectsFieldNumber = 10;
    private bool renderDynamicObjects_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool RenderDynamicObjects {
      get { return renderDynamicObjects_; }
      set {
        renderDynamicObjects_ = value;
      }
    }

    /// <summary>Field number for the "box_projection" field.</summary>
    public const int BoxProjectionFieldNumber = 11;
    private bool boxProjection_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool BoxProjection {
      get { return boxProjection_; }
      set {
        boxProjection_ = value;
      }
    }

    /// <summary>Field number for the "blend_distance" field.</summary>
    public const int BlendDistanceFieldNumber = 12;
    private float blendDistance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float BlendDistance {
      get { return blendDistance_; }
      set {
        blendDistance_ = value;
      }
    }

    /// <summary>Field number for the "bounds" field.</summary>
    public const int BoundsFieldNumber = 13;
    private global::PLUME.Sample.Common.Bounds bounds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Common.Bounds Bounds {
      get { return bounds_; }
      set {
        bounds_ = value;
      }
    }

    /// <summary>Field number for the "resolution" field.</summary>
    public const int ResolutionFieldNumber = 14;
    private int resolution_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Resolution {
      get { return resolution_; }
      set {
        resolution_ = value;
      }
    }

    /// <summary>Field number for the "hdr" field.</summary>
    public const int HdrFieldNumber = 15;
    private bool hdr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Hdr {
      get { return hdr_; }
      set {
        hdr_ = value;
      }
    }

    /// <summary>Field number for the "shadow_distance" field.</summary>
    public const int ShadowDistanceFieldNumber = 16;
    private float shadowDistance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ShadowDistance {
      get { return shadowDistance_; }
      set {
        shadowDistance_ = value;
      }
    }

    /// <summary>Field number for the "background_color" field.</summary>
    public const int BackgroundColorFieldNumber = 17;
    private global::PLUME.Sample.Common.Color backgroundColor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Common.Color BackgroundColor {
      get { return backgroundColor_; }
      set {
        backgroundColor_ = value;
      }
    }

    /// <summary>Field number for the "culling_mask" field.</summary>
    public const int CullingMaskFieldNumber = 18;
    private int cullingMask_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CullingMask {
      get { return cullingMask_; }
      set {
        cullingMask_ = value;
      }
    }

    /// <summary>Field number for the "custom_baked_texture_id" field.</summary>
    public const int CustomBakedTextureIdFieldNumber = 19;
    private global::PLUME.Sample.Unity.AssetIdentifier customBakedTextureId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.AssetIdentifier CustomBakedTextureId {
      get { return customBakedTextureId_; }
      set {
        customBakedTextureId_ = value;
      }
    }

    /// <summary>Field number for the "baked_texture_id" field.</summary>
    public const int BakedTextureIdFieldNumber = 20;
    private global::PLUME.Sample.Unity.AssetIdentifier bakedTextureId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.AssetIdentifier BakedTextureId {
      get { return bakedTextureId_; }
      set {
        bakedTextureId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ReflectionProbeUpdate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ReflectionProbeUpdate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (Mode != other.Mode) return false;
      if (RefreshMode != other.RefreshMode) return false;
      if (TimeSlicingMode != other.TimeSlicingMode) return false;
      if (ClearFlags != other.ClearFlags) return false;
      if (Importance != other.Importance) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Intensity, other.Intensity)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(NearClipPlane, other.NearClipPlane)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FarClipPlane, other.FarClipPlane)) return false;
      if (RenderDynamicObjects != other.RenderDynamicObjects) return false;
      if (BoxProjection != other.BoxProjection) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BlendDistance, other.BlendDistance)) return false;
      if (!object.Equals(Bounds, other.Bounds)) return false;
      if (Resolution != other.Resolution) return false;
      if (Hdr != other.Hdr) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ShadowDistance, other.ShadowDistance)) return false;
      if (!object.Equals(BackgroundColor, other.BackgroundColor)) return false;
      if (CullingMask != other.CullingMask) return false;
      if (!object.Equals(CustomBakedTextureId, other.CustomBakedTextureId)) return false;
      if (!object.Equals(BakedTextureId, other.BakedTextureId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (Mode != global::PLUME.Sample.Unity.ReflectionProbeMode.Baked) hash ^= Mode.GetHashCode();
      if (RefreshMode != global::PLUME.Sample.Unity.ReflectionProbeRefreshMode.OnAwake) hash ^= RefreshMode.GetHashCode();
      if (TimeSlicingMode != global::PLUME.Sample.Unity.ReflectionProbeTimeSlicingMode.AllFacesAtOnce) hash ^= TimeSlicingMode.GetHashCode();
      if (ClearFlags != global::PLUME.Sample.Unity.ReflectionProbeClearFlags.Skybox) hash ^= ClearFlags.GetHashCode();
      if (Importance != 0) hash ^= Importance.GetHashCode();
      if (Intensity != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Intensity);
      if (NearClipPlane != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(NearClipPlane);
      if (FarClipPlane != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FarClipPlane);
      if (RenderDynamicObjects != false) hash ^= RenderDynamicObjects.GetHashCode();
      if (BoxProjection != false) hash ^= BoxProjection.GetHashCode();
      if (BlendDistance != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BlendDistance);
      if (bounds_ != null) hash ^= Bounds.GetHashCode();
      if (Resolution != 0) hash ^= Resolution.GetHashCode();
      if (Hdr != false) hash ^= Hdr.GetHashCode();
      if (ShadowDistance != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ShadowDistance);
      if (backgroundColor_ != null) hash ^= BackgroundColor.GetHashCode();
      if (CullingMask != 0) hash ^= CullingMask.GetHashCode();
      if (customBakedTextureId_ != null) hash ^= CustomBakedTextureId.GetHashCode();
      if (bakedTextureId_ != null) hash ^= BakedTextureId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (Mode != global::PLUME.Sample.Unity.ReflectionProbeMode.Baked) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Mode);
      }
      if (RefreshMode != global::PLUME.Sample.Unity.ReflectionProbeRefreshMode.OnAwake) {
        output.WriteRawTag(24);
        output.WriteEnum((int) RefreshMode);
      }
      if (TimeSlicingMode != global::PLUME.Sample.Unity.ReflectionProbeTimeSlicingMode.AllFacesAtOnce) {
        output.WriteRawTag(32);
        output.WriteEnum((int) TimeSlicingMode);
      }
      if (ClearFlags != global::PLUME.Sample.Unity.ReflectionProbeClearFlags.Skybox) {
        output.WriteRawTag(40);
        output.WriteEnum((int) ClearFlags);
      }
      if (Importance != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Importance);
      }
      if (Intensity != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Intensity);
      }
      if (NearClipPlane != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(NearClipPlane);
      }
      if (FarClipPlane != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(FarClipPlane);
      }
      if (RenderDynamicObjects != false) {
        output.WriteRawTag(80);
        output.WriteBool(RenderDynamicObjects);
      }
      if (BoxProjection != false) {
        output.WriteRawTag(88);
        output.WriteBool(BoxProjection);
      }
      if (BlendDistance != 0F) {
        output.WriteRawTag(101);
        output.WriteFloat(BlendDistance);
      }
      if (bounds_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Bounds);
      }
      if (Resolution != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(Resolution);
      }
      if (Hdr != false) {
        output.WriteRawTag(120);
        output.WriteBool(Hdr);
      }
      if (ShadowDistance != 0F) {
        output.WriteRawTag(133, 1);
        output.WriteFloat(ShadowDistance);
      }
      if (backgroundColor_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(BackgroundColor);
      }
      if (CullingMask != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(CullingMask);
      }
      if (customBakedTextureId_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(CustomBakedTextureId);
      }
      if (bakedTextureId_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(BakedTextureId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (Mode != global::PLUME.Sample.Unity.ReflectionProbeMode.Baked) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Mode);
      }
      if (RefreshMode != global::PLUME.Sample.Unity.ReflectionProbeRefreshMode.OnAwake) {
        output.WriteRawTag(24);
        output.WriteEnum((int) RefreshMode);
      }
      if (TimeSlicingMode != global::PLUME.Sample.Unity.ReflectionProbeTimeSlicingMode.AllFacesAtOnce) {
        output.WriteRawTag(32);
        output.WriteEnum((int) TimeSlicingMode);
      }
      if (ClearFlags != global::PLUME.Sample.Unity.ReflectionProbeClearFlags.Skybox) {
        output.WriteRawTag(40);
        output.WriteEnum((int) ClearFlags);
      }
      if (Importance != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Importance);
      }
      if (Intensity != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Intensity);
      }
      if (NearClipPlane != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(NearClipPlane);
      }
      if (FarClipPlane != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(FarClipPlane);
      }
      if (RenderDynamicObjects != false) {
        output.WriteRawTag(80);
        output.WriteBool(RenderDynamicObjects);
      }
      if (BoxProjection != false) {
        output.WriteRawTag(88);
        output.WriteBool(BoxProjection);
      }
      if (BlendDistance != 0F) {
        output.WriteRawTag(101);
        output.WriteFloat(BlendDistance);
      }
      if (bounds_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Bounds);
      }
      if (Resolution != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(Resolution);
      }
      if (Hdr != false) {
        output.WriteRawTag(120);
        output.WriteBool(Hdr);
      }
      if (ShadowDistance != 0F) {
        output.WriteRawTag(133, 1);
        output.WriteFloat(ShadowDistance);
      }
      if (backgroundColor_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(BackgroundColor);
      }
      if (CullingMask != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(CullingMask);
      }
      if (customBakedTextureId_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(CustomBakedTextureId);
      }
      if (bakedTextureId_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(BakedTextureId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (Mode != global::PLUME.Sample.Unity.ReflectionProbeMode.Baked) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Mode);
      }
      if (RefreshMode != global::PLUME.Sample.Unity.ReflectionProbeRefreshMode.OnAwake) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RefreshMode);
      }
      if (TimeSlicingMode != global::PLUME.Sample.Unity.ReflectionProbeTimeSlicingMode.AllFacesAtOnce) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TimeSlicingMode);
      }
      if (ClearFlags != global::PLUME.Sample.Unity.ReflectionProbeClearFlags.Skybox) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ClearFlags);
      }
      if (Importance != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Importance);
      }
      if (Intensity != 0F) {
        size += 1 + 4;
      }
      if (NearClipPlane != 0F) {
        size += 1 + 4;
      }
      if (FarClipPlane != 0F) {
        size += 1 + 4;
      }
      if (RenderDynamicObjects != false) {
        size += 1 + 1;
      }
      if (BoxProjection != false) {
        size += 1 + 1;
      }
      if (BlendDistance != 0F) {
        size += 1 + 4;
      }
      if (bounds_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bounds);
      }
      if (Resolution != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Resolution);
      }
      if (Hdr != false) {
        size += 1 + 1;
      }
      if (ShadowDistance != 0F) {
        size += 2 + 4;
      }
      if (backgroundColor_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BackgroundColor);
      }
      if (CullingMask != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CullingMask);
      }
      if (customBakedTextureId_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CustomBakedTextureId);
      }
      if (bakedTextureId_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BakedTextureId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ReflectionProbeUpdate other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::PLUME.Sample.Unity.ComponentIdentifier();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.Mode != global::PLUME.Sample.Unity.ReflectionProbeMode.Baked) {
        Mode = other.Mode;
      }
      if (other.RefreshMode != global::PLUME.Sample.Unity.ReflectionProbeRefreshMode.OnAwake) {
        RefreshMode = other.RefreshMode;
      }
      if (other.TimeSlicingMode != global::PLUME.Sample.Unity.ReflectionProbeTimeSlicingMode.AllFacesAtOnce) {
        TimeSlicingMode = other.TimeSlicingMode;
      }
      if (other.ClearFlags != global::PLUME.Sample.Unity.ReflectionProbeClearFlags.Skybox) {
        ClearFlags = other.ClearFlags;
      }
      if (other.Importance != 0) {
        Importance = other.Importance;
      }
      if (other.Intensity != 0F) {
        Intensity = other.Intensity;
      }
      if (other.NearClipPlane != 0F) {
        NearClipPlane = other.NearClipPlane;
      }
      if (other.FarClipPlane != 0F) {
        FarClipPlane = other.FarClipPlane;
      }
      if (other.RenderDynamicObjects != false) {
        RenderDynamicObjects = other.RenderDynamicObjects;
      }
      if (other.BoxProjection != false) {
        BoxProjection = other.BoxProjection;
      }
      if (other.BlendDistance != 0F) {
        BlendDistance = other.BlendDistance;
      }
      if (other.bounds_ != null) {
        if (bounds_ == null) {
          Bounds = new global::PLUME.Sample.Common.Bounds();
        }
        Bounds.MergeFrom(other.Bounds);
      }
      if (other.Resolution != 0) {
        Resolution = other.Resolution;
      }
      if (other.Hdr != false) {
        Hdr = other.Hdr;
      }
      if (other.ShadowDistance != 0F) {
        ShadowDistance = other.ShadowDistance;
      }
      if (other.backgroundColor_ != null) {
        if (backgroundColor_ == null) {
          BackgroundColor = new global::PLUME.Sample.Common.Color();
        }
        BackgroundColor.MergeFrom(other.BackgroundColor);
      }
      if (other.CullingMask != 0) {
        CullingMask = other.CullingMask;
      }
      if (other.customBakedTextureId_ != null) {
        if (customBakedTextureId_ == null) {
          CustomBakedTextureId = new global::PLUME.Sample.Unity.AssetIdentifier();
        }
        CustomBakedTextureId.MergeFrom(other.CustomBakedTextureId);
      }
      if (other.bakedTextureId_ != null) {
        if (bakedTextureId_ == null) {
          BakedTextureId = new global::PLUME.Sample.Unity.AssetIdentifier();
        }
        BakedTextureId.MergeFrom(other.BakedTextureId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::PLUME.Sample.Unity.ComponentIdentifier();
            }
            input.ReadMessage(Id);
            break;
          }
          case 16: {
            Mode = (global::PLUME.Sample.Unity.ReflectionProbeMode) input.ReadEnum();
            break;
          }
          case 24: {
            RefreshMode = (global::PLUME.Sample.Unity.ReflectionProbeRefreshMode) input.ReadEnum();
            break;
          }
          case 32: {
            TimeSlicingMode = (global::PLUME.Sample.Unity.ReflectionProbeTimeSlicingMode) input.ReadEnum();
            break;
          }
          case 40: {
            ClearFlags = (global::PLUME.Sample.Unity.ReflectionProbeClearFlags) input.ReadEnum();
            break;
          }
          case 48: {
            Importance = input.ReadInt32();
            break;
          }
          case 61: {
            Intensity = input.ReadFloat();
            break;
          }
          case 69: {
            NearClipPlane = input.ReadFloat();
            break;
          }
          case 77: {
            FarClipPlane = input.ReadFloat();
            break;
          }
          case 80: {
            RenderDynamicObjects = input.ReadBool();
            break;
          }
          case 88: {
            BoxProjection = input.ReadBool();
            break;
          }
          case 101: {
            BlendDistance = input.ReadFloat();
            break;
          }
          case 106: {
            if (bounds_ == null) {
              Bounds = new global::PLUME.Sample.Common.Bounds();
            }
            input.ReadMessage(Bounds);
            break;
          }
          case 112: {
            Resolution = input.ReadInt32();
            break;
          }
          case 120: {
            Hdr = input.ReadBool();
            break;
          }
          case 133: {
            ShadowDistance = input.ReadFloat();
            break;
          }
          case 138: {
            if (backgroundColor_ == null) {
              BackgroundColor = new global::PLUME.Sample.Common.Color();
            }
            input.ReadMessage(BackgroundColor);
            break;
          }
          case 144: {
            CullingMask = input.ReadInt32();
            break;
          }
          case 154: {
            if (customBakedTextureId_ == null) {
              CustomBakedTextureId = new global::PLUME.Sample.Unity.AssetIdentifier();
            }
            input.ReadMessage(CustomBakedTextureId);
            break;
          }
          case 162: {
            if (bakedTextureId_ == null) {
              BakedTextureId = new global::PLUME.Sample.Unity.AssetIdentifier();
            }
            input.ReadMessage(BakedTextureId);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::PLUME.Sample.Unity.ComponentIdentifier();
            }
            input.ReadMessage(Id);
            break;
          }
          case 16: {
            Mode = (global::PLUME.Sample.Unity.ReflectionProbeMode) input.ReadEnum();
            break;
          }
          case 24: {
            RefreshMode = (global::PLUME.Sample.Unity.ReflectionProbeRefreshMode) input.ReadEnum();
            break;
          }
          case 32: {
            TimeSlicingMode = (global::PLUME.Sample.Unity.ReflectionProbeTimeSlicingMode) input.ReadEnum();
            break;
          }
          case 40: {
            ClearFlags = (global::PLUME.Sample.Unity.ReflectionProbeClearFlags) input.ReadEnum();
            break;
          }
          case 48: {
            Importance = input.ReadInt32();
            break;
          }
          case 61: {
            Intensity = input.ReadFloat();
            break;
          }
          case 69: {
            NearClipPlane = input.ReadFloat();
            break;
          }
          case 77: {
            FarClipPlane = input.ReadFloat();
            break;
          }
          case 80: {
            RenderDynamicObjects = input.ReadBool();
            break;
          }
          case 88: {
            BoxProjection = input.ReadBool();
            break;
          }
          case 101: {
            BlendDistance = input.ReadFloat();
            break;
          }
          case 106: {
            if (bounds_ == null) {
              Bounds = new global::PLUME.Sample.Common.Bounds();
            }
            input.ReadMessage(Bounds);
            break;
          }
          case 112: {
            Resolution = input.ReadInt32();
            break;
          }
          case 120: {
            Hdr = input.ReadBool();
            break;
          }
          case 133: {
            ShadowDistance = input.ReadFloat();
            break;
          }
          case 138: {
            if (backgroundColor_ == null) {
              BackgroundColor = new global::PLUME.Sample.Common.Color();
            }
            input.ReadMessage(BackgroundColor);
            break;
          }
          case 144: {
            CullingMask = input.ReadInt32();
            break;
          }
          case 154: {
            if (customBakedTextureId_ == null) {
              CustomBakedTextureId = new global::PLUME.Sample.Unity.AssetIdentifier();
            }
            input.ReadMessage(CustomBakedTextureId);
            break;
          }
          case 162: {
            if (bakedTextureId_ == null) {
              BakedTextureId = new global::PLUME.Sample.Unity.AssetIdentifier();
            }
            input.ReadMessage(BakedTextureId);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
