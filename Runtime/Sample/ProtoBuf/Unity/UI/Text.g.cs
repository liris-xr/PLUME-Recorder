// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: plume/sample/unity/ui/text.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PLUME.Sample.Unity.UI {

  /// <summary>Holder for reflection information generated from plume/sample/unity/ui/text.proto</summary>
  public static partial class TextReflection {

    #region Descriptor
    /// <summary>File descriptor for plume/sample/unity/ui/text.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TextReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiBwbHVtZS9zYW1wbGUvdW5pdHkvdWkvdGV4dC5wcm90bxIVcGx1bWUuc2Ft",
            "cGxlLnVuaXR5LnVpGiRwbHVtZS9zYW1wbGUvdW5pdHkvaWRlbnRpZmllcnMu",
            "cHJvdG8aH3BsdW1lL3NhbXBsZS9jb21tb24vY29sb3IucHJvdG8iUwoKVGV4",
            "dENyZWF0ZRJFCgljb21wb25lbnQYASABKAsyJy5wbHVtZS5zYW1wbGUudW5p",
            "dHkuQ29tcG9uZW50SWRlbnRpZmllclIJY29tcG9uZW50IlQKC1RleHREZXN0",
            "cm95EkUKCWNvbXBvbmVudBgBIAEoCzInLnBsdW1lLnNhbXBsZS51bml0eS5D",
            "b21wb25lbnRJZGVudGlmaWVyUgljb21wb25lbnQi/wgKClRleHRVcGRhdGUS",
            "RQoJY29tcG9uZW50GAEgASgLMicucGx1bWUuc2FtcGxlLnVuaXR5LkNvbXBv",
            "bmVudElkZW50aWZpZXJSCWNvbXBvbmVudBIXCgR0ZXh0GAIgASgJSABSBHRl",
            "eHSIAQESPAoEZm9udBgDIAEoCzIjLnBsdW1lLnNhbXBsZS51bml0eS5Bc3Nl",
            "dElkZW50aWZpZXJIAVIEZm9udIgBARJECgpmb250X3N0eWxlGAQgASgOMiAu",
            "cGx1bWUuc2FtcGxlLnVuaXR5LnVpLkZvbnRTdHlsZUgCUglmb250U3R5bGWI",
            "AQESIAoJZm9udF9zaXplGAUgASgFSANSCGZvbnRTaXpliAEBEjUKBWNvbG9y",
            "GAYgASgLMhoucGx1bWUuc2FtcGxlLmNvbW1vbi5Db2xvckgEUgVjb2xvcogB",
            "ARImCgxsaW5lX3NwYWNpbmcYByABKAJIBVILbGluZVNwYWNpbmeIAQESLwoR",
            "c3VwcG9ydF9yaWNoX3RleHQYCCABKAhIBlIPc3VwcG9ydFJpY2hUZXh0iAEB",
            "EkQKCWFsaWdubWVudBgJIAEoDjIhLnBsdW1lLnNhbXBsZS51bml0eS51aS5U",
            "ZXh0QW5jaG9ySAdSCWFsaWdubWVudIgBARIvChFhbGlnbl9ieV9nZW9tZXRy",
            "eRgKIAEoCEgIUg9hbGlnbkJ5R2VvbWV0cnmIAQESXwoTaG9yaXpvbnRhbF9v",
            "dmVyZmxvdxgLIAEoDjIpLnBsdW1lLnNhbXBsZS51bml0eS51aS5Ib3Jpem9u",
            "dGFsV3JhcE1vZGVICVISaG9yaXpvbnRhbE92ZXJmbG93iAEBElkKEXZlcnRp",
            "Y2FsX292ZXJmbG93GAwgASgOMicucGx1bWUuc2FtcGxlLnVuaXR5LnVpLlZl",
            "cnRpY2FsV3JhcE1vZGVIClIQdmVydGljYWxPdmVyZmxvd4gBARI7ChhyZXNp",
            "emVfdGV4dF9mb3JfYmVzdF9maXQYDSABKAhIC1IUcmVzaXplVGV4dEZvckJl",
            "c3RGaXSIAQESNAoUcmVzaXplX3RleHRfbWluX3NpemUYDiABKAVIDFIRcmVz",
            "aXplVGV4dE1pblNpemWIAQESNAoUcmVzaXplX3RleHRfbWF4X3NpemUYDyAB",
            "KAVIDVIRcmVzaXplVGV4dE1heFNpemWIAQFCBwoFX3RleHRCBwoFX2ZvbnRC",
            "DQoLX2ZvbnRfc3R5bGVCDAoKX2ZvbnRfc2l6ZUIICgZfY29sb3JCDwoNX2xp",
            "bmVfc3BhY2luZ0IUChJfc3VwcG9ydF9yaWNoX3RleHRCDAoKX2FsaWdubWVu",
            "dEIUChJfYWxpZ25fYnlfZ2VvbWV0cnlCFgoUX2hvcml6b250YWxfb3ZlcmZs",
            "b3dCFAoSX3ZlcnRpY2FsX292ZXJmbG93QhsKGV9yZXNpemVfdGV4dF9mb3Jf",
            "YmVzdF9maXRCFwoVX3Jlc2l6ZV90ZXh0X21pbl9zaXplQhcKFV9yZXNpemVf",
            "dGV4dF9tYXhfc2l6ZSpWChJIb3Jpem9udGFsV3JhcE1vZGUSHQoZSE9SSVpP",
            "TlRBTF9XUkFQX01PREVfV1JBUBAAEiEKHUhPUklaT05UQUxfV1JBUF9NT0RF",
            "X09WRVJGTE9XEAEqVAoQVmVydGljYWxXcmFwTW9kZRIfChtWRVJUSUNBTF9X",
            "UkFQX01PREVfVFJVTkNBVEUQABIfChtWRVJUSUNBTF9XUkFQX01PREVfT1ZF",
            "UkZMT1cQASqUAgoKVGV4dEFuY2hvchIaChZURVhUX0FOQ0hPUl9VUFBFUl9M",
            "RUZUEAASHAoYVEVYVF9BTkNIT1JfVVBQRVJfQ0VOVEVSEAESGwoXVEVYVF9B",
            "TkNIT1JfVVBQRVJfUklHSFQQAhIbChdURVhUX0FOQ0hPUl9NSURETEVfTEVG",
            "VBADEh0KGVRFWFRfQU5DSE9SX01JRERMRV9DRU5URVIQBBIcChhURVhUX0FO",
            "Q0hPUl9NSURETEVfUklHSFQQBRIaChZURVhUX0FOQ0hPUl9MT1dFUl9MRUZU",
            "EAYSHAoYVEVYVF9BTkNIT1JfTE9XRVJfQ0VOVEVSEAcSGwoXVEVYVF9BTkNI",
            "T1JfTE9XRVJfUklHSFQQCCpuCglGb250U3R5bGUSFQoRRk9OVF9TVFlMRV9O",
            "T1JNQUwQABITCg9GT05UX1NUWUxFX0JPTEQQARIVChFGT05UX1NUWUxFX0lU",
            "QUxJQxACEh4KGkZPTlRfU1RZTEVfQk9MRF9BTkRfSVRBTElDEANCGKoCFVBM",
            "VU1FLlNhbXBsZS5Vbml0eS5VSWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::PLUME.Sample.Unity.IdentifiersReflection.Descriptor, global::PLUME.Sample.Common.ColorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::PLUME.Sample.Unity.UI.HorizontalWrapMode), typeof(global::PLUME.Sample.Unity.UI.VerticalWrapMode), typeof(global::PLUME.Sample.Unity.UI.TextAnchor), typeof(global::PLUME.Sample.Unity.UI.FontStyle), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PLUME.Sample.Unity.UI.TextCreate), global::PLUME.Sample.Unity.UI.TextCreate.Parser, new[]{ "Component" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PLUME.Sample.Unity.UI.TextDestroy), global::PLUME.Sample.Unity.UI.TextDestroy.Parser, new[]{ "Component" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PLUME.Sample.Unity.UI.TextUpdate), global::PLUME.Sample.Unity.UI.TextUpdate.Parser, new[]{ "Component", "Text", "Font", "FontStyle", "FontSize", "Color", "LineSpacing", "SupportRichText", "Alignment", "AlignByGeometry", "HorizontalOverflow", "VerticalOverflow", "ResizeTextForBestFit", "ResizeTextMinSize", "ResizeTextMaxSize" }, new[]{ "Text", "Font", "FontStyle", "FontSize", "Color", "LineSpacing", "SupportRichText", "Alignment", "AlignByGeometry", "HorizontalOverflow", "VerticalOverflow", "ResizeTextForBestFit", "ResizeTextMinSize", "ResizeTextMaxSize" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum HorizontalWrapMode {
    [pbr::OriginalName("HORIZONTAL_WRAP_MODE_WRAP")] Wrap = 0,
    [pbr::OriginalName("HORIZONTAL_WRAP_MODE_OVERFLOW")] Overflow = 1,
  }

  public enum VerticalWrapMode {
    [pbr::OriginalName("VERTICAL_WRAP_MODE_TRUNCATE")] Truncate = 0,
    [pbr::OriginalName("VERTICAL_WRAP_MODE_OVERFLOW")] Overflow = 1,
  }

  public enum TextAnchor {
    [pbr::OriginalName("TEXT_ANCHOR_UPPER_LEFT")] UpperLeft = 0,
    [pbr::OriginalName("TEXT_ANCHOR_UPPER_CENTER")] UpperCenter = 1,
    [pbr::OriginalName("TEXT_ANCHOR_UPPER_RIGHT")] UpperRight = 2,
    [pbr::OriginalName("TEXT_ANCHOR_MIDDLE_LEFT")] MiddleLeft = 3,
    [pbr::OriginalName("TEXT_ANCHOR_MIDDLE_CENTER")] MiddleCenter = 4,
    [pbr::OriginalName("TEXT_ANCHOR_MIDDLE_RIGHT")] MiddleRight = 5,
    [pbr::OriginalName("TEXT_ANCHOR_LOWER_LEFT")] LowerLeft = 6,
    [pbr::OriginalName("TEXT_ANCHOR_LOWER_CENTER")] LowerCenter = 7,
    [pbr::OriginalName("TEXT_ANCHOR_LOWER_RIGHT")] LowerRight = 8,
  }

  public enum FontStyle {
    [pbr::OriginalName("FONT_STYLE_NORMAL")] Normal = 0,
    [pbr::OriginalName("FONT_STYLE_BOLD")] Bold = 1,
    [pbr::OriginalName("FONT_STYLE_ITALIC")] Italic = 2,
    [pbr::OriginalName("FONT_STYLE_BOLD_AND_ITALIC")] BoldAndItalic = 3,
  }

  #endregion

  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class TextCreate : pb::IMessage<TextCreate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TextCreate> _parser = new pb::MessageParser<TextCreate>(() => new TextCreate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TextCreate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PLUME.Sample.Unity.UI.TextReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TextCreate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TextCreate(TextCreate other) : this() {
      component_ = other.component_ != null ? other.component_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TextCreate Clone() {
      return new TextCreate(this);
    }

    /// <summary>Field number for the "component" field.</summary>
    public const int ComponentFieldNumber = 1;
    private global::PLUME.Sample.Unity.ComponentIdentifier component_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.ComponentIdentifier Component {
      get { return component_; }
      set {
        component_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TextCreate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TextCreate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Component, other.Component)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (component_ != null) hash ^= Component.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (component_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Component);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (component_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Component);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (component_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Component);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TextCreate other) {
      if (other == null) {
        return;
      }
      if (other.component_ != null) {
        if (component_ == null) {
          Component = new global::PLUME.Sample.Unity.ComponentIdentifier();
        }
        Component.MergeFrom(other.Component);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (component_ == null) {
              Component = new global::PLUME.Sample.Unity.ComponentIdentifier();
            }
            input.ReadMessage(Component);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (component_ == null) {
              Component = new global::PLUME.Sample.Unity.ComponentIdentifier();
            }
            input.ReadMessage(Component);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class TextDestroy : pb::IMessage<TextDestroy>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TextDestroy> _parser = new pb::MessageParser<TextDestroy>(() => new TextDestroy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TextDestroy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PLUME.Sample.Unity.UI.TextReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TextDestroy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TextDestroy(TextDestroy other) : this() {
      component_ = other.component_ != null ? other.component_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TextDestroy Clone() {
      return new TextDestroy(this);
    }

    /// <summary>Field number for the "component" field.</summary>
    public const int ComponentFieldNumber = 1;
    private global::PLUME.Sample.Unity.ComponentIdentifier component_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.ComponentIdentifier Component {
      get { return component_; }
      set {
        component_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TextDestroy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TextDestroy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Component, other.Component)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (component_ != null) hash ^= Component.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (component_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Component);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (component_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Component);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (component_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Component);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TextDestroy other) {
      if (other == null) {
        return;
      }
      if (other.component_ != null) {
        if (component_ == null) {
          Component = new global::PLUME.Sample.Unity.ComponentIdentifier();
        }
        Component.MergeFrom(other.Component);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (component_ == null) {
              Component = new global::PLUME.Sample.Unity.ComponentIdentifier();
            }
            input.ReadMessage(Component);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (component_ == null) {
              Component = new global::PLUME.Sample.Unity.ComponentIdentifier();
            }
            input.ReadMessage(Component);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class TextUpdate : pb::IMessage<TextUpdate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TextUpdate> _parser = new pb::MessageParser<TextUpdate>(() => new TextUpdate());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TextUpdate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PLUME.Sample.Unity.UI.TextReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TextUpdate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TextUpdate(TextUpdate other) : this() {
      _hasBits0 = other._hasBits0;
      component_ = other.component_ != null ? other.component_.Clone() : null;
      text_ = other.text_;
      font_ = other.font_ != null ? other.font_.Clone() : null;
      fontStyle_ = other.fontStyle_;
      fontSize_ = other.fontSize_;
      color_ = other.color_ != null ? other.color_.Clone() : null;
      lineSpacing_ = other.lineSpacing_;
      supportRichText_ = other.supportRichText_;
      alignment_ = other.alignment_;
      alignByGeometry_ = other.alignByGeometry_;
      horizontalOverflow_ = other.horizontalOverflow_;
      verticalOverflow_ = other.verticalOverflow_;
      resizeTextForBestFit_ = other.resizeTextForBestFit_;
      resizeTextMinSize_ = other.resizeTextMinSize_;
      resizeTextMaxSize_ = other.resizeTextMaxSize_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TextUpdate Clone() {
      return new TextUpdate(this);
    }

    /// <summary>Field number for the "component" field.</summary>
    public const int ComponentFieldNumber = 1;
    private global::PLUME.Sample.Unity.ComponentIdentifier component_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.ComponentIdentifier Component {
      get { return component_; }
      set {
        component_ = value;
      }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 2;
    private readonly static string TextDefaultValue = "";

    private string text_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Text {
      get { return text_ ?? TextDefaultValue; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "text" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasText {
      get { return text_ != null; }
    }
    /// <summary>Clears the value of the "text" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearText() {
      text_ = null;
    }

    /// <summary>Field number for the "font" field.</summary>
    public const int FontFieldNumber = 3;
    private global::PLUME.Sample.Unity.AssetIdentifier font_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.AssetIdentifier Font {
      get { return font_; }
      set {
        font_ = value;
      }
    }

    /// <summary>Field number for the "font_style" field.</summary>
    public const int FontStyleFieldNumber = 4;
    private readonly static global::PLUME.Sample.Unity.UI.FontStyle FontStyleDefaultValue = global::PLUME.Sample.Unity.UI.FontStyle.Normal;

    private global::PLUME.Sample.Unity.UI.FontStyle fontStyle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.UI.FontStyle FontStyle {
      get { if ((_hasBits0 & 1) != 0) { return fontStyle_; } else { return FontStyleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        fontStyle_ = value;
      }
    }
    /// <summary>Gets whether the "font_style" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFontStyle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "font_style" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFontStyle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "font_size" field.</summary>
    public const int FontSizeFieldNumber = 5;
    private readonly static int FontSizeDefaultValue = 0;

    private int fontSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FontSize {
      get { if ((_hasBits0 & 2) != 0) { return fontSize_; } else { return FontSizeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        fontSize_ = value;
      }
    }
    /// <summary>Gets whether the "font_size" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFontSize {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "font_size" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFontSize() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "color" field.</summary>
    public const int ColorFieldNumber = 6;
    private global::PLUME.Sample.Common.Color color_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Common.Color Color {
      get { return color_; }
      set {
        color_ = value;
      }
    }

    /// <summary>Field number for the "line_spacing" field.</summary>
    public const int LineSpacingFieldNumber = 7;
    private readonly static float LineSpacingDefaultValue = 0F;

    private float lineSpacing_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float LineSpacing {
      get { if ((_hasBits0 & 4) != 0) { return lineSpacing_; } else { return LineSpacingDefaultValue; } }
      set {
        _hasBits0 |= 4;
        lineSpacing_ = value;
      }
    }
    /// <summary>Gets whether the "line_spacing" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLineSpacing {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "line_spacing" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLineSpacing() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "support_rich_text" field.</summary>
    public const int SupportRichTextFieldNumber = 8;
    private readonly static bool SupportRichTextDefaultValue = false;

    private bool supportRichText_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SupportRichText {
      get { if ((_hasBits0 & 8) != 0) { return supportRichText_; } else { return SupportRichTextDefaultValue; } }
      set {
        _hasBits0 |= 8;
        supportRichText_ = value;
      }
    }
    /// <summary>Gets whether the "support_rich_text" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSupportRichText {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "support_rich_text" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSupportRichText() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "alignment" field.</summary>
    public const int AlignmentFieldNumber = 9;
    private readonly static global::PLUME.Sample.Unity.UI.TextAnchor AlignmentDefaultValue = global::PLUME.Sample.Unity.UI.TextAnchor.UpperLeft;

    private global::PLUME.Sample.Unity.UI.TextAnchor alignment_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.UI.TextAnchor Alignment {
      get { if ((_hasBits0 & 16) != 0) { return alignment_; } else { return AlignmentDefaultValue; } }
      set {
        _hasBits0 |= 16;
        alignment_ = value;
      }
    }
    /// <summary>Gets whether the "alignment" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAlignment {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "alignment" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAlignment() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "align_by_geometry" field.</summary>
    public const int AlignByGeometryFieldNumber = 10;
    private readonly static bool AlignByGeometryDefaultValue = false;

    private bool alignByGeometry_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AlignByGeometry {
      get { if ((_hasBits0 & 32) != 0) { return alignByGeometry_; } else { return AlignByGeometryDefaultValue; } }
      set {
        _hasBits0 |= 32;
        alignByGeometry_ = value;
      }
    }
    /// <summary>Gets whether the "align_by_geometry" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAlignByGeometry {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "align_by_geometry" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAlignByGeometry() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "horizontal_overflow" field.</summary>
    public const int HorizontalOverflowFieldNumber = 11;
    private readonly static global::PLUME.Sample.Unity.UI.HorizontalWrapMode HorizontalOverflowDefaultValue = global::PLUME.Sample.Unity.UI.HorizontalWrapMode.Wrap;

    private global::PLUME.Sample.Unity.UI.HorizontalWrapMode horizontalOverflow_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.UI.HorizontalWrapMode HorizontalOverflow {
      get { if ((_hasBits0 & 64) != 0) { return horizontalOverflow_; } else { return HorizontalOverflowDefaultValue; } }
      set {
        _hasBits0 |= 64;
        horizontalOverflow_ = value;
      }
    }
    /// <summary>Gets whether the "horizontal_overflow" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHorizontalOverflow {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "horizontal_overflow" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHorizontalOverflow() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "vertical_overflow" field.</summary>
    public const int VerticalOverflowFieldNumber = 12;
    private readonly static global::PLUME.Sample.Unity.UI.VerticalWrapMode VerticalOverflowDefaultValue = global::PLUME.Sample.Unity.UI.VerticalWrapMode.Truncate;

    private global::PLUME.Sample.Unity.UI.VerticalWrapMode verticalOverflow_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.UI.VerticalWrapMode VerticalOverflow {
      get { if ((_hasBits0 & 128) != 0) { return verticalOverflow_; } else { return VerticalOverflowDefaultValue; } }
      set {
        _hasBits0 |= 128;
        verticalOverflow_ = value;
      }
    }
    /// <summary>Gets whether the "vertical_overflow" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVerticalOverflow {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "vertical_overflow" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVerticalOverflow() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "resize_text_for_best_fit" field.</summary>
    public const int ResizeTextForBestFitFieldNumber = 13;
    private readonly static bool ResizeTextForBestFitDefaultValue = false;

    private bool resizeTextForBestFit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ResizeTextForBestFit {
      get { if ((_hasBits0 & 256) != 0) { return resizeTextForBestFit_; } else { return ResizeTextForBestFitDefaultValue; } }
      set {
        _hasBits0 |= 256;
        resizeTextForBestFit_ = value;
      }
    }
    /// <summary>Gets whether the "resize_text_for_best_fit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResizeTextForBestFit {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "resize_text_for_best_fit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResizeTextForBestFit() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "resize_text_min_size" field.</summary>
    public const int ResizeTextMinSizeFieldNumber = 14;
    private readonly static int ResizeTextMinSizeDefaultValue = 0;

    private int resizeTextMinSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ResizeTextMinSize {
      get { if ((_hasBits0 & 512) != 0) { return resizeTextMinSize_; } else { return ResizeTextMinSizeDefaultValue; } }
      set {
        _hasBits0 |= 512;
        resizeTextMinSize_ = value;
      }
    }
    /// <summary>Gets whether the "resize_text_min_size" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResizeTextMinSize {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "resize_text_min_size" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResizeTextMinSize() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "resize_text_max_size" field.</summary>
    public const int ResizeTextMaxSizeFieldNumber = 15;
    private readonly static int ResizeTextMaxSizeDefaultValue = 0;

    private int resizeTextMaxSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ResizeTextMaxSize {
      get { if ((_hasBits0 & 1024) != 0) { return resizeTextMaxSize_; } else { return ResizeTextMaxSizeDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        resizeTextMaxSize_ = value;
      }
    }
    /// <summary>Gets whether the "resize_text_max_size" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResizeTextMaxSize {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "resize_text_max_size" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResizeTextMaxSize() {
      _hasBits0 &= ~1024;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TextUpdate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TextUpdate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Component, other.Component)) return false;
      if (Text != other.Text) return false;
      if (!object.Equals(Font, other.Font)) return false;
      if (FontStyle != other.FontStyle) return false;
      if (FontSize != other.FontSize) return false;
      if (!object.Equals(Color, other.Color)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(LineSpacing, other.LineSpacing)) return false;
      if (SupportRichText != other.SupportRichText) return false;
      if (Alignment != other.Alignment) return false;
      if (AlignByGeometry != other.AlignByGeometry) return false;
      if (HorizontalOverflow != other.HorizontalOverflow) return false;
      if (VerticalOverflow != other.VerticalOverflow) return false;
      if (ResizeTextForBestFit != other.ResizeTextForBestFit) return false;
      if (ResizeTextMinSize != other.ResizeTextMinSize) return false;
      if (ResizeTextMaxSize != other.ResizeTextMaxSize) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (component_ != null) hash ^= Component.GetHashCode();
      if (HasText) hash ^= Text.GetHashCode();
      if (font_ != null) hash ^= Font.GetHashCode();
      if (HasFontStyle) hash ^= FontStyle.GetHashCode();
      if (HasFontSize) hash ^= FontSize.GetHashCode();
      if (color_ != null) hash ^= Color.GetHashCode();
      if (HasLineSpacing) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(LineSpacing);
      if (HasSupportRichText) hash ^= SupportRichText.GetHashCode();
      if (HasAlignment) hash ^= Alignment.GetHashCode();
      if (HasAlignByGeometry) hash ^= AlignByGeometry.GetHashCode();
      if (HasHorizontalOverflow) hash ^= HorizontalOverflow.GetHashCode();
      if (HasVerticalOverflow) hash ^= VerticalOverflow.GetHashCode();
      if (HasResizeTextForBestFit) hash ^= ResizeTextForBestFit.GetHashCode();
      if (HasResizeTextMinSize) hash ^= ResizeTextMinSize.GetHashCode();
      if (HasResizeTextMaxSize) hash ^= ResizeTextMaxSize.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (component_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Component);
      }
      if (HasText) {
        output.WriteRawTag(18);
        output.WriteString(Text);
      }
      if (font_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Font);
      }
      if (HasFontStyle) {
        output.WriteRawTag(32);
        output.WriteEnum((int) FontStyle);
      }
      if (HasFontSize) {
        output.WriteRawTag(40);
        output.WriteInt32(FontSize);
      }
      if (color_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Color);
      }
      if (HasLineSpacing) {
        output.WriteRawTag(61);
        output.WriteFloat(LineSpacing);
      }
      if (HasSupportRichText) {
        output.WriteRawTag(64);
        output.WriteBool(SupportRichText);
      }
      if (HasAlignment) {
        output.WriteRawTag(72);
        output.WriteEnum((int) Alignment);
      }
      if (HasAlignByGeometry) {
        output.WriteRawTag(80);
        output.WriteBool(AlignByGeometry);
      }
      if (HasHorizontalOverflow) {
        output.WriteRawTag(88);
        output.WriteEnum((int) HorizontalOverflow);
      }
      if (HasVerticalOverflow) {
        output.WriteRawTag(96);
        output.WriteEnum((int) VerticalOverflow);
      }
      if (HasResizeTextForBestFit) {
        output.WriteRawTag(104);
        output.WriteBool(ResizeTextForBestFit);
      }
      if (HasResizeTextMinSize) {
        output.WriteRawTag(112);
        output.WriteInt32(ResizeTextMinSize);
      }
      if (HasResizeTextMaxSize) {
        output.WriteRawTag(120);
        output.WriteInt32(ResizeTextMaxSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (component_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Component);
      }
      if (HasText) {
        output.WriteRawTag(18);
        output.WriteString(Text);
      }
      if (font_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Font);
      }
      if (HasFontStyle) {
        output.WriteRawTag(32);
        output.WriteEnum((int) FontStyle);
      }
      if (HasFontSize) {
        output.WriteRawTag(40);
        output.WriteInt32(FontSize);
      }
      if (color_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Color);
      }
      if (HasLineSpacing) {
        output.WriteRawTag(61);
        output.WriteFloat(LineSpacing);
      }
      if (HasSupportRichText) {
        output.WriteRawTag(64);
        output.WriteBool(SupportRichText);
      }
      if (HasAlignment) {
        output.WriteRawTag(72);
        output.WriteEnum((int) Alignment);
      }
      if (HasAlignByGeometry) {
        output.WriteRawTag(80);
        output.WriteBool(AlignByGeometry);
      }
      if (HasHorizontalOverflow) {
        output.WriteRawTag(88);
        output.WriteEnum((int) HorizontalOverflow);
      }
      if (HasVerticalOverflow) {
        output.WriteRawTag(96);
        output.WriteEnum((int) VerticalOverflow);
      }
      if (HasResizeTextForBestFit) {
        output.WriteRawTag(104);
        output.WriteBool(ResizeTextForBestFit);
      }
      if (HasResizeTextMinSize) {
        output.WriteRawTag(112);
        output.WriteInt32(ResizeTextMinSize);
      }
      if (HasResizeTextMaxSize) {
        output.WriteRawTag(120);
        output.WriteInt32(ResizeTextMaxSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (component_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Component);
      }
      if (HasText) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (font_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Font);
      }
      if (HasFontStyle) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FontStyle);
      }
      if (HasFontSize) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FontSize);
      }
      if (color_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Color);
      }
      if (HasLineSpacing) {
        size += 1 + 4;
      }
      if (HasSupportRichText) {
        size += 1 + 1;
      }
      if (HasAlignment) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Alignment);
      }
      if (HasAlignByGeometry) {
        size += 1 + 1;
      }
      if (HasHorizontalOverflow) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) HorizontalOverflow);
      }
      if (HasVerticalOverflow) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) VerticalOverflow);
      }
      if (HasResizeTextForBestFit) {
        size += 1 + 1;
      }
      if (HasResizeTextMinSize) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ResizeTextMinSize);
      }
      if (HasResizeTextMaxSize) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ResizeTextMaxSize);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TextUpdate other) {
      if (other == null) {
        return;
      }
      if (other.component_ != null) {
        if (component_ == null) {
          Component = new global::PLUME.Sample.Unity.ComponentIdentifier();
        }
        Component.MergeFrom(other.Component);
      }
      if (other.HasText) {
        Text = other.Text;
      }
      if (other.font_ != null) {
        if (font_ == null) {
          Font = new global::PLUME.Sample.Unity.AssetIdentifier();
        }
        Font.MergeFrom(other.Font);
      }
      if (other.HasFontStyle) {
        FontStyle = other.FontStyle;
      }
      if (other.HasFontSize) {
        FontSize = other.FontSize;
      }
      if (other.color_ != null) {
        if (color_ == null) {
          Color = new global::PLUME.Sample.Common.Color();
        }
        Color.MergeFrom(other.Color);
      }
      if (other.HasLineSpacing) {
        LineSpacing = other.LineSpacing;
      }
      if (other.HasSupportRichText) {
        SupportRichText = other.SupportRichText;
      }
      if (other.HasAlignment) {
        Alignment = other.Alignment;
      }
      if (other.HasAlignByGeometry) {
        AlignByGeometry = other.AlignByGeometry;
      }
      if (other.HasHorizontalOverflow) {
        HorizontalOverflow = other.HorizontalOverflow;
      }
      if (other.HasVerticalOverflow) {
        VerticalOverflow = other.VerticalOverflow;
      }
      if (other.HasResizeTextForBestFit) {
        ResizeTextForBestFit = other.ResizeTextForBestFit;
      }
      if (other.HasResizeTextMinSize) {
        ResizeTextMinSize = other.ResizeTextMinSize;
      }
      if (other.HasResizeTextMaxSize) {
        ResizeTextMaxSize = other.ResizeTextMaxSize;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (component_ == null) {
              Component = new global::PLUME.Sample.Unity.ComponentIdentifier();
            }
            input.ReadMessage(Component);
            break;
          }
          case 18: {
            Text = input.ReadString();
            break;
          }
          case 26: {
            if (font_ == null) {
              Font = new global::PLUME.Sample.Unity.AssetIdentifier();
            }
            input.ReadMessage(Font);
            break;
          }
          case 32: {
            FontStyle = (global::PLUME.Sample.Unity.UI.FontStyle) input.ReadEnum();
            break;
          }
          case 40: {
            FontSize = input.ReadInt32();
            break;
          }
          case 50: {
            if (color_ == null) {
              Color = new global::PLUME.Sample.Common.Color();
            }
            input.ReadMessage(Color);
            break;
          }
          case 61: {
            LineSpacing = input.ReadFloat();
            break;
          }
          case 64: {
            SupportRichText = input.ReadBool();
            break;
          }
          case 72: {
            Alignment = (global::PLUME.Sample.Unity.UI.TextAnchor) input.ReadEnum();
            break;
          }
          case 80: {
            AlignByGeometry = input.ReadBool();
            break;
          }
          case 88: {
            HorizontalOverflow = (global::PLUME.Sample.Unity.UI.HorizontalWrapMode) input.ReadEnum();
            break;
          }
          case 96: {
            VerticalOverflow = (global::PLUME.Sample.Unity.UI.VerticalWrapMode) input.ReadEnum();
            break;
          }
          case 104: {
            ResizeTextForBestFit = input.ReadBool();
            break;
          }
          case 112: {
            ResizeTextMinSize = input.ReadInt32();
            break;
          }
          case 120: {
            ResizeTextMaxSize = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (component_ == null) {
              Component = new global::PLUME.Sample.Unity.ComponentIdentifier();
            }
            input.ReadMessage(Component);
            break;
          }
          case 18: {
            Text = input.ReadString();
            break;
          }
          case 26: {
            if (font_ == null) {
              Font = new global::PLUME.Sample.Unity.AssetIdentifier();
            }
            input.ReadMessage(Font);
            break;
          }
          case 32: {
            FontStyle = (global::PLUME.Sample.Unity.UI.FontStyle) input.ReadEnum();
            break;
          }
          case 40: {
            FontSize = input.ReadInt32();
            break;
          }
          case 50: {
            if (color_ == null) {
              Color = new global::PLUME.Sample.Common.Color();
            }
            input.ReadMessage(Color);
            break;
          }
          case 61: {
            LineSpacing = input.ReadFloat();
            break;
          }
          case 64: {
            SupportRichText = input.ReadBool();
            break;
          }
          case 72: {
            Alignment = (global::PLUME.Sample.Unity.UI.TextAnchor) input.ReadEnum();
            break;
          }
          case 80: {
            AlignByGeometry = input.ReadBool();
            break;
          }
          case 88: {
            HorizontalOverflow = (global::PLUME.Sample.Unity.UI.HorizontalWrapMode) input.ReadEnum();
            break;
          }
          case 96: {
            VerticalOverflow = (global::PLUME.Sample.Unity.UI.VerticalWrapMode) input.ReadEnum();
            break;
          }
          case 104: {
            ResizeTextForBestFit = input.ReadBool();
            break;
          }
          case 112: {
            ResizeTextMinSize = input.ReadInt32();
            break;
          }
          case 120: {
            ResizeTextMaxSize = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
