// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: plume/sample/unity/light.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PLUME.Sample.Unity {

  /// <summary>Holder for reflection information generated from plume/sample/unity/light.proto</summary>
  public static partial class LightReflection {

    #region Descriptor
    /// <summary>File descriptor for plume/sample/unity/light.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LightReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5wbHVtZS9zYW1wbGUvdW5pdHkvbGlnaHQucHJvdG8SEnBsdW1lLnNhbXBs",
            "ZS51bml0eRokcGx1bWUvc2FtcGxlL3VuaXR5L2lkZW50aWZpZXJzLnByb3Rv",
            "GiNwbHVtZS9zYW1wbGUvY29tbW9uL21hdHJpeDR4NC5wcm90bxohcGx1bWUv",
            "c2FtcGxlL2NvbW1vbi92ZWN0b3I0LnByb3RvGh9wbHVtZS9zYW1wbGUvY29t",
            "bW9uL2NvbG9yLnByb3RvIlQKC0xpZ2h0Q3JlYXRlEkUKCWNvbXBvbmVudBgB",
            "IAEoCzInLnBsdW1lLnNhbXBsZS51bml0eS5Db21wb25lbnRJZGVudGlmaWVy",
            "Ugljb21wb25lbnQiVQoMTGlnaHREZXN0cm95EkUKCWNvbXBvbmVudBgBIAEo",
            "CzInLnBsdW1lLnNhbXBsZS51bml0eS5Db21wb25lbnRJZGVudGlmaWVyUglj",
            "b21wb25lbnQiwxMKC0xpZ2h0VXBkYXRlEkUKCWNvbXBvbmVudBgBIAEoCzIn",
            "LnBsdW1lLnNhbXBsZS51bml0eS5Db21wb25lbnRJZGVudGlmaWVyUgljb21w",
            "b25lbnQSHQoHZW5hYmxlZBgCIAEoCEgAUgdlbmFibGVkiAEBEjYKBHR5cGUY",
            "AyABKA4yHS5wbHVtZS5zYW1wbGUudW5pdHkuTGlnaHRUeXBlSAFSBHR5cGWI",
            "AQESOQoFc2hhcGUYBCABKA4yHi5wbHVtZS5zYW1wbGUudW5pdHkuTGlnaHRT",
            "aGFwZUgCUgVzaGFwZYgBARIhCglpbnRlbnNpdHkYBSABKAJIA1IJaW50ZW5z",
            "aXR5iAEBEi4KEGJvdW5jZV9pbnRlbnNpdHkYBiABKAJIBFIPYm91bmNlSW50",
            "ZW5zaXR5iAEBEhkKBXJhbmdlGAcgASgCSAVSBXJhbmdliAEBEjUKBWNvbG9y",
            "GAggASgLMhoucGx1bWUuc2FtcGxlLmNvbW1vbi5Db2xvckgGUgVjb2xvcogB",
            "ARIwChFjb2xvcl90ZW1wZXJhdHVyZRgJIAEoAkgHUhBjb2xvclRlbXBlcmF0",
            "dXJliAEBEjcKFXVzZV9jb2xvcl90ZW1wZXJhdHVyZRgKIAEoCEgIUhN1c2VD",
            "b2xvclRlbXBlcmF0dXJliAEBEiIKCnNwb3RfYW5nbGUYCyABKAJICVIJc3Bv",
            "dEFuZ2xliAEBEi0KEGlubmVyX3Nwb3RfYW5nbGUYDCABKAJIClIOaW5uZXJT",
            "cG90QW5nbGWIAQESPwoHc2hhZG93cxgNIAEoDjIgLnBsdW1lLnNhbXBsZS51",
            "bml0eS5MaWdodFNoYWRvd3NIC1IHc2hhZG93c4gBARIsCg9zaGFkb3dfc3Ry",
            "ZW5ndGgYDiABKAJIDFIOc2hhZG93U3RyZW5ndGiIAQESWwoRc2hhZG93X3Jl",
            "c29sdXRpb24YDyABKA4yKS5wbHVtZS5zYW1wbGUudW5pdHkuTGlnaHRTaGFk",
            "b3dSZXNvbHV0aW9uSA1SEHNoYWRvd1Jlc29sdXRpb26IAQESWQoWc2hhZG93",
            "X21hdHJpeF9vdmVycmlkZRgQIAEoCzIeLnBsdW1lLnNhbXBsZS5jb21tb24u",
            "TWF0cml4NHg0SA5SFHNoYWRvd01hdHJpeE92ZXJyaWRliAEBEkAKGnVzZV9z",
            "aGFkb3dfbWF0cml4X292ZXJyaWRlGBEgASgISA9SF3VzZVNoYWRvd01hdHJp",
            "eE92ZXJyaWRliAEBEiQKC3NoYWRvd19iaWFzGBIgASgCSBBSCnNoYWRvd0Jp",
            "YXOIAQESMQoSc2hhZG93X25vcm1hbF9iaWFzGBMgASgCSBFSEHNoYWRvd05v",
            "cm1hbEJpYXOIAQESLwoRc2hhZG93X25lYXJfcGxhbmUYFCABKAJIElIPc2hh",
            "ZG93TmVhclBsYW5liAEBElcKJ3VzZV92aWV3X2ZydXN0dW1fZm9yX3NoYWRv",
            "d19jYXN0ZXJfY3VsbBgVIAEoCEgTUiF1c2VWaWV3RnJ1c3R1bUZvclNoYWRv",
            "d0Nhc3RlckN1bGyIAQEScAobbGF5ZXJfc2hhZG93X2N1bGxfZGlzdGFuY2Vz",
            "GBYgASgLMiwucGx1bWUuc2FtcGxlLnVuaXR5LkxheWVyU2hhZG93Q3VsbERp",
            "c3RhbmNlc0gUUhhsYXllclNoYWRvd0N1bGxEaXN0YW5jZXOIAQESPQoYc2hh",
            "ZG93X2N1c3RvbV9yZXNvbHV0aW9uGBcgASgFSBVSFnNoYWRvd0N1c3RvbVJl",
            "c29sdXRpb26IAQESZwoYbGlnaHRfc2hhZG93X2Nhc3Rlcl9tb2RlGBggASgO",
            "MikucGx1bWUuc2FtcGxlLnVuaXR5LkxpZ2h0U2hhZG93Q2FzdGVyTW9kZUgW",
            "UhVsaWdodFNoYWRvd0Nhc3Rlck1vZGWIAQESNQoUcmVuZGVyaW5nX2xheWVy",
            "X21hc2sYGSABKAVIF1IScmVuZGVyaW5nTGF5ZXJNYXNriAEBEiYKDGN1bGxp",
            "bmdfbWFzaxgaIAEoBUgYUgtjdWxsaW5nTWFza4gBARJbChhib3VuZGluZ19z",
            "cGhlcmVfb3ZlcnJpZGUYGyABKAsyHC5wbHVtZS5zYW1wbGUuY29tbW9uLlZl",
            "Y3RvcjRIGVIWYm91bmRpbmdTcGhlcmVPdmVycmlkZYgBARJEChx1c2VfYm91",
            "bmRpbmdfc3BoZXJlX292ZXJyaWRlGBwgASgISBpSGXVzZUJvdW5kaW5nU3Bo",
            "ZXJlT3ZlcnJpZGWIAQESQAoGY29va2llGB0gASgLMiMucGx1bWUuc2FtcGxl",
            "LnVuaXR5LkFzc2V0SWRlbnRpZmllckgbUgZjb29raWWIAQESJAoLY29va2ll",
            "X3NpemUYHiABKAJIHFIKY29va2llU2l6ZYgBARI+CgVmbGFyZRgfIAEoCzIj",
            "LnBsdW1lLnNhbXBsZS51bml0eS5Bc3NldElkZW50aWZpZXJIHVIFZmxhcmWI",
            "AQFCCgoIX2VuYWJsZWRCBwoFX3R5cGVCCAoGX3NoYXBlQgwKCl9pbnRlbnNp",
            "dHlCEwoRX2JvdW5jZV9pbnRlbnNpdHlCCAoGX3JhbmdlQggKBl9jb2xvckIU",
            "ChJfY29sb3JfdGVtcGVyYXR1cmVCGAoWX3VzZV9jb2xvcl90ZW1wZXJhdHVy",
            "ZUINCgtfc3BvdF9hbmdsZUITChFfaW5uZXJfc3BvdF9hbmdsZUIKCghfc2hh",
            "ZG93c0ISChBfc2hhZG93X3N0cmVuZ3RoQhQKEl9zaGFkb3dfcmVzb2x1dGlv",
            "bkIZChdfc2hhZG93X21hdHJpeF9vdmVycmlkZUIdChtfdXNlX3NoYWRvd19t",
            "YXRyaXhfb3ZlcnJpZGVCDgoMX3NoYWRvd19iaWFzQhUKE19zaGFkb3dfbm9y",
            "bWFsX2JpYXNCFAoSX3NoYWRvd19uZWFyX3BsYW5lQioKKF91c2Vfdmlld19m",
            "cnVzdHVtX2Zvcl9zaGFkb3dfY2FzdGVyX2N1bGxCHgocX2xheWVyX3NoYWRv",
            "d19jdWxsX2Rpc3RhbmNlc0IbChlfc2hhZG93X2N1c3RvbV9yZXNvbHV0aW9u",
            "QhsKGV9saWdodF9zaGFkb3dfY2FzdGVyX21vZGVCFwoVX3JlbmRlcmluZ19s",
            "YXllcl9tYXNrQg8KDV9jdWxsaW5nX21hc2tCGwoZX2JvdW5kaW5nX3NwaGVy",
            "ZV9vdmVycmlkZUIfCh1fdXNlX2JvdW5kaW5nX3NwaGVyZV9vdmVycmlkZUIJ",
            "CgdfY29va2llQg4KDF9jb29raWVfc2l6ZUIICgZfZmxhcmUiOAoYTGF5ZXJT",
            "aGFkb3dDdWxsRGlzdGFuY2VzEhwKCWRpc3RhbmNlcxgBIAMoAlIJZGlzdGFu",
            "Y2VzKpYBCglMaWdodFR5cGUSEwoPTElHSFRfVFlQRV9TUE9UEAASGgoWTElH",
            "SFRfVFlQRV9ESVJFQ1RJT05BTBABEhQKEExJR0hUX1RZUEVfUE9JTlQQAhIT",
            "Cg9MSUdIVF9UWVBFX0FSRUEQAxIYChRMSUdIVF9UWVBFX1JFQ1RBTkdMRRAE",
            "EhMKD0xJR0hUX1RZUEVfRElTQxAFKlAKCkxpZ2h0U2hhcGUSFAoQTElHSFRf",
            "U0hBUEVfQ09ORRAAEhcKE0xJR0hUX1NIQVBFX1BZUkFNSUQQARITCg9MSUdI",
            "VF9TSEFQRV9CT1gQAiqZAQoVTGlnaHRTaGFkb3dDYXN0ZXJNb2RlEiQKIExJ",
            "R0hUX1NIQURPV19DQVNURVJfTU9ERV9ERUZBVUxUEAASMQotTElHSFRfU0hB",
            "RE9XX0NBU1RFUl9NT0RFX05PTl9MSUdIVE1BUFBFRF9PTkxZEAESJwojTElH",
            "SFRfU0hBRE9XX0NBU1RFUl9NT0RFX0VWRVJZVEhJTkcQAirYAQoVTGlnaHRT",
            "aGFkb3dSZXNvbHV0aW9uEjEKLUxJR0hUX1NIQURPV19SRVNPTFVUSU9OX0ZS",
            "T01fUVVBTElUWV9TRVRUSU5HUxAAEh8KG0xJR0hUX1NIQURPV19SRVNPTFVU",
            "SU9OX0xPVxABEiIKHkxJR0hUX1NIQURPV19SRVNPTFVUSU9OX01FRElVTRAC",
            "EiAKHExJR0hUX1NIQURPV19SRVNPTFVUSU9OX0hJR0gQAxIlCiFMSUdIVF9T",
            "SEFET1dfUkVTT0xVVElPTl9WRVJZX0hJR0gQBCpWCgxMaWdodFNoYWRvd3MS",
            "FgoSTElHSFRfU0hBRE9XU19OT05FEAASFgoSTElHSFRfU0hBRE9XU19IQVJE",
            "EAESFgoSTElHSFRfU0hBRE9XU19TT0ZUEAJCFaoCElBMVU1FLlNhbXBsZS5V",
            "bml0eWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::PLUME.Sample.Unity.IdentifiersReflection.Descriptor, global::PLUME.Sample.Common.Matrix4X4Reflection.Descriptor, global::PLUME.Sample.Common.Vector4Reflection.Descriptor, global::PLUME.Sample.Common.ColorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::PLUME.Sample.Unity.LightType), typeof(global::PLUME.Sample.Unity.LightShape), typeof(global::PLUME.Sample.Unity.LightShadowCasterMode), typeof(global::PLUME.Sample.Unity.LightShadowResolution), typeof(global::PLUME.Sample.Unity.LightShadows), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PLUME.Sample.Unity.LightCreate), global::PLUME.Sample.Unity.LightCreate.Parser, new[]{ "Component" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PLUME.Sample.Unity.LightDestroy), global::PLUME.Sample.Unity.LightDestroy.Parser, new[]{ "Component" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PLUME.Sample.Unity.LightUpdate), global::PLUME.Sample.Unity.LightUpdate.Parser, new[]{ "Component", "Enabled", "Type", "Shape", "Intensity", "BounceIntensity", "Range", "Color", "ColorTemperature", "UseColorTemperature", "SpotAngle", "InnerSpotAngle", "Shadows", "ShadowStrength", "ShadowResolution", "ShadowMatrixOverride", "UseShadowMatrixOverride", "ShadowBias", "ShadowNormalBias", "ShadowNearPlane", "UseViewFrustumForShadowCasterCull", "LayerShadowCullDistances", "ShadowCustomResolution", "LightShadowCasterMode", "RenderingLayerMask", "CullingMask", "BoundingSphereOverride", "UseBoundingSphereOverride", "Cookie", "CookieSize", "Flare" }, new[]{ "Enabled", "Type", "Shape", "Intensity", "BounceIntensity", "Range", "Color", "ColorTemperature", "UseColorTemperature", "SpotAngle", "InnerSpotAngle", "Shadows", "ShadowStrength", "ShadowResolution", "ShadowMatrixOverride", "UseShadowMatrixOverride", "ShadowBias", "ShadowNormalBias", "ShadowNearPlane", "UseViewFrustumForShadowCasterCull", "LayerShadowCullDistances", "ShadowCustomResolution", "LightShadowCasterMode", "RenderingLayerMask", "CullingMask", "BoundingSphereOverride", "UseBoundingSphereOverride", "Cookie", "CookieSize", "Flare" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PLUME.Sample.Unity.LayerShadowCullDistances), global::PLUME.Sample.Unity.LayerShadowCullDistances.Parser, new[]{ "Distances" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum LightType {
    [pbr::OriginalName("LIGHT_TYPE_SPOT")] Spot = 0,
    [pbr::OriginalName("LIGHT_TYPE_DIRECTIONAL")] Directional = 1,
    [pbr::OriginalName("LIGHT_TYPE_POINT")] Point = 2,
    [pbr::OriginalName("LIGHT_TYPE_AREA")] Area = 3,
    [pbr::OriginalName("LIGHT_TYPE_RECTANGLE")] Rectangle = 4,
    [pbr::OriginalName("LIGHT_TYPE_DISC")] Disc = 5,
  }

  public enum LightShape {
    [pbr::OriginalName("LIGHT_SHAPE_CONE")] Cone = 0,
    [pbr::OriginalName("LIGHT_SHAPE_PYRAMID")] Pyramid = 1,
    [pbr::OriginalName("LIGHT_SHAPE_BOX")] Box = 2,
  }

  public enum LightShadowCasterMode {
    [pbr::OriginalName("LIGHT_SHADOW_CASTER_MODE_DEFAULT")] Default = 0,
    [pbr::OriginalName("LIGHT_SHADOW_CASTER_MODE_NON_LIGHTMAPPED_ONLY")] NonLightmappedOnly = 1,
    [pbr::OriginalName("LIGHT_SHADOW_CASTER_MODE_EVERYTHING")] Everything = 2,
  }

  public enum LightShadowResolution {
    [pbr::OriginalName("LIGHT_SHADOW_RESOLUTION_FROM_QUALITY_SETTINGS")] FromQualitySettings = 0,
    [pbr::OriginalName("LIGHT_SHADOW_RESOLUTION_LOW")] Low = 1,
    [pbr::OriginalName("LIGHT_SHADOW_RESOLUTION_MEDIUM")] Medium = 2,
    [pbr::OriginalName("LIGHT_SHADOW_RESOLUTION_HIGH")] High = 3,
    [pbr::OriginalName("LIGHT_SHADOW_RESOLUTION_VERY_HIGH")] VeryHigh = 4,
  }

  public enum LightShadows {
    [pbr::OriginalName("LIGHT_SHADOWS_NONE")] None = 0,
    [pbr::OriginalName("LIGHT_SHADOWS_HARD")] Hard = 1,
    [pbr::OriginalName("LIGHT_SHADOWS_SOFT")] Soft = 2,
  }

  #endregion

  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LightCreate : pb::IMessage<LightCreate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LightCreate> _parser = new pb::MessageParser<LightCreate>(() => new LightCreate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LightCreate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PLUME.Sample.Unity.LightReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LightCreate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LightCreate(LightCreate other) : this() {
      component_ = other.component_ != null ? other.component_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LightCreate Clone() {
      return new LightCreate(this);
    }

    /// <summary>Field number for the "component" field.</summary>
    public const int ComponentFieldNumber = 1;
    private global::PLUME.Sample.Unity.ComponentIdentifier component_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.ComponentIdentifier Component {
      get { return component_; }
      set {
        component_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LightCreate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LightCreate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Component, other.Component)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (component_ != null) hash ^= Component.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (component_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Component);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (component_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Component);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (component_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Component);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LightCreate other) {
      if (other == null) {
        return;
      }
      if (other.component_ != null) {
        if (component_ == null) {
          Component = new global::PLUME.Sample.Unity.ComponentIdentifier();
        }
        Component.MergeFrom(other.Component);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (component_ == null) {
              Component = new global::PLUME.Sample.Unity.ComponentIdentifier();
            }
            input.ReadMessage(Component);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (component_ == null) {
              Component = new global::PLUME.Sample.Unity.ComponentIdentifier();
            }
            input.ReadMessage(Component);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LightDestroy : pb::IMessage<LightDestroy>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LightDestroy> _parser = new pb::MessageParser<LightDestroy>(() => new LightDestroy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LightDestroy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PLUME.Sample.Unity.LightReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LightDestroy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LightDestroy(LightDestroy other) : this() {
      component_ = other.component_ != null ? other.component_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LightDestroy Clone() {
      return new LightDestroy(this);
    }

    /// <summary>Field number for the "component" field.</summary>
    public const int ComponentFieldNumber = 1;
    private global::PLUME.Sample.Unity.ComponentIdentifier component_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.ComponentIdentifier Component {
      get { return component_; }
      set {
        component_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LightDestroy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LightDestroy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Component, other.Component)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (component_ != null) hash ^= Component.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (component_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Component);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (component_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Component);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (component_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Component);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LightDestroy other) {
      if (other == null) {
        return;
      }
      if (other.component_ != null) {
        if (component_ == null) {
          Component = new global::PLUME.Sample.Unity.ComponentIdentifier();
        }
        Component.MergeFrom(other.Component);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (component_ == null) {
              Component = new global::PLUME.Sample.Unity.ComponentIdentifier();
            }
            input.ReadMessage(Component);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (component_ == null) {
              Component = new global::PLUME.Sample.Unity.ComponentIdentifier();
            }
            input.ReadMessage(Component);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LightUpdate : pb::IMessage<LightUpdate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LightUpdate> _parser = new pb::MessageParser<LightUpdate>(() => new LightUpdate());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LightUpdate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PLUME.Sample.Unity.LightReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LightUpdate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LightUpdate(LightUpdate other) : this() {
      _hasBits0 = other._hasBits0;
      component_ = other.component_ != null ? other.component_.Clone() : null;
      enabled_ = other.enabled_;
      type_ = other.type_;
      shape_ = other.shape_;
      intensity_ = other.intensity_;
      bounceIntensity_ = other.bounceIntensity_;
      range_ = other.range_;
      color_ = other.color_ != null ? other.color_.Clone() : null;
      colorTemperature_ = other.colorTemperature_;
      useColorTemperature_ = other.useColorTemperature_;
      spotAngle_ = other.spotAngle_;
      innerSpotAngle_ = other.innerSpotAngle_;
      shadows_ = other.shadows_;
      shadowStrength_ = other.shadowStrength_;
      shadowResolution_ = other.shadowResolution_;
      shadowMatrixOverride_ = other.shadowMatrixOverride_ != null ? other.shadowMatrixOverride_.Clone() : null;
      useShadowMatrixOverride_ = other.useShadowMatrixOverride_;
      shadowBias_ = other.shadowBias_;
      shadowNormalBias_ = other.shadowNormalBias_;
      shadowNearPlane_ = other.shadowNearPlane_;
      useViewFrustumForShadowCasterCull_ = other.useViewFrustumForShadowCasterCull_;
      layerShadowCullDistances_ = other.layerShadowCullDistances_ != null ? other.layerShadowCullDistances_.Clone() : null;
      shadowCustomResolution_ = other.shadowCustomResolution_;
      lightShadowCasterMode_ = other.lightShadowCasterMode_;
      renderingLayerMask_ = other.renderingLayerMask_;
      cullingMask_ = other.cullingMask_;
      boundingSphereOverride_ = other.boundingSphereOverride_ != null ? other.boundingSphereOverride_.Clone() : null;
      useBoundingSphereOverride_ = other.useBoundingSphereOverride_;
      cookie_ = other.cookie_ != null ? other.cookie_.Clone() : null;
      cookieSize_ = other.cookieSize_;
      flare_ = other.flare_ != null ? other.flare_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LightUpdate Clone() {
      return new LightUpdate(this);
    }

    /// <summary>Field number for the "component" field.</summary>
    public const int ComponentFieldNumber = 1;
    private global::PLUME.Sample.Unity.ComponentIdentifier component_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.ComponentIdentifier Component {
      get { return component_; }
      set {
        component_ = value;
      }
    }

    /// <summary>Field number for the "enabled" field.</summary>
    public const int EnabledFieldNumber = 2;
    private readonly static bool EnabledDefaultValue = false;

    private bool enabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Enabled {
      get { if ((_hasBits0 & 1) != 0) { return enabled_; } else { return EnabledDefaultValue; } }
      set {
        _hasBits0 |= 1;
        enabled_ = value;
      }
    }
    /// <summary>Gets whether the "enabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnabled {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "enabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnabled() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private readonly static global::PLUME.Sample.Unity.LightType TypeDefaultValue = global::PLUME.Sample.Unity.LightType.Spot;

    private global::PLUME.Sample.Unity.LightType type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.LightType Type {
      get { if ((_hasBits0 & 2) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "shape" field.</summary>
    public const int ShapeFieldNumber = 4;
    private readonly static global::PLUME.Sample.Unity.LightShape ShapeDefaultValue = global::PLUME.Sample.Unity.LightShape.Cone;

    private global::PLUME.Sample.Unity.LightShape shape_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.LightShape Shape {
      get { if ((_hasBits0 & 4) != 0) { return shape_; } else { return ShapeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        shape_ = value;
      }
    }
    /// <summary>Gets whether the "shape" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShape {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "shape" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShape() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "intensity" field.</summary>
    public const int IntensityFieldNumber = 5;
    private readonly static float IntensityDefaultValue = 0F;

    private float intensity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Intensity {
      get { if ((_hasBits0 & 8) != 0) { return intensity_; } else { return IntensityDefaultValue; } }
      set {
        _hasBits0 |= 8;
        intensity_ = value;
      }
    }
    /// <summary>Gets whether the "intensity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIntensity {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "intensity" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIntensity() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "bounce_intensity" field.</summary>
    public const int BounceIntensityFieldNumber = 6;
    private readonly static float BounceIntensityDefaultValue = 0F;

    private float bounceIntensity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float BounceIntensity {
      get { if ((_hasBits0 & 16) != 0) { return bounceIntensity_; } else { return BounceIntensityDefaultValue; } }
      set {
        _hasBits0 |= 16;
        bounceIntensity_ = value;
      }
    }
    /// <summary>Gets whether the "bounce_intensity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBounceIntensity {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "bounce_intensity" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBounceIntensity() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "range" field.</summary>
    public const int RangeFieldNumber = 7;
    private readonly static float RangeDefaultValue = 0F;

    private float range_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Range {
      get { if ((_hasBits0 & 32) != 0) { return range_; } else { return RangeDefaultValue; } }
      set {
        _hasBits0 |= 32;
        range_ = value;
      }
    }
    /// <summary>Gets whether the "range" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRange {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "range" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRange() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "color" field.</summary>
    public const int ColorFieldNumber = 8;
    private global::PLUME.Sample.Common.Color color_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Common.Color Color {
      get { return color_; }
      set {
        color_ = value;
      }
    }

    /// <summary>Field number for the "color_temperature" field.</summary>
    public const int ColorTemperatureFieldNumber = 9;
    private readonly static float ColorTemperatureDefaultValue = 0F;

    private float colorTemperature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ColorTemperature {
      get { if ((_hasBits0 & 64) != 0) { return colorTemperature_; } else { return ColorTemperatureDefaultValue; } }
      set {
        _hasBits0 |= 64;
        colorTemperature_ = value;
      }
    }
    /// <summary>Gets whether the "color_temperature" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasColorTemperature {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "color_temperature" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearColorTemperature() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "use_color_temperature" field.</summary>
    public const int UseColorTemperatureFieldNumber = 10;
    private readonly static bool UseColorTemperatureDefaultValue = false;

    private bool useColorTemperature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool UseColorTemperature {
      get { if ((_hasBits0 & 128) != 0) { return useColorTemperature_; } else { return UseColorTemperatureDefaultValue; } }
      set {
        _hasBits0 |= 128;
        useColorTemperature_ = value;
      }
    }
    /// <summary>Gets whether the "use_color_temperature" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUseColorTemperature {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "use_color_temperature" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUseColorTemperature() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "spot_angle" field.</summary>
    public const int SpotAngleFieldNumber = 11;
    private readonly static float SpotAngleDefaultValue = 0F;

    private float spotAngle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SpotAngle {
      get { if ((_hasBits0 & 256) != 0) { return spotAngle_; } else { return SpotAngleDefaultValue; } }
      set {
        _hasBits0 |= 256;
        spotAngle_ = value;
      }
    }
    /// <summary>Gets whether the "spot_angle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSpotAngle {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "spot_angle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSpotAngle() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "inner_spot_angle" field.</summary>
    public const int InnerSpotAngleFieldNumber = 12;
    private readonly static float InnerSpotAngleDefaultValue = 0F;

    private float innerSpotAngle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float InnerSpotAngle {
      get { if ((_hasBits0 & 512) != 0) { return innerSpotAngle_; } else { return InnerSpotAngleDefaultValue; } }
      set {
        _hasBits0 |= 512;
        innerSpotAngle_ = value;
      }
    }
    /// <summary>Gets whether the "inner_spot_angle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInnerSpotAngle {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "inner_spot_angle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInnerSpotAngle() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "shadows" field.</summary>
    public const int ShadowsFieldNumber = 13;
    private readonly static global::PLUME.Sample.Unity.LightShadows ShadowsDefaultValue = global::PLUME.Sample.Unity.LightShadows.None;

    private global::PLUME.Sample.Unity.LightShadows shadows_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.LightShadows Shadows {
      get { if ((_hasBits0 & 1024) != 0) { return shadows_; } else { return ShadowsDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        shadows_ = value;
      }
    }
    /// <summary>Gets whether the "shadows" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShadows {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "shadows" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShadows() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "shadow_strength" field.</summary>
    public const int ShadowStrengthFieldNumber = 14;
    private readonly static float ShadowStrengthDefaultValue = 0F;

    private float shadowStrength_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ShadowStrength {
      get { if ((_hasBits0 & 2048) != 0) { return shadowStrength_; } else { return ShadowStrengthDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        shadowStrength_ = value;
      }
    }
    /// <summary>Gets whether the "shadow_strength" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShadowStrength {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "shadow_strength" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShadowStrength() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "shadow_resolution" field.</summary>
    public const int ShadowResolutionFieldNumber = 15;
    private readonly static global::PLUME.Sample.Unity.LightShadowResolution ShadowResolutionDefaultValue = global::PLUME.Sample.Unity.LightShadowResolution.FromQualitySettings;

    private global::PLUME.Sample.Unity.LightShadowResolution shadowResolution_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.LightShadowResolution ShadowResolution {
      get { if ((_hasBits0 & 4096) != 0) { return shadowResolution_; } else { return ShadowResolutionDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        shadowResolution_ = value;
      }
    }
    /// <summary>Gets whether the "shadow_resolution" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShadowResolution {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "shadow_resolution" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShadowResolution() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "shadow_matrix_override" field.</summary>
    public const int ShadowMatrixOverrideFieldNumber = 16;
    private global::PLUME.Sample.Common.Matrix4x4 shadowMatrixOverride_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Common.Matrix4x4 ShadowMatrixOverride {
      get { return shadowMatrixOverride_; }
      set {
        shadowMatrixOverride_ = value;
      }
    }

    /// <summary>Field number for the "use_shadow_matrix_override" field.</summary>
    public const int UseShadowMatrixOverrideFieldNumber = 17;
    private readonly static bool UseShadowMatrixOverrideDefaultValue = false;

    private bool useShadowMatrixOverride_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool UseShadowMatrixOverride {
      get { if ((_hasBits0 & 8192) != 0) { return useShadowMatrixOverride_; } else { return UseShadowMatrixOverrideDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        useShadowMatrixOverride_ = value;
      }
    }
    /// <summary>Gets whether the "use_shadow_matrix_override" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUseShadowMatrixOverride {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "use_shadow_matrix_override" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUseShadowMatrixOverride() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "shadow_bias" field.</summary>
    public const int ShadowBiasFieldNumber = 18;
    private readonly static float ShadowBiasDefaultValue = 0F;

    private float shadowBias_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ShadowBias {
      get { if ((_hasBits0 & 16384) != 0) { return shadowBias_; } else { return ShadowBiasDefaultValue; } }
      set {
        _hasBits0 |= 16384;
        shadowBias_ = value;
      }
    }
    /// <summary>Gets whether the "shadow_bias" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShadowBias {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "shadow_bias" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShadowBias() {
      _hasBits0 &= ~16384;
    }

    /// <summary>Field number for the "shadow_normal_bias" field.</summary>
    public const int ShadowNormalBiasFieldNumber = 19;
    private readonly static float ShadowNormalBiasDefaultValue = 0F;

    private float shadowNormalBias_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ShadowNormalBias {
      get { if ((_hasBits0 & 32768) != 0) { return shadowNormalBias_; } else { return ShadowNormalBiasDefaultValue; } }
      set {
        _hasBits0 |= 32768;
        shadowNormalBias_ = value;
      }
    }
    /// <summary>Gets whether the "shadow_normal_bias" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShadowNormalBias {
      get { return (_hasBits0 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "shadow_normal_bias" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShadowNormalBias() {
      _hasBits0 &= ~32768;
    }

    /// <summary>Field number for the "shadow_near_plane" field.</summary>
    public const int ShadowNearPlaneFieldNumber = 20;
    private readonly static float ShadowNearPlaneDefaultValue = 0F;

    private float shadowNearPlane_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ShadowNearPlane {
      get { if ((_hasBits0 & 65536) != 0) { return shadowNearPlane_; } else { return ShadowNearPlaneDefaultValue; } }
      set {
        _hasBits0 |= 65536;
        shadowNearPlane_ = value;
      }
    }
    /// <summary>Gets whether the "shadow_near_plane" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShadowNearPlane {
      get { return (_hasBits0 & 65536) != 0; }
    }
    /// <summary>Clears the value of the "shadow_near_plane" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShadowNearPlane() {
      _hasBits0 &= ~65536;
    }

    /// <summary>Field number for the "use_view_frustum_for_shadow_caster_cull" field.</summary>
    public const int UseViewFrustumForShadowCasterCullFieldNumber = 21;
    private readonly static bool UseViewFrustumForShadowCasterCullDefaultValue = false;

    private bool useViewFrustumForShadowCasterCull_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool UseViewFrustumForShadowCasterCull {
      get { if ((_hasBits0 & 131072) != 0) { return useViewFrustumForShadowCasterCull_; } else { return UseViewFrustumForShadowCasterCullDefaultValue; } }
      set {
        _hasBits0 |= 131072;
        useViewFrustumForShadowCasterCull_ = value;
      }
    }
    /// <summary>Gets whether the "use_view_frustum_for_shadow_caster_cull" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUseViewFrustumForShadowCasterCull {
      get { return (_hasBits0 & 131072) != 0; }
    }
    /// <summary>Clears the value of the "use_view_frustum_for_shadow_caster_cull" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUseViewFrustumForShadowCasterCull() {
      _hasBits0 &= ~131072;
    }

    /// <summary>Field number for the "layer_shadow_cull_distances" field.</summary>
    public const int LayerShadowCullDistancesFieldNumber = 22;
    private global::PLUME.Sample.Unity.LayerShadowCullDistances layerShadowCullDistances_;
    /// <summary>
    /// Only for directional lights
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.LayerShadowCullDistances LayerShadowCullDistances {
      get { return layerShadowCullDistances_; }
      set {
        layerShadowCullDistances_ = value;
      }
    }

    /// <summary>Field number for the "shadow_custom_resolution" field.</summary>
    public const int ShadowCustomResolutionFieldNumber = 23;
    private readonly static int ShadowCustomResolutionDefaultValue = 0;

    private int shadowCustomResolution_;
    /// <summary>
    /// Only for Built-in RP
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ShadowCustomResolution {
      get { if ((_hasBits0 & 262144) != 0) { return shadowCustomResolution_; } else { return ShadowCustomResolutionDefaultValue; } }
      set {
        _hasBits0 |= 262144;
        shadowCustomResolution_ = value;
      }
    }
    /// <summary>Gets whether the "shadow_custom_resolution" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShadowCustomResolution {
      get { return (_hasBits0 & 262144) != 0; }
    }
    /// <summary>Clears the value of the "shadow_custom_resolution" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShadowCustomResolution() {
      _hasBits0 &= ~262144;
    }

    /// <summary>Field number for the "light_shadow_caster_mode" field.</summary>
    public const int LightShadowCasterModeFieldNumber = 24;
    private readonly static global::PLUME.Sample.Unity.LightShadowCasterMode LightShadowCasterModeDefaultValue = global::PLUME.Sample.Unity.LightShadowCasterMode.Default;

    private global::PLUME.Sample.Unity.LightShadowCasterMode lightShadowCasterMode_;
    /// <summary>
    /// Not supported on legacy renderers
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.LightShadowCasterMode LightShadowCasterMode {
      get { if ((_hasBits0 & 524288) != 0) { return lightShadowCasterMode_; } else { return LightShadowCasterModeDefaultValue; } }
      set {
        _hasBits0 |= 524288;
        lightShadowCasterMode_ = value;
      }
    }
    /// <summary>Gets whether the "light_shadow_caster_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLightShadowCasterMode {
      get { return (_hasBits0 & 524288) != 0; }
    }
    /// <summary>Clears the value of the "light_shadow_caster_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLightShadowCasterMode() {
      _hasBits0 &= ~524288;
    }

    /// <summary>Field number for the "rendering_layer_mask" field.</summary>
    public const int RenderingLayerMaskFieldNumber = 25;
    private readonly static int RenderingLayerMaskDefaultValue = 0;

    private int renderingLayerMask_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RenderingLayerMask {
      get { if ((_hasBits0 & 1048576) != 0) { return renderingLayerMask_; } else { return RenderingLayerMaskDefaultValue; } }
      set {
        _hasBits0 |= 1048576;
        renderingLayerMask_ = value;
      }
    }
    /// <summary>Gets whether the "rendering_layer_mask" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRenderingLayerMask {
      get { return (_hasBits0 & 1048576) != 0; }
    }
    /// <summary>Clears the value of the "rendering_layer_mask" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRenderingLayerMask() {
      _hasBits0 &= ~1048576;
    }

    /// <summary>Field number for the "culling_mask" field.</summary>
    public const int CullingMaskFieldNumber = 26;
    private readonly static int CullingMaskDefaultValue = 0;

    private int cullingMask_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CullingMask {
      get { if ((_hasBits0 & 2097152) != 0) { return cullingMask_; } else { return CullingMaskDefaultValue; } }
      set {
        _hasBits0 |= 2097152;
        cullingMask_ = value;
      }
    }
    /// <summary>Gets whether the "culling_mask" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCullingMask {
      get { return (_hasBits0 & 2097152) != 0; }
    }
    /// <summary>Clears the value of the "culling_mask" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCullingMask() {
      _hasBits0 &= ~2097152;
    }

    /// <summary>Field number for the "bounding_sphere_override" field.</summary>
    public const int BoundingSphereOverrideFieldNumber = 27;
    private global::PLUME.Sample.Common.Vector4 boundingSphereOverride_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Common.Vector4 BoundingSphereOverride {
      get { return boundingSphereOverride_; }
      set {
        boundingSphereOverride_ = value;
      }
    }

    /// <summary>Field number for the "use_bounding_sphere_override" field.</summary>
    public const int UseBoundingSphereOverrideFieldNumber = 28;
    private readonly static bool UseBoundingSphereOverrideDefaultValue = false;

    private bool useBoundingSphereOverride_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool UseBoundingSphereOverride {
      get { if ((_hasBits0 & 4194304) != 0) { return useBoundingSphereOverride_; } else { return UseBoundingSphereOverrideDefaultValue; } }
      set {
        _hasBits0 |= 4194304;
        useBoundingSphereOverride_ = value;
      }
    }
    /// <summary>Gets whether the "use_bounding_sphere_override" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUseBoundingSphereOverride {
      get { return (_hasBits0 & 4194304) != 0; }
    }
    /// <summary>Clears the value of the "use_bounding_sphere_override" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUseBoundingSphereOverride() {
      _hasBits0 &= ~4194304;
    }

    /// <summary>Field number for the "cookie" field.</summary>
    public const int CookieFieldNumber = 29;
    private global::PLUME.Sample.Unity.AssetIdentifier cookie_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.AssetIdentifier Cookie {
      get { return cookie_; }
      set {
        cookie_ = value;
      }
    }

    /// <summary>Field number for the "cookie_size" field.</summary>
    public const int CookieSizeFieldNumber = 30;
    private readonly static float CookieSizeDefaultValue = 0F;

    private float cookieSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float CookieSize {
      get { if ((_hasBits0 & 8388608) != 0) { return cookieSize_; } else { return CookieSizeDefaultValue; } }
      set {
        _hasBits0 |= 8388608;
        cookieSize_ = value;
      }
    }
    /// <summary>Gets whether the "cookie_size" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCookieSize {
      get { return (_hasBits0 & 8388608) != 0; }
    }
    /// <summary>Clears the value of the "cookie_size" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCookieSize() {
      _hasBits0 &= ~8388608;
    }

    /// <summary>Field number for the "flare" field.</summary>
    public const int FlareFieldNumber = 31;
    private global::PLUME.Sample.Unity.AssetIdentifier flare_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.AssetIdentifier Flare {
      get { return flare_; }
      set {
        flare_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LightUpdate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LightUpdate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Component, other.Component)) return false;
      if (Enabled != other.Enabled) return false;
      if (Type != other.Type) return false;
      if (Shape != other.Shape) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Intensity, other.Intensity)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BounceIntensity, other.BounceIntensity)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Range, other.Range)) return false;
      if (!object.Equals(Color, other.Color)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ColorTemperature, other.ColorTemperature)) return false;
      if (UseColorTemperature != other.UseColorTemperature) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SpotAngle, other.SpotAngle)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(InnerSpotAngle, other.InnerSpotAngle)) return false;
      if (Shadows != other.Shadows) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ShadowStrength, other.ShadowStrength)) return false;
      if (ShadowResolution != other.ShadowResolution) return false;
      if (!object.Equals(ShadowMatrixOverride, other.ShadowMatrixOverride)) return false;
      if (UseShadowMatrixOverride != other.UseShadowMatrixOverride) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ShadowBias, other.ShadowBias)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ShadowNormalBias, other.ShadowNormalBias)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ShadowNearPlane, other.ShadowNearPlane)) return false;
      if (UseViewFrustumForShadowCasterCull != other.UseViewFrustumForShadowCasterCull) return false;
      if (!object.Equals(LayerShadowCullDistances, other.LayerShadowCullDistances)) return false;
      if (ShadowCustomResolution != other.ShadowCustomResolution) return false;
      if (LightShadowCasterMode != other.LightShadowCasterMode) return false;
      if (RenderingLayerMask != other.RenderingLayerMask) return false;
      if (CullingMask != other.CullingMask) return false;
      if (!object.Equals(BoundingSphereOverride, other.BoundingSphereOverride)) return false;
      if (UseBoundingSphereOverride != other.UseBoundingSphereOverride) return false;
      if (!object.Equals(Cookie, other.Cookie)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CookieSize, other.CookieSize)) return false;
      if (!object.Equals(Flare, other.Flare)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (component_ != null) hash ^= Component.GetHashCode();
      if (HasEnabled) hash ^= Enabled.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (HasShape) hash ^= Shape.GetHashCode();
      if (HasIntensity) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Intensity);
      if (HasBounceIntensity) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BounceIntensity);
      if (HasRange) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Range);
      if (color_ != null) hash ^= Color.GetHashCode();
      if (HasColorTemperature) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ColorTemperature);
      if (HasUseColorTemperature) hash ^= UseColorTemperature.GetHashCode();
      if (HasSpotAngle) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SpotAngle);
      if (HasInnerSpotAngle) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(InnerSpotAngle);
      if (HasShadows) hash ^= Shadows.GetHashCode();
      if (HasShadowStrength) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ShadowStrength);
      if (HasShadowResolution) hash ^= ShadowResolution.GetHashCode();
      if (shadowMatrixOverride_ != null) hash ^= ShadowMatrixOverride.GetHashCode();
      if (HasUseShadowMatrixOverride) hash ^= UseShadowMatrixOverride.GetHashCode();
      if (HasShadowBias) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ShadowBias);
      if (HasShadowNormalBias) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ShadowNormalBias);
      if (HasShadowNearPlane) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ShadowNearPlane);
      if (HasUseViewFrustumForShadowCasterCull) hash ^= UseViewFrustumForShadowCasterCull.GetHashCode();
      if (layerShadowCullDistances_ != null) hash ^= LayerShadowCullDistances.GetHashCode();
      if (HasShadowCustomResolution) hash ^= ShadowCustomResolution.GetHashCode();
      if (HasLightShadowCasterMode) hash ^= LightShadowCasterMode.GetHashCode();
      if (HasRenderingLayerMask) hash ^= RenderingLayerMask.GetHashCode();
      if (HasCullingMask) hash ^= CullingMask.GetHashCode();
      if (boundingSphereOverride_ != null) hash ^= BoundingSphereOverride.GetHashCode();
      if (HasUseBoundingSphereOverride) hash ^= UseBoundingSphereOverride.GetHashCode();
      if (cookie_ != null) hash ^= Cookie.GetHashCode();
      if (HasCookieSize) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CookieSize);
      if (flare_ != null) hash ^= Flare.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (component_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Component);
      }
      if (HasEnabled) {
        output.WriteRawTag(16);
        output.WriteBool(Enabled);
      }
      if (HasType) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (HasShape) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Shape);
      }
      if (HasIntensity) {
        output.WriteRawTag(45);
        output.WriteFloat(Intensity);
      }
      if (HasBounceIntensity) {
        output.WriteRawTag(53);
        output.WriteFloat(BounceIntensity);
      }
      if (HasRange) {
        output.WriteRawTag(61);
        output.WriteFloat(Range);
      }
      if (color_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Color);
      }
      if (HasColorTemperature) {
        output.WriteRawTag(77);
        output.WriteFloat(ColorTemperature);
      }
      if (HasUseColorTemperature) {
        output.WriteRawTag(80);
        output.WriteBool(UseColorTemperature);
      }
      if (HasSpotAngle) {
        output.WriteRawTag(93);
        output.WriteFloat(SpotAngle);
      }
      if (HasInnerSpotAngle) {
        output.WriteRawTag(101);
        output.WriteFloat(InnerSpotAngle);
      }
      if (HasShadows) {
        output.WriteRawTag(104);
        output.WriteEnum((int) Shadows);
      }
      if (HasShadowStrength) {
        output.WriteRawTag(117);
        output.WriteFloat(ShadowStrength);
      }
      if (HasShadowResolution) {
        output.WriteRawTag(120);
        output.WriteEnum((int) ShadowResolution);
      }
      if (shadowMatrixOverride_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(ShadowMatrixOverride);
      }
      if (HasUseShadowMatrixOverride) {
        output.WriteRawTag(136, 1);
        output.WriteBool(UseShadowMatrixOverride);
      }
      if (HasShadowBias) {
        output.WriteRawTag(149, 1);
        output.WriteFloat(ShadowBias);
      }
      if (HasShadowNormalBias) {
        output.WriteRawTag(157, 1);
        output.WriteFloat(ShadowNormalBias);
      }
      if (HasShadowNearPlane) {
        output.WriteRawTag(165, 1);
        output.WriteFloat(ShadowNearPlane);
      }
      if (HasUseViewFrustumForShadowCasterCull) {
        output.WriteRawTag(168, 1);
        output.WriteBool(UseViewFrustumForShadowCasterCull);
      }
      if (layerShadowCullDistances_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(LayerShadowCullDistances);
      }
      if (HasShadowCustomResolution) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(ShadowCustomResolution);
      }
      if (HasLightShadowCasterMode) {
        output.WriteRawTag(192, 1);
        output.WriteEnum((int) LightShadowCasterMode);
      }
      if (HasRenderingLayerMask) {
        output.WriteRawTag(200, 1);
        output.WriteInt32(RenderingLayerMask);
      }
      if (HasCullingMask) {
        output.WriteRawTag(208, 1);
        output.WriteInt32(CullingMask);
      }
      if (boundingSphereOverride_ != null) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(BoundingSphereOverride);
      }
      if (HasUseBoundingSphereOverride) {
        output.WriteRawTag(224, 1);
        output.WriteBool(UseBoundingSphereOverride);
      }
      if (cookie_ != null) {
        output.WriteRawTag(234, 1);
        output.WriteMessage(Cookie);
      }
      if (HasCookieSize) {
        output.WriteRawTag(245, 1);
        output.WriteFloat(CookieSize);
      }
      if (flare_ != null) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(Flare);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (component_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Component);
      }
      if (HasEnabled) {
        output.WriteRawTag(16);
        output.WriteBool(Enabled);
      }
      if (HasType) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (HasShape) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Shape);
      }
      if (HasIntensity) {
        output.WriteRawTag(45);
        output.WriteFloat(Intensity);
      }
      if (HasBounceIntensity) {
        output.WriteRawTag(53);
        output.WriteFloat(BounceIntensity);
      }
      if (HasRange) {
        output.WriteRawTag(61);
        output.WriteFloat(Range);
      }
      if (color_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Color);
      }
      if (HasColorTemperature) {
        output.WriteRawTag(77);
        output.WriteFloat(ColorTemperature);
      }
      if (HasUseColorTemperature) {
        output.WriteRawTag(80);
        output.WriteBool(UseColorTemperature);
      }
      if (HasSpotAngle) {
        output.WriteRawTag(93);
        output.WriteFloat(SpotAngle);
      }
      if (HasInnerSpotAngle) {
        output.WriteRawTag(101);
        output.WriteFloat(InnerSpotAngle);
      }
      if (HasShadows) {
        output.WriteRawTag(104);
        output.WriteEnum((int) Shadows);
      }
      if (HasShadowStrength) {
        output.WriteRawTag(117);
        output.WriteFloat(ShadowStrength);
      }
      if (HasShadowResolution) {
        output.WriteRawTag(120);
        output.WriteEnum((int) ShadowResolution);
      }
      if (shadowMatrixOverride_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(ShadowMatrixOverride);
      }
      if (HasUseShadowMatrixOverride) {
        output.WriteRawTag(136, 1);
        output.WriteBool(UseShadowMatrixOverride);
      }
      if (HasShadowBias) {
        output.WriteRawTag(149, 1);
        output.WriteFloat(ShadowBias);
      }
      if (HasShadowNormalBias) {
        output.WriteRawTag(157, 1);
        output.WriteFloat(ShadowNormalBias);
      }
      if (HasShadowNearPlane) {
        output.WriteRawTag(165, 1);
        output.WriteFloat(ShadowNearPlane);
      }
      if (HasUseViewFrustumForShadowCasterCull) {
        output.WriteRawTag(168, 1);
        output.WriteBool(UseViewFrustumForShadowCasterCull);
      }
      if (layerShadowCullDistances_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(LayerShadowCullDistances);
      }
      if (HasShadowCustomResolution) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(ShadowCustomResolution);
      }
      if (HasLightShadowCasterMode) {
        output.WriteRawTag(192, 1);
        output.WriteEnum((int) LightShadowCasterMode);
      }
      if (HasRenderingLayerMask) {
        output.WriteRawTag(200, 1);
        output.WriteInt32(RenderingLayerMask);
      }
      if (HasCullingMask) {
        output.WriteRawTag(208, 1);
        output.WriteInt32(CullingMask);
      }
      if (boundingSphereOverride_ != null) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(BoundingSphereOverride);
      }
      if (HasUseBoundingSphereOverride) {
        output.WriteRawTag(224, 1);
        output.WriteBool(UseBoundingSphereOverride);
      }
      if (cookie_ != null) {
        output.WriteRawTag(234, 1);
        output.WriteMessage(Cookie);
      }
      if (HasCookieSize) {
        output.WriteRawTag(245, 1);
        output.WriteFloat(CookieSize);
      }
      if (flare_ != null) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(Flare);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (component_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Component);
      }
      if (HasEnabled) {
        size += 1 + 1;
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (HasShape) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Shape);
      }
      if (HasIntensity) {
        size += 1 + 4;
      }
      if (HasBounceIntensity) {
        size += 1 + 4;
      }
      if (HasRange) {
        size += 1 + 4;
      }
      if (color_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Color);
      }
      if (HasColorTemperature) {
        size += 1 + 4;
      }
      if (HasUseColorTemperature) {
        size += 1 + 1;
      }
      if (HasSpotAngle) {
        size += 1 + 4;
      }
      if (HasInnerSpotAngle) {
        size += 1 + 4;
      }
      if (HasShadows) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Shadows);
      }
      if (HasShadowStrength) {
        size += 1 + 4;
      }
      if (HasShadowResolution) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ShadowResolution);
      }
      if (shadowMatrixOverride_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ShadowMatrixOverride);
      }
      if (HasUseShadowMatrixOverride) {
        size += 2 + 1;
      }
      if (HasShadowBias) {
        size += 2 + 4;
      }
      if (HasShadowNormalBias) {
        size += 2 + 4;
      }
      if (HasShadowNearPlane) {
        size += 2 + 4;
      }
      if (HasUseViewFrustumForShadowCasterCull) {
        size += 2 + 1;
      }
      if (layerShadowCullDistances_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LayerShadowCullDistances);
      }
      if (HasShadowCustomResolution) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ShadowCustomResolution);
      }
      if (HasLightShadowCasterMode) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) LightShadowCasterMode);
      }
      if (HasRenderingLayerMask) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(RenderingLayerMask);
      }
      if (HasCullingMask) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CullingMask);
      }
      if (boundingSphereOverride_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BoundingSphereOverride);
      }
      if (HasUseBoundingSphereOverride) {
        size += 2 + 1;
      }
      if (cookie_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Cookie);
      }
      if (HasCookieSize) {
        size += 2 + 4;
      }
      if (flare_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Flare);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LightUpdate other) {
      if (other == null) {
        return;
      }
      if (other.component_ != null) {
        if (component_ == null) {
          Component = new global::PLUME.Sample.Unity.ComponentIdentifier();
        }
        Component.MergeFrom(other.Component);
      }
      if (other.HasEnabled) {
        Enabled = other.Enabled;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasShape) {
        Shape = other.Shape;
      }
      if (other.HasIntensity) {
        Intensity = other.Intensity;
      }
      if (other.HasBounceIntensity) {
        BounceIntensity = other.BounceIntensity;
      }
      if (other.HasRange) {
        Range = other.Range;
      }
      if (other.color_ != null) {
        if (color_ == null) {
          Color = new global::PLUME.Sample.Common.Color();
        }
        Color.MergeFrom(other.Color);
      }
      if (other.HasColorTemperature) {
        ColorTemperature = other.ColorTemperature;
      }
      if (other.HasUseColorTemperature) {
        UseColorTemperature = other.UseColorTemperature;
      }
      if (other.HasSpotAngle) {
        SpotAngle = other.SpotAngle;
      }
      if (other.HasInnerSpotAngle) {
        InnerSpotAngle = other.InnerSpotAngle;
      }
      if (other.HasShadows) {
        Shadows = other.Shadows;
      }
      if (other.HasShadowStrength) {
        ShadowStrength = other.ShadowStrength;
      }
      if (other.HasShadowResolution) {
        ShadowResolution = other.ShadowResolution;
      }
      if (other.shadowMatrixOverride_ != null) {
        if (shadowMatrixOverride_ == null) {
          ShadowMatrixOverride = new global::PLUME.Sample.Common.Matrix4x4();
        }
        ShadowMatrixOverride.MergeFrom(other.ShadowMatrixOverride);
      }
      if (other.HasUseShadowMatrixOverride) {
        UseShadowMatrixOverride = other.UseShadowMatrixOverride;
      }
      if (other.HasShadowBias) {
        ShadowBias = other.ShadowBias;
      }
      if (other.HasShadowNormalBias) {
        ShadowNormalBias = other.ShadowNormalBias;
      }
      if (other.HasShadowNearPlane) {
        ShadowNearPlane = other.ShadowNearPlane;
      }
      if (other.HasUseViewFrustumForShadowCasterCull) {
        UseViewFrustumForShadowCasterCull = other.UseViewFrustumForShadowCasterCull;
      }
      if (other.layerShadowCullDistances_ != null) {
        if (layerShadowCullDistances_ == null) {
          LayerShadowCullDistances = new global::PLUME.Sample.Unity.LayerShadowCullDistances();
        }
        LayerShadowCullDistances.MergeFrom(other.LayerShadowCullDistances);
      }
      if (other.HasShadowCustomResolution) {
        ShadowCustomResolution = other.ShadowCustomResolution;
      }
      if (other.HasLightShadowCasterMode) {
        LightShadowCasterMode = other.LightShadowCasterMode;
      }
      if (other.HasRenderingLayerMask) {
        RenderingLayerMask = other.RenderingLayerMask;
      }
      if (other.HasCullingMask) {
        CullingMask = other.CullingMask;
      }
      if (other.boundingSphereOverride_ != null) {
        if (boundingSphereOverride_ == null) {
          BoundingSphereOverride = new global::PLUME.Sample.Common.Vector4();
        }
        BoundingSphereOverride.MergeFrom(other.BoundingSphereOverride);
      }
      if (other.HasUseBoundingSphereOverride) {
        UseBoundingSphereOverride = other.UseBoundingSphereOverride;
      }
      if (other.cookie_ != null) {
        if (cookie_ == null) {
          Cookie = new global::PLUME.Sample.Unity.AssetIdentifier();
        }
        Cookie.MergeFrom(other.Cookie);
      }
      if (other.HasCookieSize) {
        CookieSize = other.CookieSize;
      }
      if (other.flare_ != null) {
        if (flare_ == null) {
          Flare = new global::PLUME.Sample.Unity.AssetIdentifier();
        }
        Flare.MergeFrom(other.Flare);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (component_ == null) {
              Component = new global::PLUME.Sample.Unity.ComponentIdentifier();
            }
            input.ReadMessage(Component);
            break;
          }
          case 16: {
            Enabled = input.ReadBool();
            break;
          }
          case 24: {
            Type = (global::PLUME.Sample.Unity.LightType) input.ReadEnum();
            break;
          }
          case 32: {
            Shape = (global::PLUME.Sample.Unity.LightShape) input.ReadEnum();
            break;
          }
          case 45: {
            Intensity = input.ReadFloat();
            break;
          }
          case 53: {
            BounceIntensity = input.ReadFloat();
            break;
          }
          case 61: {
            Range = input.ReadFloat();
            break;
          }
          case 66: {
            if (color_ == null) {
              Color = new global::PLUME.Sample.Common.Color();
            }
            input.ReadMessage(Color);
            break;
          }
          case 77: {
            ColorTemperature = input.ReadFloat();
            break;
          }
          case 80: {
            UseColorTemperature = input.ReadBool();
            break;
          }
          case 93: {
            SpotAngle = input.ReadFloat();
            break;
          }
          case 101: {
            InnerSpotAngle = input.ReadFloat();
            break;
          }
          case 104: {
            Shadows = (global::PLUME.Sample.Unity.LightShadows) input.ReadEnum();
            break;
          }
          case 117: {
            ShadowStrength = input.ReadFloat();
            break;
          }
          case 120: {
            ShadowResolution = (global::PLUME.Sample.Unity.LightShadowResolution) input.ReadEnum();
            break;
          }
          case 130: {
            if (shadowMatrixOverride_ == null) {
              ShadowMatrixOverride = new global::PLUME.Sample.Common.Matrix4x4();
            }
            input.ReadMessage(ShadowMatrixOverride);
            break;
          }
          case 136: {
            UseShadowMatrixOverride = input.ReadBool();
            break;
          }
          case 149: {
            ShadowBias = input.ReadFloat();
            break;
          }
          case 157: {
            ShadowNormalBias = input.ReadFloat();
            break;
          }
          case 165: {
            ShadowNearPlane = input.ReadFloat();
            break;
          }
          case 168: {
            UseViewFrustumForShadowCasterCull = input.ReadBool();
            break;
          }
          case 178: {
            if (layerShadowCullDistances_ == null) {
              LayerShadowCullDistances = new global::PLUME.Sample.Unity.LayerShadowCullDistances();
            }
            input.ReadMessage(LayerShadowCullDistances);
            break;
          }
          case 184: {
            ShadowCustomResolution = input.ReadInt32();
            break;
          }
          case 192: {
            LightShadowCasterMode = (global::PLUME.Sample.Unity.LightShadowCasterMode) input.ReadEnum();
            break;
          }
          case 200: {
            RenderingLayerMask = input.ReadInt32();
            break;
          }
          case 208: {
            CullingMask = input.ReadInt32();
            break;
          }
          case 218: {
            if (boundingSphereOverride_ == null) {
              BoundingSphereOverride = new global::PLUME.Sample.Common.Vector4();
            }
            input.ReadMessage(BoundingSphereOverride);
            break;
          }
          case 224: {
            UseBoundingSphereOverride = input.ReadBool();
            break;
          }
          case 234: {
            if (cookie_ == null) {
              Cookie = new global::PLUME.Sample.Unity.AssetIdentifier();
            }
            input.ReadMessage(Cookie);
            break;
          }
          case 245: {
            CookieSize = input.ReadFloat();
            break;
          }
          case 250: {
            if (flare_ == null) {
              Flare = new global::PLUME.Sample.Unity.AssetIdentifier();
            }
            input.ReadMessage(Flare);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (component_ == null) {
              Component = new global::PLUME.Sample.Unity.ComponentIdentifier();
            }
            input.ReadMessage(Component);
            break;
          }
          case 16: {
            Enabled = input.ReadBool();
            break;
          }
          case 24: {
            Type = (global::PLUME.Sample.Unity.LightType) input.ReadEnum();
            break;
          }
          case 32: {
            Shape = (global::PLUME.Sample.Unity.LightShape) input.ReadEnum();
            break;
          }
          case 45: {
            Intensity = input.ReadFloat();
            break;
          }
          case 53: {
            BounceIntensity = input.ReadFloat();
            break;
          }
          case 61: {
            Range = input.ReadFloat();
            break;
          }
          case 66: {
            if (color_ == null) {
              Color = new global::PLUME.Sample.Common.Color();
            }
            input.ReadMessage(Color);
            break;
          }
          case 77: {
            ColorTemperature = input.ReadFloat();
            break;
          }
          case 80: {
            UseColorTemperature = input.ReadBool();
            break;
          }
          case 93: {
            SpotAngle = input.ReadFloat();
            break;
          }
          case 101: {
            InnerSpotAngle = input.ReadFloat();
            break;
          }
          case 104: {
            Shadows = (global::PLUME.Sample.Unity.LightShadows) input.ReadEnum();
            break;
          }
          case 117: {
            ShadowStrength = input.ReadFloat();
            break;
          }
          case 120: {
            ShadowResolution = (global::PLUME.Sample.Unity.LightShadowResolution) input.ReadEnum();
            break;
          }
          case 130: {
            if (shadowMatrixOverride_ == null) {
              ShadowMatrixOverride = new global::PLUME.Sample.Common.Matrix4x4();
            }
            input.ReadMessage(ShadowMatrixOverride);
            break;
          }
          case 136: {
            UseShadowMatrixOverride = input.ReadBool();
            break;
          }
          case 149: {
            ShadowBias = input.ReadFloat();
            break;
          }
          case 157: {
            ShadowNormalBias = input.ReadFloat();
            break;
          }
          case 165: {
            ShadowNearPlane = input.ReadFloat();
            break;
          }
          case 168: {
            UseViewFrustumForShadowCasterCull = input.ReadBool();
            break;
          }
          case 178: {
            if (layerShadowCullDistances_ == null) {
              LayerShadowCullDistances = new global::PLUME.Sample.Unity.LayerShadowCullDistances();
            }
            input.ReadMessage(LayerShadowCullDistances);
            break;
          }
          case 184: {
            ShadowCustomResolution = input.ReadInt32();
            break;
          }
          case 192: {
            LightShadowCasterMode = (global::PLUME.Sample.Unity.LightShadowCasterMode) input.ReadEnum();
            break;
          }
          case 200: {
            RenderingLayerMask = input.ReadInt32();
            break;
          }
          case 208: {
            CullingMask = input.ReadInt32();
            break;
          }
          case 218: {
            if (boundingSphereOverride_ == null) {
              BoundingSphereOverride = new global::PLUME.Sample.Common.Vector4();
            }
            input.ReadMessage(BoundingSphereOverride);
            break;
          }
          case 224: {
            UseBoundingSphereOverride = input.ReadBool();
            break;
          }
          case 234: {
            if (cookie_ == null) {
              Cookie = new global::PLUME.Sample.Unity.AssetIdentifier();
            }
            input.ReadMessage(Cookie);
            break;
          }
          case 245: {
            CookieSize = input.ReadFloat();
            break;
          }
          case 250: {
            if (flare_ == null) {
              Flare = new global::PLUME.Sample.Unity.AssetIdentifier();
            }
            input.ReadMessage(Flare);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LayerShadowCullDistances : pb::IMessage<LayerShadowCullDistances>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LayerShadowCullDistances> _parser = new pb::MessageParser<LayerShadowCullDistances>(() => new LayerShadowCullDistances());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LayerShadowCullDistances> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PLUME.Sample.Unity.LightReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LayerShadowCullDistances() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LayerShadowCullDistances(LayerShadowCullDistances other) : this() {
      distances_ = other.distances_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LayerShadowCullDistances Clone() {
      return new LayerShadowCullDistances(this);
    }

    /// <summary>Field number for the "distances" field.</summary>
    public const int DistancesFieldNumber = 1;
    private static readonly pb::FieldCodec<float> _repeated_distances_codec
        = pb::FieldCodec.ForFloat(10);
    private readonly pbc::RepeatedField<float> distances_ = new pbc::RepeatedField<float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<float> Distances {
      get { return distances_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LayerShadowCullDistances);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LayerShadowCullDistances other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!distances_.Equals(other.distances_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= distances_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      distances_.WriteTo(output, _repeated_distances_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      distances_.WriteTo(ref output, _repeated_distances_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += distances_.CalculateSize(_repeated_distances_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LayerShadowCullDistances other) {
      if (other == null) {
        return;
      }
      distances_.Add(other.distances_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 13: {
            distances_.AddEntriesFrom(input, _repeated_distances_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 13: {
            distances_.AddEntriesFrom(ref input, _repeated_distances_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
