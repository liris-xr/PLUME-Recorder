// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: plume/sample/unity/reflection_probe.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PLUME.Sample.Unity {

  /// <summary>Holder for reflection information generated from plume/sample/unity/reflection_probe.proto</summary>
  public static partial class ReflectionProbeReflection {

    #region Descriptor
    /// <summary>File descriptor for plume/sample/unity/reflection_probe.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ReflectionProbeReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CilwbHVtZS9zYW1wbGUvdW5pdHkvcmVmbGVjdGlvbl9wcm9iZS5wcm90bxIS",
            "cGx1bWUuc2FtcGxlLnVuaXR5GiRwbHVtZS9zYW1wbGUvdW5pdHkvaWRlbnRp",
            "ZmllcnMucHJvdG8aIHBsdW1lL3NhbXBsZS9jb21tb24vYm91bmRzLnByb3Rv",
            "Gh9wbHVtZS9zYW1wbGUvY29tbW9uL2NvbG9yLnByb3RvIl4KFVJlZmxlY3Rp",
            "b25Qcm9iZUNyZWF0ZRJFCgljb21wb25lbnQYASABKAsyJy5wbHVtZS5zYW1w",
            "bGUudW5pdHkuQ29tcG9uZW50SWRlbnRpZmllclIJY29tcG9uZW50Il8KFlJl",
            "ZmxlY3Rpb25Qcm9iZURlc3Ryb3kSRQoJY29tcG9uZW50GAEgASgLMicucGx1",
            "bWUuc2FtcGxlLnVuaXR5LkNvbXBvbmVudElkZW50aWZpZXJSCWNvbXBvbmVu",
            "dCKfDAoVUmVmbGVjdGlvblByb2JlVXBkYXRlEkUKCWNvbXBvbmVudBgBIAEo",
            "CzInLnBsdW1lLnNhbXBsZS51bml0eS5Db21wb25lbnRJZGVudGlmaWVyUglj",
            "b21wb25lbnQSHQoHZW5hYmxlZBgCIAEoCEgAUgdlbmFibGVkiAEBEkAKBG1v",
            "ZGUYAyABKA4yJy5wbHVtZS5zYW1wbGUudW5pdHkuUmVmbGVjdGlvblByb2Jl",
            "TW9kZUgBUgRtb2RliAEBElYKDHJlZnJlc2hfbW9kZRgEIAEoDjIuLnBsdW1l",
            "LnNhbXBsZS51bml0eS5SZWZsZWN0aW9uUHJvYmVSZWZyZXNoTW9kZUgCUgty",
            "ZWZyZXNoTW9kZYgBARJjChF0aW1lX3NsaWNpbmdfbW9kZRgFIAEoDjIyLnBs",
            "dW1lLnNhbXBsZS51bml0eS5SZWZsZWN0aW9uUHJvYmVUaW1lU2xpY2luZ01v",
            "ZGVIA1IPdGltZVNsaWNpbmdNb2RliAEBElMKC2NsZWFyX2ZsYWdzGAYgASgO",
            "Mi0ucGx1bWUuc2FtcGxlLnVuaXR5LlJlZmxlY3Rpb25Qcm9iZUNsZWFyRmxh",
            "Z3NIBFIKY2xlYXJGbGFnc4gBARIjCgppbXBvcnRhbmNlGAcgASgFSAVSCmlt",
            "cG9ydGFuY2WIAQESIQoJaW50ZW5zaXR5GAggASgCSAZSCWludGVuc2l0eYgB",
            "ARIrCg9uZWFyX2NsaXBfcGxhbmUYCSABKAJIB1INbmVhckNsaXBQbGFuZYgB",
            "ARIpCg5mYXJfY2xpcF9wbGFuZRgKIAEoAkgIUgxmYXJDbGlwUGxhbmWIAQES",
            "OQoWcmVuZGVyX2R5bmFtaWNfb2JqZWN0cxgLIAEoCEgJUhRyZW5kZXJEeW5h",
            "bWljT2JqZWN0c4gBARIqCg5ib3hfcHJvamVjdGlvbhgMIAEoCEgKUg1ib3hQ",
            "cm9qZWN0aW9uiAEBEioKDmJsZW5kX2Rpc3RhbmNlGA0gASgCSAtSDWJsZW5k",
            "RGlzdGFuY2WIAQESOAoGYm91bmRzGA4gASgLMhsucGx1bWUuc2FtcGxlLmNv",
            "bW1vbi5Cb3VuZHNIDFIGYm91bmRziAEBEiMKCnJlc29sdXRpb24YDyABKAVI",
            "DVIKcmVzb2x1dGlvbogBARIVCgNoZHIYECABKAhIDlIDaGRyiAEBEiwKD3No",
            "YWRvd19kaXN0YW5jZRgRIAEoAkgPUg5zaGFkb3dEaXN0YW5jZYgBARJKChBi",
            "YWNrZ3JvdW5kX2NvbG9yGBIgASgLMhoucGx1bWUuc2FtcGxlLmNvbW1vbi5D",
            "b2xvckgQUg9iYWNrZ3JvdW5kQ29sb3KIAQESJgoMY3VsbGluZ19tYXNrGBMg",
            "ASgFSBFSC2N1bGxpbmdNYXNriAEBEloKFGN1c3RvbV9iYWtlZF90ZXh0dXJl",
            "GBQgASgLMiMucGx1bWUuc2FtcGxlLnVuaXR5LkFzc2V0SWRlbnRpZmllckgS",
            "UhJjdXN0b21CYWtlZFRleHR1cmWIAQESTQoNYmFrZWRfdGV4dHVyZRgVIAEo",
            "CzIjLnBsdW1lLnNhbXBsZS51bml0eS5Bc3NldElkZW50aWZpZXJIE1IMYmFr",
            "ZWRUZXh0dXJliAEBQgoKCF9lbmFibGVkQgcKBV9tb2RlQg8KDV9yZWZyZXNo",
            "X21vZGVCFAoSX3RpbWVfc2xpY2luZ19tb2RlQg4KDF9jbGVhcl9mbGFnc0IN",
            "CgtfaW1wb3J0YW5jZUIMCgpfaW50ZW5zaXR5QhIKEF9uZWFyX2NsaXBfcGxh",
            "bmVCEQoPX2Zhcl9jbGlwX3BsYW5lQhkKF19yZW5kZXJfZHluYW1pY19vYmpl",
            "Y3RzQhEKD19ib3hfcHJvamVjdGlvbkIRCg9fYmxlbmRfZGlzdGFuY2VCCQoH",
            "X2JvdW5kc0INCgtfcmVzb2x1dGlvbkIGCgRfaGRyQhIKEF9zaGFkb3dfZGlz",
            "dGFuY2VCEwoRX2JhY2tncm91bmRfY29sb3JCDwoNX2N1bGxpbmdfbWFza0IX",
            "ChVfY3VzdG9tX2Jha2VkX3RleHR1cmVCEAoOX2Jha2VkX3RleHR1cmUqfAoT",
            "UmVmbGVjdGlvblByb2JlTW9kZRIfChtSRUZMRUNUSU9OX1BST0JFX01PREVf",
            "QkFLRUQQABIgChxSRUZMRUNUSU9OX1BST0JFX01PREVfQ1VTVE9NEAESIgoe",
            "UkVGTEVDVElPTl9QUk9CRV9NT0RFX1JFQUxUSU1FEAIqcgoZUmVmbGVjdGlv",
            "blByb2JlQ2xlYXJGbGFncxInCiNSRUZMRUNUSU9OX1BST0JFX0NMRUFSX0ZM",
            "QUdTX1NLWUJPWBAAEiwKKFJFRkxFQ1RJT05fUFJPQkVfQ0xFQVJfRkxBR1Nf",
            "U09MSURfQ09MT1IQASqoAQoaUmVmbGVjdGlvblByb2JlUmVmcmVzaE1vZGUS",
            "KgomUkVGTEVDVElPTl9QUk9CRV9SRUZSRVNIX01PREVfT05fQVdBS0UQABIt",
            "CilSRUZMRUNUSU9OX1BST0JFX1JFRlJFU0hfTU9ERV9FVkVSWV9GUkFNRRAB",
            "Ei8KK1JFRkxFQ1RJT05fUFJPQkVfUkVGUkVTSF9NT0RFX1ZJQV9TQ1JJUFRJ",
            "TkcQAirLAQoeUmVmbGVjdGlvblByb2JlVGltZVNsaWNpbmdNb2RlEjgKNFJF",
            "RkxFQ1RJT05fUFJPQkVfVElNRV9TTElDSU5HX01PREVfQUxMX0ZBQ0VTX0FU",
            "X09OQ0UQABI3CjNSRUZMRUNUSU9OX1BST0JFX1RJTUVfU0xJQ0lOR19NT0RF",
            "X0lORElWSURVQUxfRkFDRVMQARI2CjJSRUZMRUNUSU9OX1BST0JFX1RJTUVf",
            "U0xJQ0lOR19NT0RFX05PX1RJTUVfU0xJQ0lORxACQhWqAhJQTFVNRS5TYW1w",
            "bGUuVW5pdHliBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::PLUME.Sample.Unity.IdentifiersReflection.Descriptor, global::PLUME.Sample.Common.BoundsReflection.Descriptor, global::PLUME.Sample.Common.ColorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::PLUME.Sample.Unity.ReflectionProbeMode), typeof(global::PLUME.Sample.Unity.ReflectionProbeClearFlags), typeof(global::PLUME.Sample.Unity.ReflectionProbeRefreshMode), typeof(global::PLUME.Sample.Unity.ReflectionProbeTimeSlicingMode), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PLUME.Sample.Unity.ReflectionProbeCreate), global::PLUME.Sample.Unity.ReflectionProbeCreate.Parser, new[]{ "Component" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PLUME.Sample.Unity.ReflectionProbeDestroy), global::PLUME.Sample.Unity.ReflectionProbeDestroy.Parser, new[]{ "Component" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PLUME.Sample.Unity.ReflectionProbeUpdate), global::PLUME.Sample.Unity.ReflectionProbeUpdate.Parser, new[]{ "Component", "Enabled", "Mode", "RefreshMode", "TimeSlicingMode", "ClearFlags", "Importance", "Intensity", "NearClipPlane", "FarClipPlane", "RenderDynamicObjects", "BoxProjection", "BlendDistance", "Bounds", "Resolution", "Hdr", "ShadowDistance", "BackgroundColor", "CullingMask", "CustomBakedTexture", "BakedTexture" }, new[]{ "Enabled", "Mode", "RefreshMode", "TimeSlicingMode", "ClearFlags", "Importance", "Intensity", "NearClipPlane", "FarClipPlane", "RenderDynamicObjects", "BoxProjection", "BlendDistance", "Bounds", "Resolution", "Hdr", "ShadowDistance", "BackgroundColor", "CullingMask", "CustomBakedTexture", "BakedTexture" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ReflectionProbeMode {
    [pbr::OriginalName("REFLECTION_PROBE_MODE_BAKED")] Baked = 0,
    [pbr::OriginalName("REFLECTION_PROBE_MODE_CUSTOM")] Custom = 1,
    [pbr::OriginalName("REFLECTION_PROBE_MODE_REALTIME")] Realtime = 2,
  }

  public enum ReflectionProbeClearFlags {
    [pbr::OriginalName("REFLECTION_PROBE_CLEAR_FLAGS_SKYBOX")] Skybox = 0,
    [pbr::OriginalName("REFLECTION_PROBE_CLEAR_FLAGS_SOLID_COLOR")] SolidColor = 1,
  }

  public enum ReflectionProbeRefreshMode {
    [pbr::OriginalName("REFLECTION_PROBE_REFRESH_MODE_ON_AWAKE")] OnAwake = 0,
    [pbr::OriginalName("REFLECTION_PROBE_REFRESH_MODE_EVERY_FRAME")] EveryFrame = 1,
    [pbr::OriginalName("REFLECTION_PROBE_REFRESH_MODE_VIA_SCRIPTING")] ViaScripting = 2,
  }

  public enum ReflectionProbeTimeSlicingMode {
    [pbr::OriginalName("REFLECTION_PROBE_TIME_SLICING_MODE_ALL_FACES_AT_ONCE")] AllFacesAtOnce = 0,
    [pbr::OriginalName("REFLECTION_PROBE_TIME_SLICING_MODE_INDIVIDUAL_FACES")] IndividualFaces = 1,
    [pbr::OriginalName("REFLECTION_PROBE_TIME_SLICING_MODE_NO_TIME_SLICING")] NoTimeSlicing = 2,
  }

  #endregion

  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ReflectionProbeCreate : pb::IMessage<ReflectionProbeCreate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReflectionProbeCreate> _parser = new pb::MessageParser<ReflectionProbeCreate>(() => new ReflectionProbeCreate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ReflectionProbeCreate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PLUME.Sample.Unity.ReflectionProbeReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReflectionProbeCreate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReflectionProbeCreate(ReflectionProbeCreate other) : this() {
      component_ = other.component_ != null ? other.component_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReflectionProbeCreate Clone() {
      return new ReflectionProbeCreate(this);
    }

    /// <summary>Field number for the "component" field.</summary>
    public const int ComponentFieldNumber = 1;
    private global::PLUME.Sample.Unity.ComponentIdentifier component_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.ComponentIdentifier Component {
      get { return component_; }
      set {
        component_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ReflectionProbeCreate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ReflectionProbeCreate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Component, other.Component)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (component_ != null) hash ^= Component.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (component_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Component);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (component_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Component);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (component_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Component);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ReflectionProbeCreate other) {
      if (other == null) {
        return;
      }
      if (other.component_ != null) {
        if (component_ == null) {
          Component = new global::PLUME.Sample.Unity.ComponentIdentifier();
        }
        Component.MergeFrom(other.Component);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (component_ == null) {
              Component = new global::PLUME.Sample.Unity.ComponentIdentifier();
            }
            input.ReadMessage(Component);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (component_ == null) {
              Component = new global::PLUME.Sample.Unity.ComponentIdentifier();
            }
            input.ReadMessage(Component);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ReflectionProbeDestroy : pb::IMessage<ReflectionProbeDestroy>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReflectionProbeDestroy> _parser = new pb::MessageParser<ReflectionProbeDestroy>(() => new ReflectionProbeDestroy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ReflectionProbeDestroy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PLUME.Sample.Unity.ReflectionProbeReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReflectionProbeDestroy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReflectionProbeDestroy(ReflectionProbeDestroy other) : this() {
      component_ = other.component_ != null ? other.component_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReflectionProbeDestroy Clone() {
      return new ReflectionProbeDestroy(this);
    }

    /// <summary>Field number for the "component" field.</summary>
    public const int ComponentFieldNumber = 1;
    private global::PLUME.Sample.Unity.ComponentIdentifier component_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.ComponentIdentifier Component {
      get { return component_; }
      set {
        component_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ReflectionProbeDestroy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ReflectionProbeDestroy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Component, other.Component)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (component_ != null) hash ^= Component.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (component_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Component);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (component_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Component);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (component_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Component);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ReflectionProbeDestroy other) {
      if (other == null) {
        return;
      }
      if (other.component_ != null) {
        if (component_ == null) {
          Component = new global::PLUME.Sample.Unity.ComponentIdentifier();
        }
        Component.MergeFrom(other.Component);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (component_ == null) {
              Component = new global::PLUME.Sample.Unity.ComponentIdentifier();
            }
            input.ReadMessage(Component);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (component_ == null) {
              Component = new global::PLUME.Sample.Unity.ComponentIdentifier();
            }
            input.ReadMessage(Component);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ReflectionProbeUpdate : pb::IMessage<ReflectionProbeUpdate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReflectionProbeUpdate> _parser = new pb::MessageParser<ReflectionProbeUpdate>(() => new ReflectionProbeUpdate());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ReflectionProbeUpdate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PLUME.Sample.Unity.ReflectionProbeReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReflectionProbeUpdate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReflectionProbeUpdate(ReflectionProbeUpdate other) : this() {
      _hasBits0 = other._hasBits0;
      component_ = other.component_ != null ? other.component_.Clone() : null;
      enabled_ = other.enabled_;
      mode_ = other.mode_;
      refreshMode_ = other.refreshMode_;
      timeSlicingMode_ = other.timeSlicingMode_;
      clearFlags_ = other.clearFlags_;
      importance_ = other.importance_;
      intensity_ = other.intensity_;
      nearClipPlane_ = other.nearClipPlane_;
      farClipPlane_ = other.farClipPlane_;
      renderDynamicObjects_ = other.renderDynamicObjects_;
      boxProjection_ = other.boxProjection_;
      blendDistance_ = other.blendDistance_;
      bounds_ = other.bounds_ != null ? other.bounds_.Clone() : null;
      resolution_ = other.resolution_;
      hdr_ = other.hdr_;
      shadowDistance_ = other.shadowDistance_;
      backgroundColor_ = other.backgroundColor_ != null ? other.backgroundColor_.Clone() : null;
      cullingMask_ = other.cullingMask_;
      customBakedTexture_ = other.customBakedTexture_ != null ? other.customBakedTexture_.Clone() : null;
      bakedTexture_ = other.bakedTexture_ != null ? other.bakedTexture_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReflectionProbeUpdate Clone() {
      return new ReflectionProbeUpdate(this);
    }

    /// <summary>Field number for the "component" field.</summary>
    public const int ComponentFieldNumber = 1;
    private global::PLUME.Sample.Unity.ComponentIdentifier component_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.ComponentIdentifier Component {
      get { return component_; }
      set {
        component_ = value;
      }
    }

    /// <summary>Field number for the "enabled" field.</summary>
    public const int EnabledFieldNumber = 2;
    private readonly static bool EnabledDefaultValue = false;

    private bool enabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Enabled {
      get { if ((_hasBits0 & 1) != 0) { return enabled_; } else { return EnabledDefaultValue; } }
      set {
        _hasBits0 |= 1;
        enabled_ = value;
      }
    }
    /// <summary>Gets whether the "enabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnabled {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "enabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnabled() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "mode" field.</summary>
    public const int ModeFieldNumber = 3;
    private readonly static global::PLUME.Sample.Unity.ReflectionProbeMode ModeDefaultValue = global::PLUME.Sample.Unity.ReflectionProbeMode.Baked;

    private global::PLUME.Sample.Unity.ReflectionProbeMode mode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.ReflectionProbeMode Mode {
      get { if ((_hasBits0 & 2) != 0) { return mode_; } else { return ModeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        mode_ = value;
      }
    }
    /// <summary>Gets whether the "mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMode {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMode() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "refresh_mode" field.</summary>
    public const int RefreshModeFieldNumber = 4;
    private readonly static global::PLUME.Sample.Unity.ReflectionProbeRefreshMode RefreshModeDefaultValue = global::PLUME.Sample.Unity.ReflectionProbeRefreshMode.OnAwake;

    private global::PLUME.Sample.Unity.ReflectionProbeRefreshMode refreshMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.ReflectionProbeRefreshMode RefreshMode {
      get { if ((_hasBits0 & 4) != 0) { return refreshMode_; } else { return RefreshModeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        refreshMode_ = value;
      }
    }
    /// <summary>Gets whether the "refresh_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRefreshMode {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "refresh_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRefreshMode() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "time_slicing_mode" field.</summary>
    public const int TimeSlicingModeFieldNumber = 5;
    private readonly static global::PLUME.Sample.Unity.ReflectionProbeTimeSlicingMode TimeSlicingModeDefaultValue = global::PLUME.Sample.Unity.ReflectionProbeTimeSlicingMode.AllFacesAtOnce;

    private global::PLUME.Sample.Unity.ReflectionProbeTimeSlicingMode timeSlicingMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.ReflectionProbeTimeSlicingMode TimeSlicingMode {
      get { if ((_hasBits0 & 8) != 0) { return timeSlicingMode_; } else { return TimeSlicingModeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        timeSlicingMode_ = value;
      }
    }
    /// <summary>Gets whether the "time_slicing_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimeSlicingMode {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "time_slicing_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimeSlicingMode() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "clear_flags" field.</summary>
    public const int ClearFlagsFieldNumber = 6;
    private readonly static global::PLUME.Sample.Unity.ReflectionProbeClearFlags ClearFlagsDefaultValue = global::PLUME.Sample.Unity.ReflectionProbeClearFlags.Skybox;

    private global::PLUME.Sample.Unity.ReflectionProbeClearFlags clearFlags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.ReflectionProbeClearFlags ClearFlags {
      get { if ((_hasBits0 & 16) != 0) { return clearFlags_; } else { return ClearFlagsDefaultValue; } }
      set {
        _hasBits0 |= 16;
        clearFlags_ = value;
      }
    }
    /// <summary>Gets whether the "clear_flags" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClearFlags {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "clear_flags" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClearFlags() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "importance" field.</summary>
    public const int ImportanceFieldNumber = 7;
    private readonly static int ImportanceDefaultValue = 0;

    private int importance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Importance {
      get { if ((_hasBits0 & 32) != 0) { return importance_; } else { return ImportanceDefaultValue; } }
      set {
        _hasBits0 |= 32;
        importance_ = value;
      }
    }
    /// <summary>Gets whether the "importance" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasImportance {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "importance" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearImportance() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "intensity" field.</summary>
    public const int IntensityFieldNumber = 8;
    private readonly static float IntensityDefaultValue = 0F;

    private float intensity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Intensity {
      get { if ((_hasBits0 & 64) != 0) { return intensity_; } else { return IntensityDefaultValue; } }
      set {
        _hasBits0 |= 64;
        intensity_ = value;
      }
    }
    /// <summary>Gets whether the "intensity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIntensity {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "intensity" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIntensity() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "near_clip_plane" field.</summary>
    public const int NearClipPlaneFieldNumber = 9;
    private readonly static float NearClipPlaneDefaultValue = 0F;

    private float nearClipPlane_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float NearClipPlane {
      get { if ((_hasBits0 & 128) != 0) { return nearClipPlane_; } else { return NearClipPlaneDefaultValue; } }
      set {
        _hasBits0 |= 128;
        nearClipPlane_ = value;
      }
    }
    /// <summary>Gets whether the "near_clip_plane" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNearClipPlane {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "near_clip_plane" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNearClipPlane() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "far_clip_plane" field.</summary>
    public const int FarClipPlaneFieldNumber = 10;
    private readonly static float FarClipPlaneDefaultValue = 0F;

    private float farClipPlane_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float FarClipPlane {
      get { if ((_hasBits0 & 256) != 0) { return farClipPlane_; } else { return FarClipPlaneDefaultValue; } }
      set {
        _hasBits0 |= 256;
        farClipPlane_ = value;
      }
    }
    /// <summary>Gets whether the "far_clip_plane" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFarClipPlane {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "far_clip_plane" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFarClipPlane() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "render_dynamic_objects" field.</summary>
    public const int RenderDynamicObjectsFieldNumber = 11;
    private readonly static bool RenderDynamicObjectsDefaultValue = false;

    private bool renderDynamicObjects_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool RenderDynamicObjects {
      get { if ((_hasBits0 & 512) != 0) { return renderDynamicObjects_; } else { return RenderDynamicObjectsDefaultValue; } }
      set {
        _hasBits0 |= 512;
        renderDynamicObjects_ = value;
      }
    }
    /// <summary>Gets whether the "render_dynamic_objects" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRenderDynamicObjects {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "render_dynamic_objects" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRenderDynamicObjects() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "box_projection" field.</summary>
    public const int BoxProjectionFieldNumber = 12;
    private readonly static bool BoxProjectionDefaultValue = false;

    private bool boxProjection_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool BoxProjection {
      get { if ((_hasBits0 & 1024) != 0) { return boxProjection_; } else { return BoxProjectionDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        boxProjection_ = value;
      }
    }
    /// <summary>Gets whether the "box_projection" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBoxProjection {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "box_projection" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBoxProjection() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "blend_distance" field.</summary>
    public const int BlendDistanceFieldNumber = 13;
    private readonly static float BlendDistanceDefaultValue = 0F;

    private float blendDistance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float BlendDistance {
      get { if ((_hasBits0 & 2048) != 0) { return blendDistance_; } else { return BlendDistanceDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        blendDistance_ = value;
      }
    }
    /// <summary>Gets whether the "blend_distance" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBlendDistance {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "blend_distance" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBlendDistance() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "bounds" field.</summary>
    public const int BoundsFieldNumber = 14;
    private global::PLUME.Sample.Common.Bounds bounds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Common.Bounds Bounds {
      get { return bounds_; }
      set {
        bounds_ = value;
      }
    }

    /// <summary>Field number for the "resolution" field.</summary>
    public const int ResolutionFieldNumber = 15;
    private readonly static int ResolutionDefaultValue = 0;

    private int resolution_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Resolution {
      get { if ((_hasBits0 & 4096) != 0) { return resolution_; } else { return ResolutionDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        resolution_ = value;
      }
    }
    /// <summary>Gets whether the "resolution" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResolution {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "resolution" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResolution() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "hdr" field.</summary>
    public const int HdrFieldNumber = 16;
    private readonly static bool HdrDefaultValue = false;

    private bool hdr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Hdr {
      get { if ((_hasBits0 & 8192) != 0) { return hdr_; } else { return HdrDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        hdr_ = value;
      }
    }
    /// <summary>Gets whether the "hdr" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHdr {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "hdr" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHdr() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "shadow_distance" field.</summary>
    public const int ShadowDistanceFieldNumber = 17;
    private readonly static float ShadowDistanceDefaultValue = 0F;

    private float shadowDistance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ShadowDistance {
      get { if ((_hasBits0 & 16384) != 0) { return shadowDistance_; } else { return ShadowDistanceDefaultValue; } }
      set {
        _hasBits0 |= 16384;
        shadowDistance_ = value;
      }
    }
    /// <summary>Gets whether the "shadow_distance" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShadowDistance {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "shadow_distance" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShadowDistance() {
      _hasBits0 &= ~16384;
    }

    /// <summary>Field number for the "background_color" field.</summary>
    public const int BackgroundColorFieldNumber = 18;
    private global::PLUME.Sample.Common.Color backgroundColor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Common.Color BackgroundColor {
      get { return backgroundColor_; }
      set {
        backgroundColor_ = value;
      }
    }

    /// <summary>Field number for the "culling_mask" field.</summary>
    public const int CullingMaskFieldNumber = 19;
    private readonly static int CullingMaskDefaultValue = 0;

    private int cullingMask_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CullingMask {
      get { if ((_hasBits0 & 32768) != 0) { return cullingMask_; } else { return CullingMaskDefaultValue; } }
      set {
        _hasBits0 |= 32768;
        cullingMask_ = value;
      }
    }
    /// <summary>Gets whether the "culling_mask" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCullingMask {
      get { return (_hasBits0 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "culling_mask" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCullingMask() {
      _hasBits0 &= ~32768;
    }

    /// <summary>Field number for the "custom_baked_texture" field.</summary>
    public const int CustomBakedTextureFieldNumber = 20;
    private global::PLUME.Sample.Unity.AssetIdentifier customBakedTexture_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.AssetIdentifier CustomBakedTexture {
      get { return customBakedTexture_; }
      set {
        customBakedTexture_ = value;
      }
    }

    /// <summary>Field number for the "baked_texture" field.</summary>
    public const int BakedTextureFieldNumber = 21;
    private global::PLUME.Sample.Unity.AssetIdentifier bakedTexture_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PLUME.Sample.Unity.AssetIdentifier BakedTexture {
      get { return bakedTexture_; }
      set {
        bakedTexture_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ReflectionProbeUpdate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ReflectionProbeUpdate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Component, other.Component)) return false;
      if (Enabled != other.Enabled) return false;
      if (Mode != other.Mode) return false;
      if (RefreshMode != other.RefreshMode) return false;
      if (TimeSlicingMode != other.TimeSlicingMode) return false;
      if (ClearFlags != other.ClearFlags) return false;
      if (Importance != other.Importance) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Intensity, other.Intensity)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(NearClipPlane, other.NearClipPlane)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FarClipPlane, other.FarClipPlane)) return false;
      if (RenderDynamicObjects != other.RenderDynamicObjects) return false;
      if (BoxProjection != other.BoxProjection) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BlendDistance, other.BlendDistance)) return false;
      if (!object.Equals(Bounds, other.Bounds)) return false;
      if (Resolution != other.Resolution) return false;
      if (Hdr != other.Hdr) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ShadowDistance, other.ShadowDistance)) return false;
      if (!object.Equals(BackgroundColor, other.BackgroundColor)) return false;
      if (CullingMask != other.CullingMask) return false;
      if (!object.Equals(CustomBakedTexture, other.CustomBakedTexture)) return false;
      if (!object.Equals(BakedTexture, other.BakedTexture)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (component_ != null) hash ^= Component.GetHashCode();
      if (HasEnabled) hash ^= Enabled.GetHashCode();
      if (HasMode) hash ^= Mode.GetHashCode();
      if (HasRefreshMode) hash ^= RefreshMode.GetHashCode();
      if (HasTimeSlicingMode) hash ^= TimeSlicingMode.GetHashCode();
      if (HasClearFlags) hash ^= ClearFlags.GetHashCode();
      if (HasImportance) hash ^= Importance.GetHashCode();
      if (HasIntensity) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Intensity);
      if (HasNearClipPlane) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(NearClipPlane);
      if (HasFarClipPlane) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FarClipPlane);
      if (HasRenderDynamicObjects) hash ^= RenderDynamicObjects.GetHashCode();
      if (HasBoxProjection) hash ^= BoxProjection.GetHashCode();
      if (HasBlendDistance) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BlendDistance);
      if (bounds_ != null) hash ^= Bounds.GetHashCode();
      if (HasResolution) hash ^= Resolution.GetHashCode();
      if (HasHdr) hash ^= Hdr.GetHashCode();
      if (HasShadowDistance) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ShadowDistance);
      if (backgroundColor_ != null) hash ^= BackgroundColor.GetHashCode();
      if (HasCullingMask) hash ^= CullingMask.GetHashCode();
      if (customBakedTexture_ != null) hash ^= CustomBakedTexture.GetHashCode();
      if (bakedTexture_ != null) hash ^= BakedTexture.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (component_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Component);
      }
      if (HasEnabled) {
        output.WriteRawTag(16);
        output.WriteBool(Enabled);
      }
      if (HasMode) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Mode);
      }
      if (HasRefreshMode) {
        output.WriteRawTag(32);
        output.WriteEnum((int) RefreshMode);
      }
      if (HasTimeSlicingMode) {
        output.WriteRawTag(40);
        output.WriteEnum((int) TimeSlicingMode);
      }
      if (HasClearFlags) {
        output.WriteRawTag(48);
        output.WriteEnum((int) ClearFlags);
      }
      if (HasImportance) {
        output.WriteRawTag(56);
        output.WriteInt32(Importance);
      }
      if (HasIntensity) {
        output.WriteRawTag(69);
        output.WriteFloat(Intensity);
      }
      if (HasNearClipPlane) {
        output.WriteRawTag(77);
        output.WriteFloat(NearClipPlane);
      }
      if (HasFarClipPlane) {
        output.WriteRawTag(85);
        output.WriteFloat(FarClipPlane);
      }
      if (HasRenderDynamicObjects) {
        output.WriteRawTag(88);
        output.WriteBool(RenderDynamicObjects);
      }
      if (HasBoxProjection) {
        output.WriteRawTag(96);
        output.WriteBool(BoxProjection);
      }
      if (HasBlendDistance) {
        output.WriteRawTag(109);
        output.WriteFloat(BlendDistance);
      }
      if (bounds_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(Bounds);
      }
      if (HasResolution) {
        output.WriteRawTag(120);
        output.WriteInt32(Resolution);
      }
      if (HasHdr) {
        output.WriteRawTag(128, 1);
        output.WriteBool(Hdr);
      }
      if (HasShadowDistance) {
        output.WriteRawTag(141, 1);
        output.WriteFloat(ShadowDistance);
      }
      if (backgroundColor_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(BackgroundColor);
      }
      if (HasCullingMask) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(CullingMask);
      }
      if (customBakedTexture_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(CustomBakedTexture);
      }
      if (bakedTexture_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(BakedTexture);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (component_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Component);
      }
      if (HasEnabled) {
        output.WriteRawTag(16);
        output.WriteBool(Enabled);
      }
      if (HasMode) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Mode);
      }
      if (HasRefreshMode) {
        output.WriteRawTag(32);
        output.WriteEnum((int) RefreshMode);
      }
      if (HasTimeSlicingMode) {
        output.WriteRawTag(40);
        output.WriteEnum((int) TimeSlicingMode);
      }
      if (HasClearFlags) {
        output.WriteRawTag(48);
        output.WriteEnum((int) ClearFlags);
      }
      if (HasImportance) {
        output.WriteRawTag(56);
        output.WriteInt32(Importance);
      }
      if (HasIntensity) {
        output.WriteRawTag(69);
        output.WriteFloat(Intensity);
      }
      if (HasNearClipPlane) {
        output.WriteRawTag(77);
        output.WriteFloat(NearClipPlane);
      }
      if (HasFarClipPlane) {
        output.WriteRawTag(85);
        output.WriteFloat(FarClipPlane);
      }
      if (HasRenderDynamicObjects) {
        output.WriteRawTag(88);
        output.WriteBool(RenderDynamicObjects);
      }
      if (HasBoxProjection) {
        output.WriteRawTag(96);
        output.WriteBool(BoxProjection);
      }
      if (HasBlendDistance) {
        output.WriteRawTag(109);
        output.WriteFloat(BlendDistance);
      }
      if (bounds_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(Bounds);
      }
      if (HasResolution) {
        output.WriteRawTag(120);
        output.WriteInt32(Resolution);
      }
      if (HasHdr) {
        output.WriteRawTag(128, 1);
        output.WriteBool(Hdr);
      }
      if (HasShadowDistance) {
        output.WriteRawTag(141, 1);
        output.WriteFloat(ShadowDistance);
      }
      if (backgroundColor_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(BackgroundColor);
      }
      if (HasCullingMask) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(CullingMask);
      }
      if (customBakedTexture_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(CustomBakedTexture);
      }
      if (bakedTexture_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(BakedTexture);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (component_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Component);
      }
      if (HasEnabled) {
        size += 1 + 1;
      }
      if (HasMode) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Mode);
      }
      if (HasRefreshMode) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RefreshMode);
      }
      if (HasTimeSlicingMode) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TimeSlicingMode);
      }
      if (HasClearFlags) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ClearFlags);
      }
      if (HasImportance) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Importance);
      }
      if (HasIntensity) {
        size += 1 + 4;
      }
      if (HasNearClipPlane) {
        size += 1 + 4;
      }
      if (HasFarClipPlane) {
        size += 1 + 4;
      }
      if (HasRenderDynamicObjects) {
        size += 1 + 1;
      }
      if (HasBoxProjection) {
        size += 1 + 1;
      }
      if (HasBlendDistance) {
        size += 1 + 4;
      }
      if (bounds_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bounds);
      }
      if (HasResolution) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Resolution);
      }
      if (HasHdr) {
        size += 2 + 1;
      }
      if (HasShadowDistance) {
        size += 2 + 4;
      }
      if (backgroundColor_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BackgroundColor);
      }
      if (HasCullingMask) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CullingMask);
      }
      if (customBakedTexture_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CustomBakedTexture);
      }
      if (bakedTexture_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BakedTexture);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ReflectionProbeUpdate other) {
      if (other == null) {
        return;
      }
      if (other.component_ != null) {
        if (component_ == null) {
          Component = new global::PLUME.Sample.Unity.ComponentIdentifier();
        }
        Component.MergeFrom(other.Component);
      }
      if (other.HasEnabled) {
        Enabled = other.Enabled;
      }
      if (other.HasMode) {
        Mode = other.Mode;
      }
      if (other.HasRefreshMode) {
        RefreshMode = other.RefreshMode;
      }
      if (other.HasTimeSlicingMode) {
        TimeSlicingMode = other.TimeSlicingMode;
      }
      if (other.HasClearFlags) {
        ClearFlags = other.ClearFlags;
      }
      if (other.HasImportance) {
        Importance = other.Importance;
      }
      if (other.HasIntensity) {
        Intensity = other.Intensity;
      }
      if (other.HasNearClipPlane) {
        NearClipPlane = other.NearClipPlane;
      }
      if (other.HasFarClipPlane) {
        FarClipPlane = other.FarClipPlane;
      }
      if (other.HasRenderDynamicObjects) {
        RenderDynamicObjects = other.RenderDynamicObjects;
      }
      if (other.HasBoxProjection) {
        BoxProjection = other.BoxProjection;
      }
      if (other.HasBlendDistance) {
        BlendDistance = other.BlendDistance;
      }
      if (other.bounds_ != null) {
        if (bounds_ == null) {
          Bounds = new global::PLUME.Sample.Common.Bounds();
        }
        Bounds.MergeFrom(other.Bounds);
      }
      if (other.HasResolution) {
        Resolution = other.Resolution;
      }
      if (other.HasHdr) {
        Hdr = other.Hdr;
      }
      if (other.HasShadowDistance) {
        ShadowDistance = other.ShadowDistance;
      }
      if (other.backgroundColor_ != null) {
        if (backgroundColor_ == null) {
          BackgroundColor = new global::PLUME.Sample.Common.Color();
        }
        BackgroundColor.MergeFrom(other.BackgroundColor);
      }
      if (other.HasCullingMask) {
        CullingMask = other.CullingMask;
      }
      if (other.customBakedTexture_ != null) {
        if (customBakedTexture_ == null) {
          CustomBakedTexture = new global::PLUME.Sample.Unity.AssetIdentifier();
        }
        CustomBakedTexture.MergeFrom(other.CustomBakedTexture);
      }
      if (other.bakedTexture_ != null) {
        if (bakedTexture_ == null) {
          BakedTexture = new global::PLUME.Sample.Unity.AssetIdentifier();
        }
        BakedTexture.MergeFrom(other.BakedTexture);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (component_ == null) {
              Component = new global::PLUME.Sample.Unity.ComponentIdentifier();
            }
            input.ReadMessage(Component);
            break;
          }
          case 16: {
            Enabled = input.ReadBool();
            break;
          }
          case 24: {
            Mode = (global::PLUME.Sample.Unity.ReflectionProbeMode) input.ReadEnum();
            break;
          }
          case 32: {
            RefreshMode = (global::PLUME.Sample.Unity.ReflectionProbeRefreshMode) input.ReadEnum();
            break;
          }
          case 40: {
            TimeSlicingMode = (global::PLUME.Sample.Unity.ReflectionProbeTimeSlicingMode) input.ReadEnum();
            break;
          }
          case 48: {
            ClearFlags = (global::PLUME.Sample.Unity.ReflectionProbeClearFlags) input.ReadEnum();
            break;
          }
          case 56: {
            Importance = input.ReadInt32();
            break;
          }
          case 69: {
            Intensity = input.ReadFloat();
            break;
          }
          case 77: {
            NearClipPlane = input.ReadFloat();
            break;
          }
          case 85: {
            FarClipPlane = input.ReadFloat();
            break;
          }
          case 88: {
            RenderDynamicObjects = input.ReadBool();
            break;
          }
          case 96: {
            BoxProjection = input.ReadBool();
            break;
          }
          case 109: {
            BlendDistance = input.ReadFloat();
            break;
          }
          case 114: {
            if (bounds_ == null) {
              Bounds = new global::PLUME.Sample.Common.Bounds();
            }
            input.ReadMessage(Bounds);
            break;
          }
          case 120: {
            Resolution = input.ReadInt32();
            break;
          }
          case 128: {
            Hdr = input.ReadBool();
            break;
          }
          case 141: {
            ShadowDistance = input.ReadFloat();
            break;
          }
          case 146: {
            if (backgroundColor_ == null) {
              BackgroundColor = new global::PLUME.Sample.Common.Color();
            }
            input.ReadMessage(BackgroundColor);
            break;
          }
          case 152: {
            CullingMask = input.ReadInt32();
            break;
          }
          case 162: {
            if (customBakedTexture_ == null) {
              CustomBakedTexture = new global::PLUME.Sample.Unity.AssetIdentifier();
            }
            input.ReadMessage(CustomBakedTexture);
            break;
          }
          case 170: {
            if (bakedTexture_ == null) {
              BakedTexture = new global::PLUME.Sample.Unity.AssetIdentifier();
            }
            input.ReadMessage(BakedTexture);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (component_ == null) {
              Component = new global::PLUME.Sample.Unity.ComponentIdentifier();
            }
            input.ReadMessage(Component);
            break;
          }
          case 16: {
            Enabled = input.ReadBool();
            break;
          }
          case 24: {
            Mode = (global::PLUME.Sample.Unity.ReflectionProbeMode) input.ReadEnum();
            break;
          }
          case 32: {
            RefreshMode = (global::PLUME.Sample.Unity.ReflectionProbeRefreshMode) input.ReadEnum();
            break;
          }
          case 40: {
            TimeSlicingMode = (global::PLUME.Sample.Unity.ReflectionProbeTimeSlicingMode) input.ReadEnum();
            break;
          }
          case 48: {
            ClearFlags = (global::PLUME.Sample.Unity.ReflectionProbeClearFlags) input.ReadEnum();
            break;
          }
          case 56: {
            Importance = input.ReadInt32();
            break;
          }
          case 69: {
            Intensity = input.ReadFloat();
            break;
          }
          case 77: {
            NearClipPlane = input.ReadFloat();
            break;
          }
          case 85: {
            FarClipPlane = input.ReadFloat();
            break;
          }
          case 88: {
            RenderDynamicObjects = input.ReadBool();
            break;
          }
          case 96: {
            BoxProjection = input.ReadBool();
            break;
          }
          case 109: {
            BlendDistance = input.ReadFloat();
            break;
          }
          case 114: {
            if (bounds_ == null) {
              Bounds = new global::PLUME.Sample.Common.Bounds();
            }
            input.ReadMessage(Bounds);
            break;
          }
          case 120: {
            Resolution = input.ReadInt32();
            break;
          }
          case 128: {
            Hdr = input.ReadBool();
            break;
          }
          case 141: {
            ShadowDistance = input.ReadFloat();
            break;
          }
          case 146: {
            if (backgroundColor_ == null) {
              BackgroundColor = new global::PLUME.Sample.Common.Color();
            }
            input.ReadMessage(BackgroundColor);
            break;
          }
          case 152: {
            CullingMask = input.ReadInt32();
            break;
          }
          case 162: {
            if (customBakedTexture_ == null) {
              CustomBakedTexture = new global::PLUME.Sample.Unity.AssetIdentifier();
            }
            input.ReadMessage(CustomBakedTexture);
            break;
          }
          case 170: {
            if (bakedTexture_ == null) {
              BakedTexture = new global::PLUME.Sample.Unity.AssetIdentifier();
            }
            input.ReadMessage(BakedTexture);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
